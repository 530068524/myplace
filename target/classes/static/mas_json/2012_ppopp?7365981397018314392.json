{"title": "A GPU implementation of inclusion-based points-to analysis.", "fields": ["power graph analysis", "multi core processor", "cuda", "spite", "speedup"], "abstract": "Graphics Processing Units (GPUs) have emerged as powerful accelerators for many  regular  algorithms that operate on dense arrays and matrices. In contrast, we know relatively little about using GPUs to accelerate highly  irregular  algorithms that operate on pointer-based data structures such as graphs. For the most part, research has focused on GPU implementations of graph analysis algorithms that do not modify the structure of the graph, such as algorithms for breadth-first search and strongly-connected components.   In this paper, we describe a high-performance GPU implementation of an important graph algorithm used in compilers such as gcc and LLVM: Andersen-style inclusion-based points-to analysis. This algorithm is challenging to parallelize effectively on GPUs because it makes extensive modifications to the structure of the underlying graph and performs relatively little computation. In spite of this, our program, when executed on a 14 Streaming Multiprocessor GPU, achieves an average speedup of 7x compared to a sequential CPU implementation and outperforms a parallel implementation of the same algorithm running on 16 CPU cores.   Our implementation provides general insights into how to produce high-performance GPU implementations of graph algorithms, and it highlights key differences between optimizing parallel programs for multicore CPUs and for GPUs.", "citation": "Citations (87)", "year": "2012", "departments": ["University of Texas at Austin", "Texas State University", "University of Texas at Austin"], "conf": "ppopp", "authors": ["Mario M\u00e9ndez-Lojo.....http://dblp.org/pers/hd/m/M=eacute=ndez=Lojo:Mario", "Martin Burtscher.....http://dblp.org/pers/hd/b/Burtscher:Martin", "Keshav Pingali.....http://dblp.org/pers/hd/p/Pingali:Keshav"], "pages": 10}