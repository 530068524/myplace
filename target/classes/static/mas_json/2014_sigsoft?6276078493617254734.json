{"title": "Software maintenance like maintenance in other engineering disciplines.", "fields": ["package development process", "resource oriented architecture", "software sizing", "software engineering process group", "backporting"], "abstract": "abstract Software maintenance exhibits many differences regarding how other engineering disciplines carry out maintenance on their artifacts. Such dissimilarity is caused due to the fact that it is easy to get a copy from the original artifact to be used in maintenance, and also because the flat dimension of the software text facilitates access to the components by simply using a text editor. Other engineering disciplines resort to different artifact versions (obtained by dissassembling) where the introduction of modifications (previous comprehension) is easier. After which the artifact is reassembled. In software engineering this approach can be simulated by combining program transformation techniques, search-based software engineering technology and design attributes. %%This easiness (absent in the other engineering sciences) as well as the intangible software nature can lead to the belief %%that a software maintenance model similar to those of the other engineering sciences is unnecessary or unfeasible. %%This paper states the opposite, and as a consequence, an entirely new and more robust software maintenance model emerges. abstract", "citation": "Not cited", "departments": ["Universidad Cat ... ero, Argentina"], "authors": ["Gustavo Villavicencio.....http://dblp.org/pers/hd/v/Villavicencio:Gustavo"], "conf": "sigsoft", "year": "2014", "pages": 4}