{"title": "Fine-grained and accurate source code differencing.", "fields": ["program comprehension", "granularity", "abstract syntax tree", "software evolution", "software system"], "abstract": "At the heart of software evolution is a sequence of edit actions, called an  edit script , made to a source code file. Since software systems are stored version by version, the edit script has to be computed from these versions, which is known as a complex task. Existing approaches usually compute edit scripts at the text granularity with only  add line  and  delete line  actions. However, inferring syntactic changes from such an edit script is hard. Since moving code is a frequent action performed when editing code, it should also be taken into account. In this paper, we tackle these issues by introducing an algorithm computing edit scripts at the abstract syntax tree granularity including move actions. Our objective is to compute edit scripts that are short and close to the original developer intent. Our algorithm is implemented in a freely-available and extensible tool that has been intensively validated.", "citation": "Citations (108)", "departments": ["University of Bordeaux", "University of Bordeaux", "University of Bordeaux", "university of lille", "university of lille"], "authors": ["Jean-R\u00e9my Falleri.....http://dblp.org/pers/hd/f/Falleri:Jean=R=eacute=my", "Flor\u00e9al Morandat.....http://dblp.org/pers/hd/m/Morandat:Flor=eacute=al", "Xavier Blanc.....http://dblp.org/pers/hd/b/Blanc_0001:Xavier", "Matias Martinez.....http://dblp.org/pers/hd/m/Martinez:Matias", "Martin Monperrus.....http://dblp.org/pers/hd/m/Monperrus:Martin"], "conf": "kbse", "year": "2014", "pages": 12}