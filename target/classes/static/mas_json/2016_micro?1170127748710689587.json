{"title": "Lazy release consistency for GPUs.", "fields": ["release consistency", "power graph analysis", "heterogeneous system architecture", "memory model", "work stealing"], "abstract": "The heterogeneous-race-free (HRF) memory model has been embraced by the Heterogeneous System Architecture (HSA) Foundation and OpenCL \u2122  because it clearly and precisely defines the behavior of current GPUs. However, compared to the simpler SC for DRF memory model, HRF has two shortcomings. The first is that HRF requires programmers to label atomic memory operations with the correct scope of synchronization. This explicit labeling can save significant coherence overhead when synchronization is local, but it is tedious and error-prone. The second shortcoming is that HRF restricts important dynamic data sharing patterns like work stealing. Prior work on remote-scope promotion (RSP) attempted to resolve the second shortcoming. However, RSP further complicates the memory model and no scalable implementation of RSP has been proposed. For example, we found that the previously proposed RSP implementation actually results in slowdowns of up to 30% on large GPUs, compared to a naive baseline system that forgoes work stealing and scopes. Meanwhile, DeNovo has been shown to offer efficient synchronization with an SC for DRF memory model, performing on average 21% better than our baseline system, but it introduces additional overheads to maintain ownership of all modified data.   To resolve these deficiencies, we propose to adapt lazy release consistency---previously only proposed for homogeneous CPU systems---to a heterogeneous system. Our approach, called hLRC, uses a DeNovo-like mechanism to track ownership of synchronization variables, lazily performing coherence actions only when a synchronization variable changes locations. hLRC allows GPU programmers to use the simpler SC for DRF memory model without tracking ownership for all modified data. Our evaluation shows that lazy release consistency provides robust performance improvement across a set of work-stealing graph analysis applications---29% on average versus the baseline system.", "citation": "Citations (6)", "departments": ["University of Illinois at Urbana\u2013Champaign", "University of Wisconsin-Madison", "Advanced Micro Devices", "University of Wisconsin-Madison"], "authors": ["Johnathan Alsop.....http://dblp.org/pers/hd/a/Alsop:Johnathan", "Marc S. Orr.....http://dblp.org/pers/hd/o/Orr:Marc_S=", "Bradford M. Beckmann.....http://dblp.org/pers/hd/b/Beckmann:Bradford_M=", "David A. Wood.....http://dblp.org/pers/hd/w/Wood:David_A="], "conf": "micro", "year": "2016", "pages": 13}