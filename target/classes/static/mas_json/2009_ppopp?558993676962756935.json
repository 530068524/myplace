{"title": "Backtracking-based load balancing.", "fields": ["distributed memory", "cilk", "thread", "distributed shared memory", "work stealing"], "abstract": "High-productivity languages for parallel computing become more important as parallel environments including multicores become more common. Cilk is such a language. It provides good load balancing for many applications including irregular ones; that is, it keeps all workers busy by creating plenty of \"logical\" threads and adopting the oldest-first work stealing strategy. This paper proposes a \"logical thread\"-free framework called  Tascell , which achieves a higher performance and supports a wider range of parallel environments including clusters without loss of productivity. A Tascell worker spawns a \"real\" task only when requested by another idle worker. The worker performs the spawning by temporarily \"backtracking\" and restoring its oldest task-spawnable state. Our approach eliminates the cost of spawning/managing logical threads. It also promotes the reuse of workspaces and improves the locality of reference since it does not need to prepare a workspace for each concurrently runnable logical thread. Furthermore, Tascell enables elegant and highly-efficient backtrack search algorithms with delayed workspace copying. For instance, our 16-queens problem solver is 1.86 times faster than Cilk on a system with two dual-core processors. Our approach also enables a single program to run in both shared and distributed memory environments with reasonable efficiency and scalability.", "citation": "Citations (30)", "year": "2009", "departments": ["Kyoto University", "Kyoto University", "Kyoto University", "Kyoto University"], "conf": "ppopp", "authors": ["Tasuku Hiraishi.....http://dblp.org/pers/hd/h/Hiraishi:Tasuku", "Masahiro Yasugi.....http://dblp.org/pers/hd/y/Yasugi:Masahiro", "Seiji Umatani.....http://dblp.org/pers/hd/u/Umatani:Seiji", "Taiichi Yuasa.....http://dblp.org/pers/hd/y/Yuasa:Taiichi"], "pages": 10}