{"title": "SMT-Based Modular Analysis of Sequential Systems Code.", "fields": ["type safety", "linked list", "pointer", "exploit", "heap"], "abstract": "In this paper, we describe a few challenges that accompany SMT-based precise verification of systems code (device drivers, file systems) written in low-level languages such as C/C++. First, the presence of pointer arithmetic and untrusted casts make type checking difficult; we show how to formalize C type safety checking and exploit the types for disambiguation of addresses in the heap. Second, the prevalence of explicit manipulation of pointers in data structures using dereference and address arithmetic precludes abstract reasoning about data structures.We provide an expressive and efficient theory for reasoning about linked lists, which comprise most data structures in systems code. We discuss extensions to standard SMT solvers to tackle these issues in the context of the HAVOC verifier.", "citation": "Citations (2)", "year": "2011", "departments": ["Microsoft"], "conf": "cav", "authors": ["Shuvendu K. Lahiri.....http://dblp.org/pers/hd/l/Lahiri:Shuvendu_K="], "pages": 7}