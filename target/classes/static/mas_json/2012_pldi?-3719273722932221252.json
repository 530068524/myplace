{"title": "Dynamic trace-based analysis of vectorization potential of applications.", "fields": ["order of operations", "vectorization", "dynamic data", "simd"], "abstract": "Recent hardware trends with GPUs and the increasing vector lengths of SSE-like ISA extensions for multicore CPUs imply that effective exploitation of SIMD parallelism is critical for achieving high performance on emerging and future architectures. A vast majority of existing applications were developed without any attention by their developers towards effective vectorizability of the codes. While developers of production compilers such as GNU gcc, Intel icc, PGI pgcc, and IBM xlc have invested considerable effort and made significant advances in enhancing automatic vectorization capabilities, these compilers still cannot effectively vectorize many existing scientific and engineering codes. It is therefore of considerable interest to analyze existing applications to assess the inherent latent potential for SIMD parallelism, exploitable through further compiler advances and/or via manual code changes.   In this paper we develop an approach to infer a program's SIMD parallelization potential by analyzing the dynamic data-dependence graph derived from a sequential execution trace. By considering only the observed run-time data dependences for the trace, and by relaxing the execution order of operations to allow any dependence-preserving reordering, we can detect potential SIMD parallelism that may otherwise be missed by more conservative compile-time analyses. We show that for several benchmarks our tool discovers regions of code within computationally-intensive loops that exhibit high potential for SIMD parallelism but are not vectorized by state-of-the-art compilers. We present several case studies of the use of the tool, both in identifying opportunities to enhance the transformation capabilities of vectorizing compilers, as well as in pointing to code regions to manually modify in order to enable auto-vectorization and performance improvement by existing compilers.", "citation": "Citations (59)", "departments": ["Ohio State University", "Ohio State University", "Ohio State University", "Ohio State University", "Ohio State University"], "authors": ["Justin Holewinski.....http://dblp.org/pers/hd/h/Holewinski:Justin", "Ragavendar Ramamurthi.....http://dblp.org/pers/hd/r/Ramamurthi:Ragavendar", "Mahesh Ravishankar.....http://dblp.org/pers/hd/r/Ravishankar:Mahesh", "Naznin Fauzia.....http://dblp.org/pers/hd/f/Fauzia:Naznin", "Louis-No\u00ebl Pouchet.....http://dblp.org/pers/hd/p/Pouchet:Louis=No=euml=l", "Atanas Rountev.....http://dblp.org/pers/hd/r/Rountev:Atanas", "P. Sadayappan.....http://dblp.org/pers/hd/s/Sadayappan:P="], "conf": "pldi", "year": "2012", "pages": 12}