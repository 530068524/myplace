{"title": "Regent: a high-productivity programming language for HPC with logical regions.", "fields": ["implementation", "runtime system", "supercomputer", "regent", "optimizing compiler"], "abstract": "We present Regent, a high-productivity programming language for high performance computing with logical regions. Regent users compose programs with tasks (functions eligible for parallel execution) and logical regions (hierarchical collections of structured objects). Regent programs appear to execute sequentially, require no explicit synchronization, and are trivially deadlock-free. Regent's type system catches many common classes of mistakes and guarantees that a program with correct serial execution produces identical results on parallel and distributed machines. We present an optimizing compiler for Regent that translates Regent programs into efficient implementations for Legion, an asynchronous task-based model. Regent employs several novel compiler optimizations to minimize the dynamic overhead of the runtime system and enable efficient operation. We evaluate Regent on three benchmark applications and demonstrate that Regent achieves performance comparable to hand-tuned Legion.", "citation": "Citations (17)", "year": "2015", "departments": ["Stanford University", "Stanford University", "Stanford University", "Nvidia", "Stanford University"], "conf": "sc", "authors": ["Elliott Slaughter.....http://dblp.org/pers/hd/s/Slaughter:Elliott", "Wonchan Lee.....http://dblp.org/pers/hd/l/Lee:Wonchan", "Sean Treichler.....http://dblp.org/pers/hd/t/Treichler:Sean", "Michael Bauer.....http://dblp.org/pers/hd/b/Bauer:Michael", "Alex Aiken.....http://dblp.org/pers/hd/a/Aiken:Alex"], "pages": 12}