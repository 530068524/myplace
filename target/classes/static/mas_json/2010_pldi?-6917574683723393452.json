{"title": "Parameterized verification of transactional memories.", "fields": ["software transactional memory", "transactional memory", "software verification", "commitment ordering", "serializability"], "abstract": "We describe an automatic verification method to check whether transactional memories ensure strict serializability a key property assumed of the transactional interface. Our main contribution is a technique for effectively verifying parameterized systems. The technique merges ideas from parameterized hardware and protocol verification--verification by invisible invariants and symmetry reduction--with ideas from software verification--template-based invariant generation and satisfiability checking for quantified formulae (modulo theories). The combination enables us to precisely model and analyze unbounded systems while taming state explosion.   Our technique enables automated proofs that two-phase locking (TPL), dynamic software transactional memory (DSTM), and transactional locking II (TL2) systems ensure strict serializability. The verification is challenging since the systems are unbounded in several dimensions: the number and length of concurrently executing transactions, and the size of the shared memory they access, have no finite limit. In contrast, state-of-the-art software model checking tools such as BLAST and TVLA are unable to validate either system, due to inherent expressiveness limitations or state explosion.", "citation": "Citations (14)", "departments": ["University of California, Los Angeles", "University of California, Los Angeles", "University of California, Los Angeles"], "authors": ["Michael Emmi.....http://dblp.org/pers/hd/e/Emmi:Michael", "Rupak Majumdar.....http://dblp.org/pers/hd/m/Majumdar:Rupak", "Roman Manevich.....http://dblp.org/pers/hd/m/Manevich:Roman"], "conf": "pldi", "year": "2010", "pages": 12}