{"title": "Monitoring refinement via symbolic reasoning.", "fields": ["implementation", "exploit", "linearizability", "limiting", "semaphore"], "abstract": "Efficient implementations of concurrent objects such as semaphores, locks, and atomic collections are essential to modern computing. Programming such objects is error prone: in minimizing the synchronization overhead between concurrent object invocations, one risks the conformance to reference implementations \u2014 or in formal terms, one risks violating observational refinement. Precisely testing this refinement even within a single execution is intractable, limiting existing approaches to executions with very few object invocations. We develop scalable and effective algorithms for detecting refinement violations. Our algorithms are founded on incremental, symbolic reasoning, and exploit foundational insights into the refinement-checking problem. Our approach is sound, in that we detect only actual violations, and scales far beyond existing violation-detection algorithms. Empirically, we find that our approach is practically complete, in that we detect the violations arising in actual executions.", "citation": "Citations (4)", "departments": ["IMDEA", "University of Paris", "University of Paris"], "authors": ["Michael Emmi.....http://dblp.org/pers/hd/e/Emmi:Michael", "Constantin Enea.....http://dblp.org/pers/hd/e/Enea:Constantin", "Jad Hamza.....http://dblp.org/pers/hd/h/Hamza:Jad"], "conf": "pldi", "year": "2015", "pages": 10}