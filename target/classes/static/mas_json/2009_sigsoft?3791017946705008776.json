{"title": "Symbolic pruning of concurrent program executions.", "fields": ["permutation", "equivalence class", "equivalence", "solver", "partial order reduction"], "abstract": "We propose a new algorithm for verifying concurrent programs, which uses concrete executions to partition the program into a set of lean partitions called concurrent trace programs (CTPs), and symbolically verifies each CTP using a satisfiability solver. A CTP, derived from a concrete execution trace, implicitly captures all permutations of the trace that also respect the control flow of the program. We show that a CTP, viewed as a coarser equivalence class than the popular (Mazurkiewicz) trace equivalence in partial order reduction (POR) literature, leads to more effective pruning of the search space during model checking. While classic POR can prune away redundant interleavings within each trace equivalence class, the pruning in POR is not property driven. We use symbolic methods to achieve property-driven pruning. The effort of exploration is distributed between a symbolic component (verification of a particular CTP) and an enumerative component (exploration of the space of CTPs). We show that the proposed method facilitates more powerful pruning of the search space during the enumerative exploration.", "citation": "Citations (33)", "departments": ["Princeton University", "Pennsylvania State University", "Princeton University", "University of Utah"], "authors": ["Chao Wang.....http://dblp.org/pers/hd/w/Wang_0001:Chao", "Swarat Chaudhuri.....http://dblp.org/pers/hd/c/Chaudhuri:Swarat", "Aarti Gupta.....http://dblp.org/pers/hd/g/Gupta:Aarti", "Yu Yang.....http://dblp.org/pers/hd/y/Yang:Yu"], "conf": "sigsoft", "year": "2009", "pages": 10}