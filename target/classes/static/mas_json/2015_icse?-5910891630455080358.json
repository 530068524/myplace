{"title": "TypeDevil: Dynamic Type Inconsistency Analysis for JavaScript.", "fields": ["program analysis", "javascript", "correctness", "regression testing", "spurious relationship"], "abstract": "Dynamic languages, such as JavaScript, give programmers the freedom to ignore types, and enable them to write concise code in short time. Despite this freedom, many programs follow implicit type rules, for example, that a function has a particular signature or that a property has a particular type. Violations of such implicit type rules often correlate with problems in the program. This paper presents Type Devil, a mostly dynamic analysis that warns developers about inconsistent types. The key idea is to assign a set of observed types to each variable, property, and function, to merge types based in their structure, and to warn developers about variables, properties, and functions that have inconsistent types. To deal with the pervasiveness of polymorphic behavior in real-world JavaScript programs, we present a set of techniques to remove spurious warnings and to merge related warnings. Applying Type Devil to widely used benchmark suites and real-world web applications reveals 15 problematic type inconsistencies, including correctness problems, performance problems, and dangerous coding practices.", "citation": "Citations (24)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Michael Pradel.....http://dblp.org/pers/hd/p/Pradel:Michael", "Parker Schuh.....http://dblp.org/pers/hd/s/Schuh:Parker", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "icse", "year": "2015", "pages": 11}