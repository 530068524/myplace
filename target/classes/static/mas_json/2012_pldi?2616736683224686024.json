{"title": "Synthesising graphics card programs from DSLs.", "fields": ["implementation", "recursion", "program synthesis", "general purpose computing on graphics processing units", "code generation"], "abstract": "Over the last five years, graphics cards have become a tempting target for scientific computing, thanks to unrivaled peak performance, often producing a runtime speed-up of x10 to x25 over comparable CPU solutions.   However, this increase can be difficult to achieve, and doing so often requires a fundamental rethink. This is especially problematic in scientific computing, where experts do not want to learn yet another architecture.   In this paper we develop a method for automatically parallelising recursive functions of the sort found in scientific papers. Using a static analysis of the function dependencies we identify sets - partitions - of independent elements, which we use to synthesise an efficient GPU implementation using polyhedral code generation techniques. We then augment our language with DSL extensions to support a wider variety of applications, and demonstrate the effectiveness of this with three case studies, showing significant performance improvement over equivalent CPU methods, and similar efficiency to hand-tuned GPU implementations.", "citation": "Citations (3)", "departments": ["University of Oxford", "University of Oxford", "University of Oxford"], "authors": ["Luke Cartey.....http://dblp.org/pers/hd/c/Cartey:Luke", "Rune Lyngs\u00f8.....http://dblp.org/pers/hd/l/Lyngs=oslash=:Rune", "Oege de Moor.....http://dblp.org/pers/hd/m/Moor:Oege_de"], "conf": "pldi", "year": "2012", "pages": 12}