{"title": "Best practices in extreme programming course design.", "fields": ["best practice", "agile software development", "curriculum", "extreme programming", "software"], "abstract": "Teaching (and therefore learning) extreme programming (XP) in a university setting is difficult because of course time limitations and the soft nature of XP that requires first-hand experience in order to see and really learn the methods. For example, iterations are either shorter or fewer than appropriate. In this paper we present the properties to tune when designing an eXtreme programming course. These are the properties we gathered by conducting three XP labs as part of our software engineering teaching. Within this paper we describe our set-up as well as the important properties. Lecturers and teachers can use this property system and combine it with their own constraints in order to derive a better XP lab for their curriculum.", "citation": "Citations (23)", "departments": ["FG Software Eng ... nnover, Hanover", "FG Software Eng ... nnover, Hanover", "FG Software Eng ... nnover, Hanover"], "authors": ["Kai Stapel.....http://dblp.org/pers/hd/s/Stapel:Kai", "Daniel L\u00fcbke.....http://dblp.org/pers/hd/l/L=uuml=bke:Daniel", "Eric Knauss.....http://dblp.org/pers/hd/k/Knauss:Eric"], "conf": "icse", "year": "2008", "pages": 8}