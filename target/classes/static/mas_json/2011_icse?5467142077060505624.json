{"title": "Mining message sequence graphs.", "fields": ["program comprehension", "precision and recall", "unified modeling language", "message sequence chart", "learning automata"], "abstract": "Dynamic specification mining involves discovering software behavior from traces for the purpose of program comprehension and bug detection. However, mining program behavior from execution traces is difficult for concurrent/distributed programs. Specifically, the inherent partial order relationships among events occurring across processes pose a big challenge to specification mining. In this paper, we propose a framework for mining partial orders so as to understand concurrent program behavior. Our miner takes in a set of concurrent program traces, and produces a message sequence graph (MSG) to represent the concurrent program behavior. An MSG represents a graph where the nodes of the graph are partial orders, represented as Message Sequence Charts. Mining an MSG allows us to understand concurrent program behaviors since the nodes of the MSG depict important \"phases\" or \"interaction snippets\" involving several concurrently executing processes. To demonstrate the power of this technique, we conducted experiments on mining behaviors of several fairly complex distributed systems. We show that our miner can produce the corresponding MSGs with both high precision and recall.", "citation": "Citations (25)", "departments": ["National University of Singapore", "National University of Singapore", "National University of Singapore", "Singapore Management University"], "authors": ["Sandeep Kumar.....http://dblp.org/pers/hd/k/Kumar:Sandeep", "Siau-Cheng Khoo.....http://dblp.org/pers/hd/k/Khoo:Siau=Cheng", "Abhik Roychoudhury.....http://dblp.org/pers/hd/r/Roychoudhury:Abhik", "David Lo.....http://dblp.org/pers/hd/l/Lo_0001:David"], "conf": "icse", "year": "2011", "pages": 10}