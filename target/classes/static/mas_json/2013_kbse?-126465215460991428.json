{"title": "The bounded model checker LLBMC.", "fields": ["bounded function", "compiler", "code refactoring", "memory model", "program optimization"], "abstract": "This paper presents LLBMC, a tool for finding bugs and runtime errors in sequential C/C++ programs. LLBMC employs bounded model checking using an SMT-solver for the theory of bitvectors and arrays and thus achieves precision down to the level of single bits. The two main features of LLBMC that distinguish it from other bounded model checking tools for C/C++ are ( i ) its bit-precise memory model, which makes it possible to support arbitrary type conversions via stores and loads; and ( ii ) that it operates on a compiler intermediate representation and not directly on the source code.", "citation": "Citations (13)", "year": "2013", "departments": ["Karlsruhe Institute of Technology", "Karlsruhe Institute of Technology", "Karlsruhe Institute of Technology"], "conf": "kbse", "authors": ["Stephan Falke.....http://dblp.org/pers/hd/f/Falke_0001:Stephan", "Florian Merz.....http://dblp.org/pers/hd/m/Merz_0001:Florian", "Carsten Sinz.....http://dblp.org/pers/hd/s/Sinz:Carsten"], "pages": 4}