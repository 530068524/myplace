{"title": "Regrowing a language: refactoring tools allow programming languages to evolve.", "fields": ["comparison of multi paradigm programming languages", "fortran", "third generation programming language", "code refactoring", "second generation programming language"], "abstract": "Successful programming languages change as they age. They tend to become more complex, and eventually some features become outdated or are rarely used. Programming tools for these languages become more complex as well, since they have to support archaic features. Old programs are hard to maintain, since these archaic features are unfamiliar to modern programmers. These problems can be solved by refactoring tools that can transform programs to use the modern form. We show that refactoring tools can ease the cost of program evolution by examining the evolution of two languages, Fortran and Java, and showing that each change corresponds to an automatable refactoring.", "citation": "Citations (9)", "year": "2009", "departments": ["University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign"], "conf": "oopsla", "authors": ["Jeffrey L. Overbey.....http://dblp.org/pers/hd/o/Overbey:Jeffrey_L=", "Ralph E. Johnson.....http://dblp.org/pers/hd/j/Johnson:Ralph_E="], "pages": 10}