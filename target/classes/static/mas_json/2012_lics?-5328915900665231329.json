{"title": "On Building Constructive Formal Theories of Computation Noting the Roles of Turing, Church, and Brouwer.", "fields": ["intuitionism", "constructivism", "theory of computation", "logic in computer science", "constructive"], "abstract": "In this article I will examine a few key concepts and design decisions that account for the high value of implemented constructive type theories in computer science. I'll stress the historical fact that these theories, and the proof assistants that animate them, were born from a strong partnership linking computer science, logic, and mathematics. I will recall how modern type theory researchers built on deep insights from the earliest pioneers: Turing -- the first computer scientist, Church -- the patriarch of logic in computer science, and Brouwer -- a singular pioneer of intuitionism and constructive mathematics. They created solid intellectual ground on which to build a formal implemented constructive theory of computation whose influence will be felt well beyond computing and information science alone. All generations of constructive type theory researchers since this beginning have had leaders from all three disciplines. Much of the seminal modern work creating these type theories and their proof assistants was presented in LICS proceedings, and LICS could be a natural home for future work in this flourishing area which is the epitome of logic in computer science.", "citation": "Citations (3)", "departments": ["Cornell University"], "authors": ["Robert L. Constable.....http://dblp.org/pers/hd/c/Constable:Robert_L="], "conf": "lics", "year": "2012", "pages": 7}