{"title": "Tool support for essential use cases to better capture software requirements.", "fields": ["requirement prioritization", "non functional testing", "requirements elicitation", "requirement", "requirements management"], "abstract": "Capturing software requirements from clients often leads to error prone and vague requirements documents. To surmount this issue, requirements engineers often choose to use UML models to capture their requirements. In this paper we discuss the use of Essential Use Cases (EUCs) as an alternative, user-centric representation which was developed to ease the process of capturing and describing requirements. However, EUCs are not commonly used in practice because, to our knowledge, no suitable tool support has been developed. In addition, requirements engineers face difficulties in finding the correct \"essential\" requirements (abstract interactions) in a time efficient manner. In order to overcome these problems, we have developed a prototype tool for automated tracing of abstract interactions. We describe the tool and compare the performance and correctness of the results provided by it to that of manual essential use case extraction efforts by a group of requirements engineers. The results of an end user study of the tool's usefulness and ease of use are also discussed.", "citation": "Citations (19)", "year": "2010", "departments": ["University of Auckland", "Swinburne University of Technology", "University of Auckland"], "conf": "kbse", "authors": ["Massila Kamalrudin.....http://dblp.org/pers/hd/k/Kamalrudin:Massila", "John C. Grundy.....http://dblp.org/pers/hd/g/Grundy:John_C=", "John G. Hosking.....http://dblp.org/pers/hd/h/Hosking:John_G="], "pages": 10}