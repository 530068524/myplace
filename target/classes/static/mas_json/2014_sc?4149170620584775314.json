{"title": "Fence Scoping.", "fields": ["memory ordering", "hinge", "real time computing", "ranging", "parallel computing"], "abstract": "We observe that fence instructions used by programmers are usually only intended to order memory accesses within a limited scope. Based on this observation, we propose the concept fence scope which defines the scope within which a fence enforces the order of memory accesses, called scoped fence (S-Fence). S-Fence is a customizable fence, which enables programmers to express ordering demands by specifying the scope of fences when they only want to order part of memory accesses. At runtime, hardware uses the scope information conveyed by programmers to execute fence instructions in a manner that imposes fewer memory ordering constraints than a traditional fence, and hence improves program performance. Our experimental results show that the benefit of S-Fence hinges on the characteristics of applications and hardware parameters. A group of lock-free algorithms achieve peak speedups ranging from 1.13x to 1.34x, while full applications achieve speedups ranging from 1.04x to 1.23x.", "citation": "Citations (8)", "year": "2014", "departments": ["University of California, Riverside", "University of Edinburgh", "University of California, Riverside"], "conf": "sc", "authors": ["Changhui Lin.....http://dblp.org/pers/hd/l/Lin:Changhui", "Vijay Nagarajan.....http://dblp.org/pers/hd/n/Nagarajan:Vijay", "Rajiv Gupta.....http://dblp.org/pers/hd/g/Gupta_0001:Rajiv"], "pages": 12}