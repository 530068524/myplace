{"title": "Program Equivalence is Coinductive.", "fields": ["normalization property", "transition system", "computational model", "coinduction", "model of computation"], "abstract": "We describe computational models, notably Turing and counter machines, as state transition systems with side effects. Side effects are expressed via an algebraic signature and interpreted over comodels for that signature: comodels describe the memory model while the transition system captures the control structure. Equational reasoning over comodels is known to be subtle. We identify a criterion on equational theories and classes of comodels that guarantees completeness, over the given class of comodels, of the standard equational calculus, and show that this criterion is satisfied in our leading examples. Based on a complete equational axiomatization of the memory (co)model, we then give a complete inductive-coinductive calculus for simulation between states, where a state simulates another if it has at least the same terminating computations, with the same cumulative effect on global state. Extensional equivalence of computations can then be expressed as mutual simulation. The crucial use of coinduction is to deal with non-termination of the simulated computation where the coinductive rule permits infinite unfolding.", "citation": "Not cited", "departments": ["Australian National University", "University of Erlangen-Nuremberg"], "authors": ["Dirk Pattinson.....http://dblp.org/pers/hd/p/Pattinson:Dirk", "Lutz Schr\u00f6der.....http://dblp.org/pers/hd/s/Schr=ouml=der:Lutz"], "conf": "lics", "year": "2016", "pages": 10}