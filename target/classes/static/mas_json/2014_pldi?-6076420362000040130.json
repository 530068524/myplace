{"title": "Hybrid top-down and bottom-up interprocedural analysis.", "fields": ["java", "computation", "swift", "reuse", "division by zero"], "abstract": "Interprocedural static analyses are broadly classified into top-down and bottom-up, depending upon how they compute, instantiate, and reuse procedure summaries. Both kinds of analyses are challenging to scale: top-down analyses are hindered by ineffective reuse of summaries whereas bottom-up analyses are hindered by inefficient computation and instantiation of summaries. This paper presents a hybrid approach Swift that combines top-down and bottom-up analyses in a manner that gains their benefits without suffering their drawbacks. Swift is general in that it is parametrized by the top-down and bottom-up analyses it combines. We show an instantiation of Swift on a type-state analysis and evaluate it on a suite of 12 Java programs of size 60-250 KLOC each. Swift outperforms both conventional approaches, finishing on all the programs while both of those approaches fail on the larger programs.", "citation": "Citations (12)", "departments": ["Georgia Institute of Technology", "Georgia Institute of Technology", "Georgia Institute of Technology", "University of Oxford"], "authors": ["Xin Zhang.....http://dblp.org/pers/hd/z/Zhang:Xin", "Ravi Mangal.....http://dblp.org/pers/hd/m/Mangal:Ravi", "Mayur Naik.....http://dblp.org/pers/hd/n/Naik:Mayur", "Hongseok Yang.....http://dblp.org/pers/hd/y/Yang:Hongseok"], "conf": "pldi", "year": "2014", "pages": 10}