{"title": "I/O efficient: computing SCCs in massive graphs.", "fields": ["voltage graph", "factor critical graph", "spqr tree", "feedback arc set", "moral graph", "simplex graph", "transpose graph", "complement graph"], "abstract": "A strongly connected component (SCC) is a maximal subgraph of a directed graph  G  in which every pair of nodes are reachable from each other in the SCC. With such a property, a general directed graph can be represented by a directed acyclic graph  DAG  by contracting an SCC of  G  to a node in  DAG . In many real applications that need graph pattern matching, topological sorting, or reachability query processing, the best way to deal with a general directed graph is to deal with its  DAG  representation. Therefore, finding all SCCs in a directed graph  G  is a critical operation. The existing in-memory algorithms based on depth first search ( DFS ) can find all SCCs in linear time w.r.t. the size of a graph. However, when a graph cannot resident entirely in the main memory, the existing external or semi-external algorithms to find all SCCs have limitation to achieve high I/O efficiency. In this paper, we study new I/O efficient semi-external algorithms to find all SCCs for a massive directed graph  G  that cannot reside in main memory entirely. To overcome the deficiency of the existing  DFS  based semi-external algorithm that heavily relies on a total order, we explore a weak order based on which we investigate new algorithms. We propose a new two phase algorithm, namely, tree construction and tree search. In the tree construction phase, a spanning tree of  G  can be constructed in bounded sequential scans of  G . In the tree search phase, it needs to sequentially scan the graph once to find all SCCs. In addition, we propose a new single phase algorithm, which combines the tree construction and tree search phases into a single phase, with three new optimization techniques. They are early acceptance, early rejection, and batch processing. By the single phase algorithm with the new optimization techniques, we can significantly reduce the number of I/Os and CPU cost. We conduct extensive experimental studies using 4 real datasets including a massive real dataset, and several synthetic datasets to confirm the I/O efficiency of our approaches.", "citation": "Not cited", "year": "2013", "departments": ["The Chinese University of Hong Kong", "The Chinese University of Hong Kong", "The Chinese University of Hong Kong", "University of New South Wales", "University of New South Wales", "The Chinese University of Hong Kong", "The Chinese University of Hong Kong", "University of Technology, Sydney", "University of New South Wales", "University of New South Wales"], "conf": "sigmod", "authors": ["Zhiwei Zhang.....http://dblp.org/pers/hd/z/Zhang:Zhiwei", "Jeffrey Xu Yu.....http://dblp.org/pers/hd/y/Yu:Jeffrey_Xu", "Lu Qin.....http://dblp.org/pers/hd/q/Qin:Lu", "Lijun Chang.....http://dblp.org/pers/hd/c/Chang:Lijun", "Xuemin Lin.....http://dblp.org/pers/hd/l/Lin:Xuemin"], "pages": 12}