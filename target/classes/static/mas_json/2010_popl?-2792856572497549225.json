{"title": "A simple, verified validator for software pipelining.", "fields": ["loop fission", "loop inversion", "loop optimization", "software pipelining", "loop nest optimization"], "abstract": "Software pipelining is a loop optimization that overlaps the execution of several iterations of a loop to expose more instruction-level parallelism. It can result in first-class performance characteristics, but at the cost of significant obfuscation of the code, making this optimization difficult to test and debug. In this paper, we present a translation validation algorithm that uses symbolic evaluation to detect semantics discrepancies between a loop and its pipelined version. Our algorithm can be implemented simply and efficiently, is provably sound, and appears to be complete with respect to most modulo scheduling algorithms. A conclusion of this case study is that it is possible and effective to use symbolic evaluation to reason about loop transformations.", "citation": "Citations (26)", "departments": ["French Institute for Research in Computer Science and Automation", "French Institute for Research in Computer Science and Automation"], "authors": ["Jean-Baptiste Tristan.....http://dblp.org/pers/hd/t/Tristan:Jean=Baptiste", "Xavier Leroy.....http://dblp.org/pers/hd/l/Leroy:Xavier"], "conf": "popl", "year": "2010", "pages": 10}