{"title": "Scenario-based and value-based specification mining: better together.", "fields": ["slicing", "program comprehension", "property", "development environment", "specification language"], "abstract": "Specification mining takes execution traces as input and extracts likely program invariants, which can be used for comprehension, verification, and evolution related tasks. In this work we integrate scenario-based specification mining, which uses data-mining algorithms to suggest ordering constraints in the form of live sequence charts, an inter-object, visual, modal, scenario-based specification language, with mining of value-based invariants, which detects likely invariants holding at specific program points. The key to the integration is a technique we call  scenario-based slicing , running on top of the mining algorithms to distinguish the scenario-specific invariants from the general ones. The resulting suggested specifications are rich, consisting of modal scenarios annotated with scenario-specific value-based invariants, referring to event parameters and participating object properties.   An evaluation of our work over a number of case studies shows promising results in extracting expressive specifications from real programs, which could not be extracted previously. The more expressive the mined specifications, the higher their potential to support program comprehension and testing.", "citation": "Citations (80)", "year": "2010", "departments": ["Singapore Management University", "RWTH Aachen University"], "conf": "kbse", "authors": ["David Lo.....http://dblp.org/pers/hd/l/Lo_0001:David", "Shahar Maoz.....http://dblp.org/pers/hd/m/Maoz:Shahar"], "pages": 10}