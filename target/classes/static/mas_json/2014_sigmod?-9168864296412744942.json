{"title": "Track join: distributed joins with minimal network traffic.", "fields": ["hash join", "recursive join", "tuple", "joins", "sort merge join"], "abstract": "Network communication is the slowest component of many operators in distributed parallel databases deployed for large-scale analytics. Whereas considerable work has focused on speeding up databases on modern hardware, communication reduction has received less attention. Existing parallel DBMSs rely on algorithms designed for disks with minor modifications for networks. A more complicated algorithm may burden the CPUs, but could avoid redundant transfers of tuples across the network. We introduce track join, a novel distributed join algorithm that minimizes network traffic by generating an optimal transfer schedule for each distinct join key. Track join extends the trade-off options between CPU and network. Our evaluation based on real and synthetic data shows that track join adapts to diverse cases and degrees of locality. Considering both network traffic and execution time, even with no locality, track join outperforms hash join on the most expensive queries of real workloads.", "citation": "Citations (53)", "year": "2014", "departments": ["Columbia University", "Oracle Corporation", "Columbia University"], "conf": "sigmod", "authors": ["Orestis Polychroniou.....http://dblp.org/pers/hd/p/Polychroniou:Orestis", "Rajkumar Sen.....http://dblp.org/pers/hd/s/Sen:Rajkumar", "Kenneth A. Ross.....http://dblp.org/pers/hd/r/Ross:Kenneth_A="], "pages": 12}