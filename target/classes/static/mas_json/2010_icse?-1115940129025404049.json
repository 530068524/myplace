{"title": "Views: object-inspired concurrency control.", "fields": ["porting", "non lock concurrency control", "thread", "race condition", "bittorrent"], "abstract": "We present views, a new approach to controlling concurrency. Fine-grained locking is often necessary to increase concurrency. Correctly implementing fine-grained locking with today's concurrency primitives can be challenging---race conditions often plague programs with sophisticated locking schemes. Views ease the task of implementing sophisticated locking schemes and provide static checks to automatically detect many data races.   Views consist of view declarations that describe which views of an object may be simultaneously held by different threads, which object fields may be accessed through a given view, and which methods can be called through a given view. A set of view annotations specify which code regions hold a view of an object. Our view compiler performs simple static checks which eliminate many data races.   We have ported three benchmark applications to use views: portions of Vuze, a BitTorrent client; Mailpuccino, a graphical e-mail client; and TupleSoup, a database. Our experience indicates that views are easy to use, make implementing sophisticated locking schemes simple, and can help eliminate concurrency bugs.", "citation": "Citations (13)", "departments": ["University of California, Irvine", "University of Waterloo"], "authors": ["Brian Demsky.....http://dblp.org/pers/hd/d/Demsky:Brian", "Patrick Lam.....http://dblp.org/pers/hd/l/Lam_0001:Patrick"], "conf": "icse", "year": "2010", "pages": 10}