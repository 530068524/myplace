{"title": "Sydit: creating and applying a program transformation from an example.", "fields": ["scripting language", "programmer", "development environment", "software evolution", "program transformation"], "abstract": "Bug fixes and feature additions to large code bases often require systematic edits-similar, but not identical, coordinated changes to multiple places. This process is tedious and error-prone. Our prior work introduces a systematic editing approach that creates generalized edit scripts from exemplar edits and applies them to user-selected targets. This paper describes how the Sydit plug-in integrates our technology into the Eclipse integrated development environment. A programmer provides an example edit to Sydit that consists of an old and new version of a changed method. Based on this one example, Sydit generates a context-aware, abstract edit script. To make transformations applicable to similar but not identical methods, Sydit encodes control, data, and containment dependences and abstracts position, type, method, and variable names. Then the programmer selects target methods and Sydit customizes the edit script to each target and displays the results for the programmer to review and approve. Sydit thus automates much of the systematic editing process. To fully automate systematic editing, future tool enhancements should include automated selection of targets and testing of Sydit generated edits.", "citation": "Citations (15)", "departments": ["University of Texas at Austin", "University of Texas at Austin", "University of Texas at Austin"], "authors": ["Na Meng.....http://dblp.org/pers/hd/m/Meng:Na", "Miryung Kim.....http://dblp.org/pers/hd/k/Kim:Miryung", "Kathryn S. McKinley.....http://dblp.org/pers/hd/m/McKinley:Kathryn_S="], "conf": "sigsoft", "year": "2011", "pages": 4}