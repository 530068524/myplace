{"title": "A security-preserving compiler for distributed programs: from information-flow policies to cryptographic mechanisms.", "fields": ["soundness", "imperative programming", "cryptographic primitive", "thread", "control flow"], "abstract": "We enforce information flow policies in programs that run at multiple locations, with diverse levels of security.   We build a compiler from a small imperative language with locality and security annotations down to distributed code linked to concrete cryptographic libraries. Our compiler splits source programs into local threads; inserts checks on auxiliary variables to enforce the source control flow; implements shared distributed variables using instead a series of local replicas with explicit updates; and finally selects cryptographic mechanisms for securing the communication of updates between locations.   We establish computational soundness for our compiler: under standard assumptions on cryptographic primitives, all confidentiality and integrity properties of the source program also hold with its distributed code, despite the presence of active adversaries that control all communications and some of the program locations. We also present performance results for the code obtained by compiling sample programs.", "citation": "Citations (18)", "year": "2009", "departments": ["Microsoft", "French Institute for Research in Computer Science and Automation", "French Institute for Research in Computer Science and Automation"], "conf": "ccs", "authors": ["C\u00e9dric Fournet.....http://dblp.org/pers/hd/f/Fournet:C=eacute=dric", "Gurvan Le Guernic.....http://dblp.org/pers/hd/g/Guernic:Gurvan_Le", "Tamara Rezk.....http://dblp.org/pers/hd/r/Rezk:Tamara"], "pages": 10}