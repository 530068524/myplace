{"title": "Discovering and representing systematic code changes.", "fields": ["rule of inference", "focus group", "systematic code", "software maintenance", "software"], "abstract": "Software engineers often inspect program differences when reviewing others' code changes, when writing check-in comments, or when determining why a program behaves differently from expected behavior after modification. Program differencing tools that support these tasks are limited in their ability to group related code changes or to detect potential inconsistencies in those changes. To overcome these limitations and to complement existing approaches, we built Logical Structural Diff (LSdiff), a tool that infers systematic structural differences as logic rules. LSdiff notes anomalies from systematic changes as exceptions to the logic rules. We conducted a focus group study with professional software engineers in a large E-commerce company; we also compared LSdiff's results with textual differences and with structural differences without rules. Our evaluation suggests that LSdiff complements existing differencing tools by grouping code changes that form systematic change patterns regardless of their distribution throughout the code, and its ability to discover anomalies shows promise in detecting inconsistent changes.", "citation": "Citations (163)", "departments": ["University of Texas at Austin", "University of Washington"], "authors": ["Miryung Kim.....http://dblp.org/pers/hd/k/Kim:Miryung", "David Notkin.....http://dblp.org/pers/hd/n/Notkin:David"], "conf": "icse", "year": "2009", "pages": 11}