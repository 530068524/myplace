{"title": "Slicing and replaying code change history.", "fields": ["kpi driven code analysis", "redundant code", "dead code elimination", "debug code", "program animation"], "abstract": "Change-aware development environments have recently become feasible and reasonable. These environments can automatically record fine-grained code changes on a program and allow programmers to replay the recorded changes in chronological order. However, they do not always need to replay all the code changes to investigate how a particular entity of the program has been changed. Therefore, they often skip several code changes of no interest. This skipping action is an obstacle that makes many programmers hesitate in using existing replaying tools. This paper proposes a slicing mechanism that can extract only code changes necessary to construct a particular class member of a Java program from the whole history of past code changes. In this mechanism, fine-grained code changes are represented by edit operations recorded on source code of a program. The paper also presents a running tool that implements the proposed slicing and replays its resulting slices. With this tool, programmers can avoid replaying edit operations nonessential to the construction of class members they want to understand.", "citation": "Citations (6)", "year": "2012", "departments": ["Ritsumeikan University", "Ritsumeikan University", "Ritsumeikan University", "Tokyo Institute of Technology"], "conf": "kbse", "authors": ["Katsuhisa Maruyama.....http://dblp.org/pers/hd/m/Maruyama:Katsuhisa", "Eijiro Kitsu.....http://dblp.org/pers/hd/k/Kitsu:Eijiro", "Takayuki Omori.....http://dblp.org/pers/hd/o/Omori:Takayuki", "Shinpei Hayashi.....http://dblp.org/pers/hd/h/Hayashi:Shinpei"], "pages": 4}