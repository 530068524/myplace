{"title": "A new, highly efficient, and easy to implement top-down join enumeration algorithm.", "fields": ["hash join", "recursive join", "tree", "query optimization", "sort merge join"], "abstract": "Finding an optimal execution order of join operations is a crucial task in every cost-based query optimizer. Since there are many possible join trees for a given query, the overhead of the join (tree) enumeration algorithm per valid join tree should be minimal. In the case of a clique-shaped query graph, the best known top-down algorithm has a complexity of \u0398(n 2 ) per join tree, where n is the number of relations. In this paper, we present an algorithm that has an according O(1) complexity in this case. We show experimentally that this more theoretical result has indeed a high impact on the performance in other non-clique settings. This is especially true for cyclic query graphs. Further, we evaluate the performance of our new algorithm and compare it with the best top-down and bottom-up algorithms described in the literature.", "citation": "Citations (14)", "departments": ["University of Mannheim", "University of Mannheim"], "authors": ["Pit Fender.....http://dblp.org/pers/hd/f/Fender:Pit", "Guido Moerkotte.....http://dblp.org/pers/hd/m/Moerkotte:Guido"], "conf": "icde", "year": "2011", "pages": 12}