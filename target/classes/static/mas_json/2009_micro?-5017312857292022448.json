{"title": "DDT: design and evaluation of a dynamic program analysis for optimizing data structure usage.", "fields": ["implementation", "invariant", "program analysis", "dynamic program analysis", "architecture"], "abstract": "Data structures define how values being computed are stored and accessed within programs. By recognizing what data structures are being used in an application, tools can make applications more robust by enforcing data structure consistency properties, and developers can better understand and more easily modify applications to suit the target architecture for a particular application.   This paper presents the design and application of DDT, a new program analysis tool that automatically identifies data structures within an application. An application binary is instrumented to dynamically monitor how the data is stored and organized for a set of sample inputs. The instrumentation detects which functions interact with the stored data, and creates a signature for these functions using dynamic invariant detection. The invariants of these functions are then matched against a library of known data structures, providing a probable identification. That is, DDT uses program consistency properties to identify what data structures an application employs. The empirical evaluation shows that this technique is highly accurate across several different implementations of standard data structures, enabling aggressive optimizations in many situations.", "citation": "Citations (30)", "departments": ["Georgia Institute of Technology", "Georgia Institute of Technology"], "authors": ["Changhee Jung.....http://dblp.org/pers/hd/j/Jung:Changhee", "Nathan Clark.....http://dblp.org/pers/hd/c/Clark:Nathan"], "conf": "micro", "year": "2009", "pages": 11}