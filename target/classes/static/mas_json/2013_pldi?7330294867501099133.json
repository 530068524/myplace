{"title": "Dynamic determinacy analysis.", "fields": ["determinacy", "static analysis", "dead code", "eval", "pointer analysis"], "abstract": "We present an analysis for identifying  determinate  variables and expressions that always have the same value at a given program point. This information can be exploited by client analyses and tools to, e.g., identify dead code or specialize uses of dynamic language constructs such as eval, replacing them with equivalent static constructs. Our analysis is completely dynamic and only needs to observe a single execution of the program, yet the determinacy facts it infers hold for any execution. We present a formal soundness proof of the analysis for a simple imperative language, and a prototype implementation that handles full JavaScript. Finally, we report on two case studies that explored how static analysis for JavaScript could leverage the information gathered by dynamic determinacy analysis. We found that in some cases scalability of static pointer analysis was improved dramatically, and that many uses of runtime code generation could be eliminated.", "citation": "Citations (57)", "departments": ["Nanyang Technological University", "IBM", "IBM", "University of Waterloo"], "authors": ["Max Sch\u00e4fer.....http://dblp.org/pers/hd/s/Sch=auml=fer:Max", "Manu Sridharan.....http://dblp.org/pers/hd/s/Sridharan:Manu", "Julian Dolby.....http://dblp.org/pers/hd/d/Dolby:Julian", "Frank Tip.....http://dblp.org/pers/hd/t/Tip:Frank"], "conf": "pldi", "year": "2013", "pages": 10}