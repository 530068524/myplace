{"title": "Abstract Interpretation with Applications to Timing Validation.", "fields": ["application domain", "abstract interpretation", "galois connection", "cpu cache", "abstraction"], "abstract": "Abstract interpretation is one of the main verification technologies besides model checking and deductive verification.\n\nAbstract interpretation has a rich theory of abstraction and strong support for the construction of abstract domains. It allows to express a precise relation to the (concrete) semantics of the programming language inducing a clear relation between the results of an abstract interpretation and the properties of the analyzed program. It permits trading efficiency against precision and offers means to enforce termination where this is not guaranteed.\n\nWe explain abstract interpretation using examples from a particular application domain: the determination of bounds on the execution times of programs. These bounds are used to show reliably that hard real-time systems satisfy their timing constraints.\n\nThe application domain requires a number of static analyses and domains with different characteristics. Most domains exhibit Galois connections, a few do not. Some analyses require widening to leap infinite ascending chains and ensure termination.", "citation": "Citations (24)", "year": "2008", "departments": ["Saarland University", "Saarland University"], "conf": "cav", "authors": ["Reinhard Wilhelm.....http://dblp.org/pers/hd/w/Wilhelm:Reinhard", "Bj\u00f6rn Wachter.....http://dblp.org/pers/hd/w/Wachter:Bj=ouml=rn"], "pages": 15}