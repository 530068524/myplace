{"title": "What can the GC compute efficiently?: a language for heap assertions at GC time.", "fields": ["declarative programming", "tree traversal", "binomial heap", "executable", "assertion"], "abstract": "We present the DeAL language for heap assertions that are efficiently evaluated during garbage collection time. DeAL is a rich, declarative, logic-based language whose programs are guaranteed to be executable with good whole-heap locality, i.e., within a single traversal over every live object on the heap and a finite neighborhood around each object. As a result, evaluating DeAL programs incurs negligible cost: for simple assertion checking at each garbage collection, the end-to-end execution slowdown is below 2%. DeAL is integrated into Java as a VM extension and we demonstrate its efficiency and expressiveness with several applications and properties from the past literature.   Compared to past systems for heap assertions, DeAL is distinguished by its very attractive expressiveness/efficiency tradeoff: it o ers a significantly richer class of assertions than what past systems could check with a single traversal. Conversely, past systems that can express the same (or more) complex assertions as DeAL do so only by su ering orders-of-magnitude higher costs.", "citation": "Citations (15)", "departments": ["University of Massachusetts Amherst", "University of Massachusetts Amherst", "University of Massachusetts Amherst", "Tufts University", "Tufts University"], "authors": ["Christoph Reichenbach.....http://dblp.org/pers/hd/r/Reichenbach:Christoph", "Neil Immerman.....http://dblp.org/pers/hd/i/Immerman:Neil", "Yannis Smaragdakis.....http://dblp.org/pers/hd/s/Smaragdakis:Yannis", "Edward Aftandilian.....http://dblp.org/pers/hd/a/Aftandilian:Edward", "Samuel Z. Guyer.....http://dblp.org/pers/hd/g/Guyer:Samuel_Z="], "conf": "oopsla", "year": "2010", "pages": 14}