{"title": "Hidden truths in dead software paths.", "fields": ["code smell", "graph", "theoretical computer science", "comprehension", "computer science", "abstract interpretation", "ranging", "software"], "abstract": "Approaches and techniques for statically finding a multitude of issues in source code have been developed in the past. A core property of these approaches is that they are usually targeted towards finding only a very specific kind of issue and that the effort to develop such an analysis is significant. This strictly limits the number of kinds of issues that can be detected. In this paper, we discuss a generic approach based on the detection of infeasible paths in code that can discover a wide range of code smells ranging from useless code that hinders comprehension to real bugs. Code issues are identified by calculating the difference between the control-flow graph that contains all technically possible edges and the corresponding graph recorded while performing a more precise analysis using abstract interpretation. We have evaluated the approach using the Java Development Kit as well as the Qualitas Corpus (a curated collection of over 100 Java Applications) and were able to find thousands of issues across a wide range of categories.", "citation": "Not cited", "departments": ["Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt"], "authors": ["Michael Eichberg.....http://dblp.org/pers/hd/e/Eichberg:Michael", "Ben Hermann.....http://dblp.org/pers/hd/h/Hermann:Ben", "Mira Mezini.....http://dblp.org/pers/hd/m/Mezini:Mira", "Leonid Glanz.....http://dblp.org/pers/hd/g/Glanz:Leonid"], "conf": "sigsoft", "year": "2015", "pages": 11}