{"title": "Parallelizing security checks on commodity hardware.", "fields": ["replay system", "system safety", "synchronization", "commodity", "speculative execution"], "abstract": "Speck (Speculative Parallel Check) is a system thataccelerates powerful security checks on commodity hardware by executing them in parallel on multiple cores. Speck provides an infrastructure that allows  sequential  invocations of a particular security check to run in parallel without sacrificing the safety of the system. Speck creates parallelism in two ways. First, Speck decouples a security check from an application by continuing the application, using speculative execution, while the security check executes in parallel on another core. Second, Speck creates parallelism between sequential invocations of a security check by running later checks in parallel with earlier ones. Speck provides a process-level replay system to deterministically and efficiently synchronize state between a security check and the original process.We use Speck to parallelize three security checks: sensitive data analysis, on-access virus scanning, and taint propagation. Running on a 4-core and an 8-core computer, Speck improves performance 4x and 7.5x for the sensitive data analysis check, 3.3x and 2.8x for theon-access virus scanning check, and 1.6x and 2x for the taint propagation check.", "citation": "Citations (145)", "year": "2008", "departments": ["Microsoft", "University of Michigan", "University of Michigan", "University of Michigan"], "conf": "asplos", "authors": ["Edmund B. Nightingale.....http://dblp.org/pers/hd/n/Nightingale:Edmund_B=", "Daniel Peek.....http://dblp.org/pers/hd/p/Peek:Daniel", "Peter M. Chen.....http://dblp.org/pers/hd/c/Chen:Peter_M=", "Jason Flinn.....http://dblp.org/pers/hd/f/Flinn:Jason"], "pages": 11}