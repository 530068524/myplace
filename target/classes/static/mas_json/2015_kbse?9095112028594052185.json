{"title": "Extracting Visual Contracts from Java Programs (T).", "fields": ["reverse engineering", "tracing", "graph rewriting", "unified modeling language", "debugging"], "abstract": "Visual contracts model the operations of components or services by pre-and post-conditions formalised as graph transformation rules. They provide a precise intuitive notation to support testing, understanding and analysis of software. However, due to their detailed specification of data states and transformations, modelling real applications is an error-prone process. In this paper we propose a dynamic approach to reverse engineering visual contracts from Java based on tracing the execution of Java operations. The resulting contracts give an accurate description of the observed object transformations, their effects and preconditions in terms of object structures, parameter and attribute values, and their generalised specification by universally quantified (multi) objects. While this paper focusses on the fundamental technique rather than a particular application, we explore potential uses in our evaluation, including in program understanding, review of test reports and debugging.", "citation": "Citations (5)", "departments": ["University of Leicester", "University of Leicester"], "authors": ["Abdullah M. Alshanqiti.....http://dblp.org/pers/hd/a/Alshanqiti:Abdullah_M=", "Reiko Heckel.....http://dblp.org/pers/hd/h/Heckel:Reiko"], "conf": "kbse", "year": "2015", "pages": 11}