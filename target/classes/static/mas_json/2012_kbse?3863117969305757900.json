{"title": "Code patterns for automatically validating requirements-to-code traces.", "fields": ["change management", "executable", "traceability", "correctness", "requirements traceability"], "abstract": "Traces between requirements and code reveal where requirements are implemented. Such traces are essential for code understanding and change management. Unfortunately, traces are known to be error prone. This paper introduces a novel approach for validating requirements-to-code traces through calling relationships within the code. As input, the approach requires an executable system, the corresponding requirements, and the requirements-to-code traces that need validating. As output, the approach identifies likely incorrect or missing traces by investigating patterns of traces with calling relationships. The empirical evaluation of four case study systems covering 150 KLOC and 59 requirements demonstrates that the approach detects most errors with 85-95% precision and 82-96% recall and is able to handle traces of varying levels of correctness and completeness. The approach is fully automated, tool supported, and scalable.", "citation": "Citations (18)", "year": "2012", "departments": ["JKU Linz, Austria", "JKU Linz, Austria"], "conf": "kbse", "authors": ["Achraf Ghabi.....http://dblp.org/pers/hd/g/Ghabi:Achraf", "Alexander Egyed.....http://dblp.org/pers/hd/e/Egyed:Alexander"], "pages": 10}