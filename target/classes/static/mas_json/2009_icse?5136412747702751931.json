{"title": "Mining exception-handling rules as sequence association rules.", "fields": ["exception handling", "association rule learning", "subroutine", "java", "of the form"], "abstract": "Programming languages such as Java and C++ provide exception-handling constructs to handle exception conditions. Applications are expected to handle these exception conditions and take necessary recovery actions such as releasing opened database connections. However, exception-handling rules that describe these necessary recovery actions are often not available in practice. To address this issue, we develop a novel approach that mines exception-handling rules as sequence association rules of the form \u201c(FC1 c  1 \u2026FC c  n ) \u2227 FC a  \u21d2 (FC e  1 \u2026FC e  m )\u201d. This rule describes that function call FCa should be followed by a sequence of function calls (FC e  1 \u2026FC e  m ) when FC a  is preceded by a sequence of function calls (FC e  1 \u2026FC c  n ). Such form of rules is required to characterize common exception-handling rules. We show the usefulness of these mined rules by applying them on five real-world applications (including 285 KLOC) to detect violations in our evaluation. Our empirical results show that our approach mines 294 real exception-handling rules in these five applications and also detects 160 defects, where 87 defects are new defects that are not found by a previous related approach.", "citation": "Citations (105)", "departments": ["North Carolina State University", "North Carolina State University"], "authors": ["Suresh Thummalapenta.....http://dblp.org/pers/hd/t/Thummalapenta:Suresh", "Tao Xie.....http://dblp.org/pers/hd/x/Xie_0001:Tao"], "conf": "icse", "year": "2009", "pages": 11}