{"title": "An Extensible Technique for High-Precision Testing of Recovery Code.", "fields": ["revision control", "fault injection", "fold", "software system", "name server"], "abstract": "Thorough testing of software systems requires ways to productively employ fault injection. We describe a technique for automatically identifying the errors exposed by shared libraries, finding good injection targets in program binaries, and producing corresponding injection scenarios. We present a framework for writing precise custom triggers that inject the desired faults--in the form of error return codes and corresponding side effects--at the boundary between shared libraries and applications.\n\nWe incorporated these ideas in the LFI tool chain [18]. With no developer assistance and no access to source code, this new version of LFI found 11 serious, previously unreported bugs in the BIND name server, the Git version control system, the MySQL database server, and the PBFT replication system. LFI achieved entirely automatically 35%-60% improvement in recovery-code coverage, without requiring any new tests. LFI can be downloaded from http://lfi.epfl.ch.", "citation": "Citations (24)", "departments": ["\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"], "authors": ["Paul Dan Marinescu.....http://dblp.org/pers/hd/m/Marinescu:Paul_Dan", "Radu Banabic.....http://dblp.org/pers/hd/b/Banabic:Radu"], "conf": "usenix", "year": "2010", "pages": -1}