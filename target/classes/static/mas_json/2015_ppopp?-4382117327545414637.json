{"title": "MPI+Threads: runtime contention and remedies.", "fields": ["implementation", "semaphore", "granularity", "gang scheduling", "thread safety"], "abstract": "Hybrid MPI+Threads programming has emerged as an alternative model to the \u201cMPI everywhere\u201d model to better handle the increasing core density in cluster nodes. While the MPI standard allows multithreaded concurrent communication, such flexibility comes with the cost of maintaining thread safety within the MPI implementation, typically implemented using critical sections. In contrast to previous works that studied the importance of critical-section granularity in MPI implementations, in this paper we investigate the implication of critical-section arbitration on communication performance. We first analyze the MPI runtime when multithreaded concurrent communication takes place on hierarchical memory systems. Our results indicate that the mutex-based approach that most MPI implementations use today can incur performance penalties due to unfair arbitration. We then present methods to mitigate these penalties with a first-come, first-served arbitration and a priority locking scheme that favors threads doing useful work. Through evaluations using several benchmarks and applications, we demonstrate up to 5-fold improvement in performance.", "citation": "Citations (11)", "year": "2015", "departments": ["Tokyo Institute of Technology", "Argonne National Laboratory", "Chinese Academy of Sciences", "Argonne National Laboratory", "Tokyo Institute of Technology"], "conf": "ppopp", "authors": ["Abdelhalim Amer.....http://dblp.org/pers/hd/a/Amer:Abdelhalim", "Huiwei Lu.....http://dblp.org/pers/hd/l/Lu:Huiwei", "Yanjie Wei.....http://dblp.org/pers/hd/w/Wei:Yanjie", "Pavan Balaji.....http://dblp.org/pers/hd/b/Balaji:Pavan", "Satoshi Matsuoka.....http://dblp.org/pers/hd/m/Matsuoka:Satoshi"], "pages": 10}