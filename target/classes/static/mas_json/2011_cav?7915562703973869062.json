{"title": "BAP: A Binary Analysis Platform.", "fields": ["binary code", "executable", "megabyte", "intermediate language", "symbolic execution"], "abstract": "BAP is a publicly available infrastructure for performing program verification and analysis tasks on binary (i.e., executable) code. In this paper, we describe BAP as well as lessons learned from previous incarnations of binary analysis platforms. BAP explicitly represents all side effects of instructions in an intermediate language (IL), making syntaxdirected analysis possible. We have used BAP to routinely generate and solve verification conditions that are hundreds of megabytes in size and encompass 100,000's of assembly instructions.", "citation": "Citations (291)", "year": "2011", "departments": ["Carnegie Mellon University", "Carnegie Mellon University", "Carnegie Mellon University", "Carnegie Mellon University"], "conf": "cav", "authors": ["David Brumley.....http://dblp.org/pers/hd/b/Brumley:David", "Ivan Jager.....http://dblp.org/pers/hd/j/Jager:Ivan", "Thanassis Avgerinos.....http://dblp.org/pers/hd/a/Avgerinos:Thanassis", "Edward J. Schwartz.....http://dblp.org/pers/hd/s/Schwartz:Edward_J="], "pages": 7}