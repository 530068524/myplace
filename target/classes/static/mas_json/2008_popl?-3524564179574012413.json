{"title": "Lightweight semiformal time complexity analysis for purely functional data structures.", "fields": ["monad", "type theory", "lazy evaluation", "annotation", "persistence"], "abstract": "Okasaki and others have demonstrated how purely functional data structures that are efficient even in the presence of persistence can be constructed. To achieve good time bounds essential use is often made of laziness. The associated complexity analysis is frequently subtle, requiring careful attention to detail, and hence formalising it is valuable. This paper describes a simple library which can be used to make the analysis of a class of purely functional data structures and algorithms almost fully formal. The basic idea is to use the type system to annotate every function with the time required to compute its result. An annotated monad is used to combine time complexity annotations. The library has been used to analyse some existing data structures, for instance the deque operations of Hinze and Paterson's finger trees.", "citation": "Citations (73)", "departments": ["Chalmers University of Technology"], "authors": ["Nils Anders Danielsson.....http://dblp.org/pers/hd/d/Danielsson:Nils_Anders"], "conf": "popl", "year": "2008", "pages": 12}