{"title": "Program transformations to fix C integers.", "fields": ["integer literal", "integer", "trial division", "integer overflow", "branch and price"], "abstract": "C makes it easy to misuse integer types; even mature programs harbor many badly-written integer code. Traditional approaches at best detect these problems; they cannot guide developers to write correct code. We describe three program transformations that fix integer problems - one explicitly introduces casts to disambiguate type mismatch, another adds runtime checks to arithmetic operations, and the third one changes the type of a wrongly-declared integer. Together, these transformations fixed all variants of integer problems featured in 7,147 programs of NIST's SAMATE reference dataset, making the changes automatically on over 15 million lines of code. We also applied the transformations automatically on 5 open source software. The transformations made hundreds of changes on over 700,000 lines of code, but did not break the programs. Being integrated with source code and development process, these program transformations can fix integer problems, along with developers' misconceptions about integer usage.", "citation": "Citations (28)", "departments": ["Auburn University", "Auburn University"], "authors": ["Zack Coker.....http://dblp.org/pers/hd/c/Coker:Zack", "Munawar Hafiz.....http://dblp.org/pers/hd/h/Hafiz:Munawar"], "conf": "icse", "year": "2013", "pages": 10}