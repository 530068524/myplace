{"title": "MSL: A Synthesis Enabled Language for Distributed Implementations.", "fields": ["implementation", "vectorization", "generative grammar", "notation", "constructed language"], "abstract": "This paper demonstrates how ideas from generative programming and software synthesis can help support the development of bulk-synchronous distributed memory kernels. These ideas are realized in a new language called MSL, a C-like language that combines synthesis features with high level notations for array manipulation and bulk-synchronous parallelism to simplify the semantic analysis required for synthesis. The paper shows that by leveraging these high level notations, it is possible to scale the synthesis and automated bug-finding technologies that underlie MSL to realistic computational kernels. Specifically, we demonstrate the methodology through case studies implementing non-trivial distributed kernels -- both regular and irregular -- from the NAS parallel benchmarks. We show that our approach can automatically infer many challenging details from these benchmarks and can enable high level implementation ideas to be reused between similar kernels. We also demonstrate that these high level notations map easily to low level C code and show that the performance of this generated code matches that of handwritten Fortran.", "citation": "Citations (5)", "year": "2014", "departments": ["Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology"], "conf": "sc", "authors": ["Zhilei Xu.....http://dblp.org/pers/hd/x/Xu:Zhilei", "Shoaib Kamil.....http://dblp.org/pers/hd/k/Kamil:Shoaib", "Armando Solar-Lezama.....http://dblp.org/pers/hd/s/Solar=Lezama:Armando"], "pages": 12}