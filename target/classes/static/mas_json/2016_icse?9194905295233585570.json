{"title": "Coverage-driven test code generation for concurrent classes.", "fields": ["code generation", "interleaving", "program analysis", "concurrency", "instruction set"], "abstract": "Previous techniques on concurrency testing have mainly focused on exploring the interleaving space of manually written test code to expose faulty interleavings of shared memory accesses. These techniques assume the availability of failure-inducing tests. In this paper, we present A uto C on T est , a coverage-driven approach to generate effective concurrent test code that achieve high interleaving coverage. A uto C on T est  consists of three components. First, it computes the coverage requirements dynamically and iteratively during sequential test code generation, using a coverage metric that captures the execution context of shared memory accesses. Second, it smartly selects these sequential codes based on the computed result and assembles them for concurrent tests, achieving increased context-sensitive interleaving coverage. Third, it explores the newly covered interleavings. We have implemented A uto C on T est  as an automated tool and evaluated it using 6 real-world concurrent Java subjects. The results show that A uto C on T est  is able to generate effective concurrent tests that achieve high interleaving coverage and expose concurrency faults quickly. A uto C on T est  took less than 65 seconds (including program analysis, test generation and execution) to expose the faults in the program subjects.", "citation": "Citations (5)", "departments": ["Hong Kong University of Science and Technology", "Hong Kong University of Science and Technology"], "authors": ["Valerio Terragni.....http://dblp.org/pers/hd/t/Terragni:Valerio", "Shing-Chi Cheung.....http://dblp.org/pers/hd/c/Cheung:Shing=Chi"], "conf": "icse", "year": "2016", "pages": 12}