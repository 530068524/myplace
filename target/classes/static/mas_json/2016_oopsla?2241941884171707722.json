{"title": "Makalu: fast recoverable allocation of non-volatile memory.", "fields": ["interleaved memory", "allocator", "memory leak", "non volatile random access memory", "garbage collection"], "abstract": "Byte addressable non-volatile memory (NVRAM) is likely to supplement, and perhaps eventually replace, DRAM. Applications can then persist data structures directly in memory instead of serializing them and storing them onto a durable block device. However, failures during execution can leave data structures in NVRAM unreachable or corrupt. In this paper, we present Makalu, a system that addresses non-volatile memory management. Makalu offers an integrated allocator and recovery-time garbage collector that maintains internal consistency, avoids NVRAM memory leaks, and is efficient, all in the face of failures.     We show that a careful allocator design can support a less restrictive and a much more familiar programming model than existing persistent memory allocators. Our allocator significantly reduces the per allocation persistence overhead by lazily persisting non-essential metadata and by employing a post-failure recovery-time garbage collector. Experimental results show that the resulting online speed and scalability of our allocator are comparable to well-known transient allocators, and significantly better than state-of-the-art persistent allocators.", "citation": "Citations (18)", "departments": ["Hewlett-Packard", "Hewlett-Packard", "Google"], "authors": ["Kumud Bhandari.....http://dblp.org/pers/hd/b/Bhandari:Kumud", "Dhruva R. Chakrabarti.....http://dblp.org/pers/hd/c/Chakrabarti:Dhruva_R=", "Hans-Juergen Boehm.....http://dblp.org/pers/hd/b/Boehm:Hans=Juergen"], "conf": "oopsla", "year": "2016", "pages": 18}