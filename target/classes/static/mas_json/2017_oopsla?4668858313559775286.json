{"title": "Garbology: a study of how Java objects die.", "fields": ["allocation site", "manual memory management", "dispose pattern", "dacapo", "garbology"], "abstract": "In this paper we present a study of how Java programs dispose of objects. Unlike prior work on object demographics and lifetime patterns, our goal is to precisely characterize the actions that cause objects to become unreachable. We use a recently-developed tracing tool, called Elephant Tracks, which can localize object deaths within a specific method and tell us the proximal cause. Our analysis centers around garbage clusters: groups of connected objects that become unreachable at precisely the same time due to a single program action. We classify these clusters using traditional features, such as size, allocation site, and lifetime, and using new ones, such as death site and cause of death. We then use this knowledge about garbage clusters in a new GC algorithm: the Cluster Aware Garbage Collection (CAGC) algorithm.     We present results for a set of standard benchmarks including SPECJVM98, SPECjbb, and DaCapo. We identify several patterns that could inform the design of new collectors or tuning of existing systems. Most garbage clusters are small, suggesting that these programs almost always dispose of large structures in a piecemeal fashion. In addition, most clusters die in one of only a dozen or so places in the program. Furthermore, these death sites are much more stable and predictable than object lifetimes. Finally we show that the CAGC algorithm can in certain cases improve GC performance.", "citation": "Not cited", "year": "2017", "departments": ["Tufts University", "Tufts University"], "conf": "oopsla", "authors": ["Raoul L. Veroy.....http://dblp.org/pers/hd/v/Veroy:Raoul_L=", "Samuel Z. Guyer.....http://dblp.org/pers/hd/g/Guyer:Samuel_Z="], "pages": 12}