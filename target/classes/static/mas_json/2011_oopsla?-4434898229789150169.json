{"title": "Hybrid partial evaluation.", "fields": ["online and offline", "java compiler", "interpreter", "programmer", "partial evaluation"], "abstract": "Hybrid partial evaluation (HPE) is a pragmatic approach to partial evaluation that borrows ideas from both online and offline partial evaluation. HPE performs offline-style specialization using an online approach without static binding time analysis. The goal of HPE is to provide a practical and predictable level of optimization for programmers, with an implementation strategy that fits well within existing compilers or interpreters. HPE requires the programmer to specify where partial evaluation should be applied. It provides no termination guarantee and reports errors in situations that violate simple binding time rules, or have incorrect use of side effects in compile-time code. We formalize HPE for a small imperative object-oriented language and describe Civet, a straightforward implementation of HPE as a relatively simple extension of a Java compiler. Code optimized by Civet performs as well as the output of a state-of-the-art offline partial evaluator.", "citation": "Citations (31)", "departments": ["University of Texas at Austin", "University of Texas at Austin"], "authors": ["Amin Shali.....http://dblp.org/pers/hd/s/Shali:Amin", "William R. Cook.....http://dblp.org/pers/hd/c/Cook:William_R="], "conf": "oopsla", "year": "2011", "pages": 16}