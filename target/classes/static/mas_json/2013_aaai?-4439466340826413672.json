{"title": "Backdoors to Tractability of Answer-Set Programming.", "fields": ["answer set programming", "non monotonic logic", "prolog", "classical logic", "stable model semantics"], "abstract": "Reasoning is \u201cthe power of the mind to think, understand, and form judgments by a process of logic\u201d (McKean 2001). In the late 1950s and 1960s researchers came up with the idea to express human knowledge with mathematical logic and to create a machine that can derive conclusions in the real world (McCarthy et al. 1955). In the early 1970s a logic programming system called Prolog was invented by Colmerauer and Roussel (1993) which describes a problem by means of facts and rules that form a logic program. Classical logic programming is characterized by the fact that we do reasoning in a closed world and whenever we add new facts or rules to the program this will never invalidate any conclusions, so-called monotonic reasoning. From the early 1980s the research has moved closer to real world reasoning which is somewhat different. A main characteristic is that we derive conclusion because we have no evidence for the contrary (reasoning by default). Since additional information may retract conclusions, such reasoning is called nonmonotonic (Brewka, Niemela, and Truszczynski 2008). In the late 1980s a new semantics (stable model semantics) for reasoning by default was proposed by Gelfond and Lifschitz (1988) and implemented into the new programming paradigm called answer-set programming (ASP) (Marek and Truszczynski 1999). Various ASP solvers have consequently been designed. Nonmonotonic reasoning has come of age, since modern ASP solvers work efficiently on industrial instances (Gebser et al. 2012). Unfortunately, the main computational problems of ASP (such as deciding whether a program has a solution, or if a certain atom is contained in at least one or in all solutions) are of high worst-case complexity and are located at the second level of the Polynomial Hierarchy (Eiter and Gottlob 1995). In the 1990s and 2000s research on the complexity of problems in the field of nonmonotonic reasoning has mainly focused on classical computational complexity where we measure the amount of a resource (e.g., time or space) in a function of the input. Unfavorably, we ignore the structural nature of our input instances. Thus problems from an industrial context seem to be harder in theory than they are", "citation": "Not cited", "departments": ["Vienna University of Technology"], "authors": ["Johannes Klaus Fichte.....http://dblp.org/pers/hd/f/Fichte:Johannes_Klaus"], "conf": "aaai", "year": "2013", "pages": -1}