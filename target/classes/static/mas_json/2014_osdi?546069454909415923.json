{"title": "Jitk: A Trustworthy In-Kernel Interpreter Infrastructure.", "fields": ["source lines of code", "system call", "compromise", "linux kernel", "machine code"], "abstract": "Modern operating systems run multiple interpreters in the kernel, which enable user-space applications to add new functionality or specialize system policies. The correctness of such interpreters is critical to the overall system security: bugs in interpreters could allow adversaries to compromise user-space applications and even the kernel.\n\nJitk is a new infrastructure for building in-kernel interpreters that guarantee functional correctness as they compile user-space policies down to native instructions for execution in the kernel. To demonstrate Jitk, we implement two interpreters in the Linux kernel, BPF and INET-DIAG, which are used for network and system call filtering and socket monitoring, respectively. To help application developers write correct filters, we introduce a high-level rule language, along with a proof that Jitk correctly translates high-level rules all the way to native machine code, and demonstrate that this language can be integrated into OpenSSH with tens of lines of code. We built a prototype of Jitk on top of the CompCert verified compiler and integrated it into the Linux kernel. Experimental results show that Jitk is practical, fast, and trustworthy.", "citation": "Citations (23)", "year": "2014", "departments": ["University of Washington", "University of Washington", "University of Washington", "University of Washington", "University of Washington"], "conf": "osdi", "authors": ["Xi Wang.....http://dblp.org/pers/hd/w/Wang:Xi", "David Lazar.....http://dblp.org/pers/hd/l/Lazar:David", "Nickolai Zeldovich.....http://dblp.org/pers/hd/z/Zeldovich:Nickolai", "Adam Chlipala.....http://dblp.org/pers/hd/c/Chlipala:Adam", "Zachary Tatlock.....http://dblp.org/pers/hd/t/Tatlock:Zachary"], "pages": 15}