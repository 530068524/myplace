{"title": "Inductive data flow graphs.", "fields": ["correctness", "control flow graph", "data flow analysis", "concurrency", "thread"], "abstract": "The correctness of a sequential program can be shown by the annotation of its control flow graph with inductive assertions. We propose inductive data flow graphs, data flow graphs with incorporated inductive assertions, as the basis of an approach to verifying concurrent programs. An inductive data flow graph accounts for a set of dependencies between program actions in interleaved thread executions, and therefore stands as a representation for the set of concurrent program traces which give rise to these dependencies. The approach first constructs an inductive data flow graph and then checks whether all program traces are represented. The size of the inductive data flow graph is polynomial in the number of data dependencies (in a sense that can be made formal); it does not grow exponentially in the number of threads unless the data dependencies do. The approach shifts the burden of the exponential explosion towards the check whether all program traces are represented, i.e., to a combinatorial problem (over finite graphs).", "citation": "Citations (66)", "departments": ["University of Toronto", "University of Toronto", "University of Freiburg"], "authors": ["Azadeh Farzan.....http://dblp.org/pers/hd/f/Farzan:Azadeh", "Zachary Kincaid.....http://dblp.org/pers/hd/k/Kincaid:Zachary", "Andreas Podelski.....http://dblp.org/pers/hd/p/Podelski:Andreas"], "conf": "popl", "year": "2013", "pages": 14}