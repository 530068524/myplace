{"title": "Automatic Generation of Object Usage Specifications from Large Method Traces.", "fields": ["runtime verification", "documentation", "correctness", "formal specification", "scalability"], "abstract": "Formal specifications are used to identify programming errors, verify the correctness of programs, and as documentation. Unfortunately, producing them is error-prone and time-consuming, so they are rarely used in practice. Inferring specifications from a running application is a promising solution. However, to be practical, such an approach requires special techniques to treat large amounts of runtime data. We present a scalable dynamic analysis that infers specifications of correct method call sequences on multiple related objects. It preprocesses method traces to identify small sets of related objects and method calls which can be analyzed separately. We implemented our approach and applied the analysis to eleven real-world applications and more than 240 million runtime events. The experiments show the scalability of our approach. Moreover, the generated specifications describe correct and typical behavior, and match existing API usage documentation.", "citation": "Citations (139)", "departments": ["ETH Zurich", "ETH Zurich"], "authors": ["Michael Pradel.....http://dblp.org/pers/hd/p/Pradel:Michael", "Thomas R. Gross.....http://dblp.org/pers/hd/g/Gross:Thomas_R="], "conf": "kbse", "year": "2009", "pages": 12}