{"title": "Computing repair trees for resolving inconsistencies in design models.", "fields": ["theoretical computer science", "unified modeling language", "software", "scalability", "syntax"], "abstract": "Resolving inconsistencies in software models is a complex task because the number of repairs grows exponentially. Existing approaches thus emphasize on selected repairs only but doing so diminishes their usefulness. This paper copes with the large number of repairs by focusing on what caused an inconsistency and presenting repairs as a linearly growing repair tree. The cause is computed by examining the run-time evaluation of the inconsistency to understand where and why it failed. The individual changes that make up repairs are then modeled in a repair tree as alternatives and sequences reflecting the syntactic structure of the inconsistent design rule. The approach is automated and tool supported. Its scalability was empirically evaluated on 29 UML models and 18 OCL design rules where we show that the approach computes repair trees in milliseconds on average. We believe that the approach is applicable to arbitrary modeling and constraint languages.", "citation": "Citations (32)", "year": "2012", "departments": ["JKU Linz, Austria", "JKU Linz, Austria"], "conf": "kbse", "authors": ["Alexander Reder.....http://dblp.org/pers/hd/r/Reder:Alexander", "Alexander Egyed.....http://dblp.org/pers/hd/e/Egyed:Alexander"], "pages": 10}