{"title": "Towards a software vulnerability prediction model using traceable code patterns and software metrics.", "fields": ["verification and validation", "kpi driven code analysis", "software sizing", "software metric", "software construction"], "abstract": "Software security is an important aspect of ensuring software quality. The goal of this study is to help developers evaluate software security using traceable patterns and software metrics during development. The concept of traceable patterns is similar to design patterns but they can be automatically recognized and extracted from source code. If these patterns can better predict vulnerable code compared to traditional software metrics, they can be used in developing a vulnerability prediction model to classify code as vulnerable or not. By analyzing and comparing the performance of traceable patterns with metrics, we propose a vulnerability prediction model. This study explores the performance of some code patterns in vulnerability prediction and compares them with traditional software metrics. We use the findings to build an effective vulnerability prediction model. We evaluate security vulnerabilities reported for Apache Tomcat, Apache CXF and three stand-alone Java web applications. We use machine learning and statistical techniques for predicting vulnerabilities using traceable patterns and metrics as features. We found that patterns have a lower false negative rate and higher recall in detecting vulnerable code than the traditional software metrics.", "citation": "Not cited", "departments": ["Mississippi State University"], "authors": ["Kazi Zakia Sultana.....http://dblp.org/pers/hd/s/Sultana:Kazi_Zakia"], "conf": "kbse", "year": "2017", "pages": 4}