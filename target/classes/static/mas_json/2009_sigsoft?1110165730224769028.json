{"title": "Asserting and checking determinism for multithreaded programs.", "fields": ["thread", "schedule", "deterministic system", "interleaving", "nondeterministic algorithm", "assertion", "determinism", "multi core processor"], "abstract": "The trend towards processors with more and more parallel cores is increasing the need for software that can take advantage of parallelism. The most widespread method for writing parallel software is to use explicit threads. Writing correct multithreaded programs, however, has proven to be quite challenging in practice. The key difficulty is  non-determinism . The threads of a parallel application may be interleaved non-deterministically during execution. In a buggy program, non-deterministic scheduling will lead to non-deterministic results - some interleavings will produce the correct result while others will not.   We propose an assertion framework for specifying that regions of a parallel program behave deterministically despite non-deterministic thread interleaving. Our framework allows programmers to write assertions involving pairs of program states arising from different parallel schedules. We describe an implementation of our deterministic assertions as a library for Java, and evaluate the utility of our specifications on a number of parallel Java benchmarks. We found specifying deterministic behavior to be quite simple using our assertions. Further, in experiments with our assertions, we were able to identify two races as true parallelism errors that lead to incorrect non-deterministic behavior. These races were distinguished from a number of benign races in the benchmarks.", "citation": "Citations (89)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Jacob Burnim.....http://dblp.org/pers/hd/b/Burnim:Jacob", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "sigsoft", "year": "2009", "pages": 10}