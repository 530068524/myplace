{"title": "Type-based safe resource deallocation for shared-memory concurrency.", "fields": ["fork", "satisfiability modulo theories", "type inference", "memory leak", "thread"], "abstract": "We propose a type system to guarantee safe resource deallocation for shared-memory concurrent programs by extending the previous type system based on fractional ownerships. Here, safe resource deallocation means that memory cells, locks, or threads are not left allocated when a program terminates. Our framework supports (1) fork/join parallelism, (2) synchronization with locks, and (3) dynamically allocated memory cells and locks. The type system is proved to be sound. We also provide a type inference algorithm for the type system and a prototype implementation of the algorithm.", "citation": "Citations (3)", "departments": ["Kyoto University", "Kyoto University", "Kyoto University"], "authors": ["Kohei Suenaga.....http://dblp.org/pers/hd/s/Suenaga:Kohei", "Ryota Fukuda.....http://dblp.org/pers/hd/f/Fukuda:Ryota", "Atsushi Igarashi.....http://dblp.org/pers/hd/i/Igarashi:Atsushi"], "conf": "oopsla", "year": "2012", "pages": 20}