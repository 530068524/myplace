{"title": "Improving API Usage through Automatic Detection of Redundant Code.", "fields": ["software quality", "static program analysis", "redundant code", "software system", "look and feel"], "abstract": "Software projects often rely on third-party libraries made accessible through Application Programming Interfaces (APIs). We have observed many cases where APIs are used in ways that are not the most effective. We developed a technique and tool support to automatically detect such patterns of API usage in software projects. The main hypothesis underlying our technique is that client code imitating the behavior of an API method without calling it may not be using the API effectively because it could instead call the method it imitates. Our technique involves analyzing software systems to detect cases of API method imitations. In addition to warning developers of potentially re-implemented API methods, we also indicate how to improve the use of the API. Applying our approach on 10 Java systems revealed over 400 actual cases of potentially suboptimal API usage, leading to many improvements to the quality of the code we studied.", "citation": "Citations (31)", "departments": ["McGill University", "McGill University"], "authors": ["David Kawrykow.....http://dblp.org/pers/hd/k/Kawrykow:David", "Martin P. Robillard.....http://dblp.org/pers/hd/r/Robillard:Martin_P="], "conf": "kbse", "year": "2009", "pages": 12}