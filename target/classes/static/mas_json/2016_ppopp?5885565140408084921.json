{"title": "Refined transactional lock elision.", "fields": ["software transactional memory", "giant lock", "avl tree", "readers writer lock", "spinlock"], "abstract": "Transactional lock elision (TLE) is a well-known technique that exploits hardware transactional memory (HTM) to introduce concurrency into lock-based software. It achieves that by attempting to execute a critical section protected by a lock in an atomic hardware transaction, reverting to the lock if these attempts fail. One significant drawback of TLE is that it disables hardware speculation once there is a thread running under lock. In this paper we present two algorithms that rely on existing compiler support for transactional programs and allow threads to speculate concurrently on HTM along with a thread holding the lock. We demonstrate the benefit of our algorithms over TLE and other related approaches with an in-depth analysis of a number of benchmarks and a wide range of workloads, including an AVL tree-based micro-benchmark and ccTSA, a real sequence assembler application.", "citation": "Citations (9)", "year": "2016", "departments": ["Oracle Corporation", "Oracle Corporation", "Oracle Corporation"], "conf": "ppopp", "authors": ["Dave Dice.....http://dblp.org/pers/hd/d/Dice:Dave", "Alex Kogan.....http://dblp.org/pers/hd/k/Kogan:Alex", "Yossi Lev.....http://dblp.org/pers/hd/l/Lev:Yossi"], "pages": 12}