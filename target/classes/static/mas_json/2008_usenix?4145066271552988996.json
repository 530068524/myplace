{"title": "Spectator: Detection and Containment of JavaScript Worms.", "fields": ["software deployment", "ajax", "javascript", "upload", "ranging"], "abstract": "Recent popularity of interactive AJAX-based Web 2.0 applications has given rise to a new breed of security threats: JavaScript worms. In this paper we propose Spectator, the first automatic detection and containment solution for JavaScript worms. Spectator performs distributed data tainting by observing and tagging the traffic between the browser and the Web application. When a piece of data propagates too far, a worm is reported. To prevent worm propagation, subsequent upload attempts performed by the same worm are blocked. Spectator is able to detect fast and slow moving, monomorphic and polymorphic worms with a low rate of false positives. In addition to our detection and containment solution, we propose a range of deployment models for Spectator, ranging from simple intranet-wide deployments to a scalable load-balancing scheme appropriate for large Web sites.\n\nIn this paper we demonstrate the effectiveness and efficiency of Spectator through both large-scale simulations as well as a case study that observes the behavior of a real-life JavaScript worm propagating across a social networking site. Based on our case study, we believe that Spectator is able to detect all JavaScript worms released to date while maintaining a low detection overhead for a range of workloads.", "citation": "Citations (75)", "departments": ["Microsoft", "Microsoft"], "authors": ["V. Benjamin Livshits.....http://dblp.org/pers/hd/l/Livshits:V=_Benjamin", "Weidong Cui.....http://dblp.org/pers/hd/c/Cui:Weidong"], "conf": "usenix", "year": "2008", "pages": 14}