{"title": "DRACO: discovering refactorings that improve architecture using fine-grained co-change dependencies.", "fields": ["merge", "dependency theory", "modularity", "code refactoring", "source code"], "abstract": "Co-change dependencies arise whenever two source code entities, such as classes, methods, or fields, change frequently together. Similar to other kinds of software dependencies, it is possible to build software clusters from co-change relationships and, as such, previous studies explored the use of this kind of dependency in several software engineering tasks, such as predicting software faults, recommending related source code changes, and assessing software modularity. In this ongoing work, our goal is to provide tools to discover refactoring opportunities\u00e2  such as move method, move field, split class, or merge classes-that are revealed when comparing the co-change clusters of fine-grained source code entities (methods, fields, constructors) to the original class decomposition; specifically when a source code entity is in the same class but in different clusters (or vice-versa). Our approach, named Draco, aims to produce minimal refactoring sequences that improve architecture decomposition.", "citation": "Not cited", "departments": ["University of Bras\u00edlia"], "authors": ["Marcos C\u00e9sar de Oliveira.....http://dblp.org/pers/hd/o/Oliveira_0001:Marcos_C=eacute=sar_de"], "conf": "sigsoft", "year": "2017", "pages": 4}