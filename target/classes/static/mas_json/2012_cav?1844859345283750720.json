{"title": "Lock Removal for Concurrent Trace Programs.", "fields": ["debugging", "runtime verification", "program analysis", "symbolic data analysis", "lock"], "abstract": "We propose a trace-based concurrent program analysis to soundly remove redundant synchronizations such as locks while preserving the behaviors of the concurrent computation. Our new method is computationally efficient in that it involves only thread-local computation and therefore avoids interleaving explosion, which is known as the main hurdle for scalable concurrency analysis. Our method builds on the partial-order theory and a unified analysis framework; therefore, it is more generally applicable than existing methods based on simple syntactic rules and ad hoc heuristics. We have implemented and evaluated the proposed method in the context of runtime verification of multithreaded Java and C programs. Our experimental results show that lock removal can significantly speed up symbolic predictive analysis for detecting concurrency bugs. Besides runtime verification, our new method will also be useful in applications such as debugging, performance optimization, program understanding, and maintenance.", "citation": "Citations (5)", "year": "2012", "departments": ["Princeton University", "Virginia Tech"], "conf": "cav", "authors": ["Vineet Kahlon.....http://dblp.org/pers/hd/k/Kahlon:Vineet", "Chao Wang.....http://dblp.org/pers/hd/w/Wang_0001:Chao"], "pages": 16}