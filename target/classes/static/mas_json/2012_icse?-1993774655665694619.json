{"title": "Generating obstacle conditions for requirements completeness.", "fields": ["counterexample", "obstacle", "completeness", "formal verification", "witness"], "abstract": "Missing requirements are known to be among the major causes of software failure. They often result from a natural inclination to conceive over-ideal systems where the software-to-be and its environment always behave as expected. Obstacle analysis is a goal-anchored form of risk analysis whereby exceptional conditions that may obstruct system goals are identified, assessed and resolved to produce complete requirements. Various techniques have been proposed for identifying obstacle conditions systematically. Among these, the formal ones have limited applicability or are costly to automate. This paper describes a tool-supported technique for generating a set of obstacle conditions guaranteed to be complete and consistent with respect to the known domain properties. The approach relies on a novel combination of model checking and learning technologies. Obstacles are iteratively learned from counterexample and witness traces produced by model checking against a goal and converted into positive and negative examples, respectively. A comparative evaluation is provided with respect to published results on the manual derivation of obstacles in a real safety-critical system for which failures have been reported.", "citation": "Citations (25)", "departments": ["Imperial College London", "Imperial College London", "Universit\u00e9 catholique de Louvain", "Imperial College London", "Imperial College London"], "authors": ["Dalal Alrajeh.....http://dblp.org/pers/hd/a/Alrajeh:Dalal", "Jeff Kramer.....http://dblp.org/pers/hd/k/Kramer:Jeff", "Axel van Lamsweerde.....http://dblp.org/pers/hd/l/Lamsweerde:Axel_van", "Alessandra Russo.....http://dblp.org/pers/hd/r/Russo:Alessandra", "Sebasti\u00e1n Uchitel.....http://dblp.org/pers/hd/u/Uchitel:Sebasti=aacute=n"], "conf": "icse", "year": "2012", "pages": 11}