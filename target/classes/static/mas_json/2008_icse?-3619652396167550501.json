{"title": "Using components for architecture-based management: the self-repair case.", "fields": ["software architecture", "fractal component model", "self healing", "middleware", "server"], "abstract": "Components are widely used for managing distributed applications because they not only capture the software architecture of managed applications as an assembly of components but also permit to dynamically adapt these applications to changing environments. Following this approach, our practical experience in the JADE environment about developing an autonomic repair management service with a self-healing behavior shows novel requirements on reflective component models for architecture-based management systems. First, we have identified five essential runtime abstractions that a component model must include in order to efficiently support an autonomic repair service. Second, our experience suggests that traditional reflective component models should be extended to allow specializing meta-operations. Third, our experience also shows that a meta-data checkpointing capability is best-suited for meta-data recovery after failures. We demonstrate the soundness of these findings in several ways. We applied the difficult problem of autonomic repair to both J2EE and JMS middleware. We further stressed our algorithms and mechanisms by applying them recursively towards gaining a self-healing property for the repair service itself. Although our experience was done in the JADE context, using the FRACTAL component model, we believe our findings to be general to architecture-based management systems using reflective component models.", "citation": "Citations (141)", "departments": ["Univ. Joseph Fourier, Grenoble", "Univ. Joseph Fourier, Grenoble", "Inst. Nat. Poly ... noble, Grenoble"], "authors": ["Sylvain Sicard.....http://dblp.org/pers/hd/s/Sicard:Sylvain", "Fabienne Boyer.....http://dblp.org/pers/hd/b/Boyer:Fabienne", "Noel De Palma.....http://dblp.org/pers/hd/p/Palma:Noel_De"], "conf": "icse", "year": "2008", "pages": 10}