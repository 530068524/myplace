{"title": "Abstractions from tests.", "fields": ["theoretical computer science", "constructive", "java", "abstraction", "static analysis"], "abstract": "We present a framework for leveraging dynamic analysis to find good abstractions for static analysis. A static analysis in our framework is parametrised. Our main insight is to directly and efficiently compute from a concrete trace, a necessary condition on the parameter configurations to prove a given query, and thereby prune the space of parameter configurations that the static analysis must consider. We provide constructive algorithms for two instance analyses in our framework: a flow- and context-sensitive thread-escape analysis and a flow- and context-insensitive points-to analysis. We show the efficacy of these analyses, and our approach, on six Java programs comprising two million bytecodes: the thread-escape analysis resolves 80% of queries on average, disproving 28% and proving 52%; the points-to analysis resolves 99% of queries on average, disproving 29% and proving 70%.", "citation": "Citations (27)", "departments": ["Georgia Institute of Technology", "University of Oxford", "Tel Aviv University", "Tel Aviv University"], "authors": ["Mayur Naik.....http://dblp.org/pers/hd/n/Naik:Mayur", "Hongseok Yang.....http://dblp.org/pers/hd/y/Yang:Hongseok", "Ghila Castelnuovo.....http://dblp.org/pers/hd/c/Castelnuovo:Ghila", "Mooly Sagiv.....http://dblp.org/pers/hd/s/Sagiv:Mooly"], "conf": "popl", "year": "2012", "pages": 14}