{"title": "GraphP: Reducing Communication for PIM-Based Graph Processing with Efficient Data Partition.", "fields": ["serdes", "tesseract", "hybrid memory cube", "speedup", "big data"], "abstract": "Processing-In-Memory (PIM) is an effective technique that reduces data movements by integrating processing units within memory. The recent advance of \u201cbig data\u201d and 3D stacking technology make PIM a practical and viable solution for the modern data processing workloads. It is exemplified by the recent research interests on PIM-based acceleration. Among them, TESSERACT is a PIM-enabled parallel graph processing architecture based on Micron\u2019s Hybrid Memory Cube (HMC), one of the most prominent 3D-stacked memory technologies. It implements a Pregel-like vertex-centric programming model, so that users could develop programs in the familiar interface while taking advantage of PIM. Despite the orders of magnitude speedup compared to DRAM-based systems, TESSERACT generates excessive crosscube communications through SerDes links, whose bandwidth is much less than the aggregated local bandwidth of HMCs. Our investigation indicates that this is because of the restricted data organization required by the vertex programming model. In this paper, we argue that a PIM-based graph processing system should take data organization as a first-order design consideration. Following this principle, we propose GraphP, a novel HMC-based software/hardware co-designed graph processing system that drastically reduces communication and energy consumption compared to TESSERACT. GraphP features three key techniques. 1) \u201cSource-cut\u201d partitioning, which fundamentally changes the cross-cube communication from one remote put per cross-cube edge to one update per replica. 2) \u201cTwo-phase Vertex Program\u201d, a programming model designed for the \u201csource-cut\u201d partitioning with two operations: GenUpdate and ApplyUpdate. 3) Hierarchical communication and overlapping, which further improves performance with unique opportunities offered by the proposed partitioning and programming model. We evaluate GraphP using a cycle accurate simulator with 5 real-world graphs and 4 algorithms. The results show that it provides on average 1.7 speedup and 89% energy saving compared to TESSERACT.", "citation": "Citations (1)", "departments": ["Tsinghua University", "University of Southern California", "University of Southern California", "Stanford University", "Tsinghua University"], "authors": ["Mingxing Zhang.....http://dblp.org/pers/hd/z/Zhang:Mingxing", "Youwei Zhuo.....http://dblp.org/pers/hd/z/Zhuo:Youwei", "Chao Wang.....http://dblp.org/pers/hd/w/Wang:Chao", "Mingyu Gao.....http://dblp.org/pers/hd/g/Gao:Mingyu", "Yongwei Wu.....http://dblp.org/pers/hd/w/Wu:Yongwei", "Kang Chen.....http://dblp.org/pers/hd/c/Chen:Kang", "Christos Kozyrakis.....http://dblp.org/pers/hd/k/Kozyrakis:Christos", "Xuehai Qian.....http://dblp.org/pers/hd/q/Qian:Xuehai"], "conf": "hpca", "year": "2018", "pages": 14}