{"title": "Nested refinements: a logic for duck typing.", "fields": ["logical consequence", "metatheory", "soundness", "subtyping", "duck typing"], "abstract": "Programs written in dynamic languages make heavy use of features --- run-time type tests, value-indexed dictionaries, polymorphism, and higher-order functions --- that are beyond the reach of type systems that employ either purely syntactic or purely semantic reasoning. We present a core calculus, System D, that merges these two modes of reasoning into a single powerful mechanism of nested refinement types wherein the typing relation is itself a predicate in the refinement logic. System D coordinates SMT-based logical implication and syntactic subtyping to automatically typecheck sophisticated dynamic language programs. By coupling nested refinements with McCarthy's theory of finite maps, System D can precisely reason about the interaction of higher-order functions, polymorphism, and dictionaries. The addition of type predicates to the refinement logic creates a circularity that leads to unique technical challenges in the metatheory, which we solve with a novel stratification approach that we use to prove the soundness of System D.", "citation": "Citations (63)", "departments": ["University of California, San Diego", "University of California, San Diego", "University of California, San Diego"], "authors": ["Ravi Chugh.....http://dblp.org/pers/hd/c/Chugh:Ravi", "Patrick Maxim Rondon.....http://dblp.org/pers/hd/r/Rondon:Patrick_Maxim", "Ranjit Jhala.....http://dblp.org/pers/hd/j/Jhala:Ranjit"], "conf": "popl", "year": "2012", "pages": 14}