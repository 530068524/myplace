{"title": "Automatic Verification of Iterated Separating Conjunctions Using Symbolic Execution.", "fields": ["bounded set", "restrict", "heap", "separation logic", "iterated function"], "abstract": "In permission logics such as separation logic, the iterated separating conjunction is a quantifier denoting access permission to an unbounded set of heap locations. In contrast to recursive predicates, iterated separating conjunctions do not prescribe a structure on the locations they range over, and so do not restrict how to traverse and modify these locations. This flexibility is important for the verification of random-access data structures such as arrays and data structures that can be traversed in multiple ways such as graphs. Despite its usefulness, no automatic program verifier natively supports iterated separating conjunctions; they are especially difficult to incorporate into symbolic execution engines, the prevalent technique for building verifiers for these logics.", "citation": "Citations (9)", "year": "2016", "departments": ["ETH Zurich", "ETH Zurich", "ETH Zurich"], "conf": "cav", "authors": ["Peter M\u00fcller.....http://dblp.org/pers/hd/m/M=uuml=ller_0001:Peter", "Malte Schwerhoff.....http://dblp.org/pers/hd/s/Schwerhoff:Malte", "Alexander J. Summers.....http://dblp.org/pers/hd/s/Summers:Alexander_J="], "pages": 21}