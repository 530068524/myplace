{"title": "FlexVec: auto-vectorization for irregular loops.", "fields": ["for loop", "vectorization", "speedup", "spec", "simd"], "abstract": "Traditional vectorization techniques build a dependence graph with distance and direction information to determine whether a loop is vectorizable. Since vectorization reorders the execution of instructions across iterations, in general instructions involved in a strongly connected component (SCC) are deemed not vectorizable unless the SCC can be eliminated using techniques such as scalar expansion or privatization. Therefore, traditional vectorization techniques are limited in their ability to efficiently handle loops with dynamic cross-iteration dependencies or complex control flow interweaved within the dependence cycles. When potential dependencies do not occur very often, the end-result is under utilization of the SIMD hardware. In this paper, we propose FlexVec architecture that combines new vector instructions with novel code generation techniques to dynamically adjusts vector length for loop statements affected by cross-iteration dependencies that happen at runtime. We have designed and implemented FlexVec's new ISA as extensions to the recently released AVX-512 ISA. We have evaluated the performance improvements enabled by FlexVec vectorization for 11 C/C++ SPEC 2006 benchmarks and 7 real applications with AVX-512 vectorization as baseline. We show that FlexVec vectorization technique produces a Geomean speedup of 9% for SPEC 2006 and a Geomean speedup of 11% for 7 real applications.", "citation": "Citations (3)", "departments": ["Intel", "Google", "Intel"], "authors": ["Sara S. Baghsorkhi.....http://dblp.org/pers/hd/b/Baghsorkhi:Sara_S=", "Nalini Vasudevan.....http://dblp.org/pers/hd/v/Vasudevan:Nalini", "Youfeng Wu.....http://dblp.org/pers/hd/w/Wu:Youfeng"], "conf": "pldi", "year": "2016", "pages": 14}