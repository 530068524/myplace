{"title": "DiffGen: Automated Regression Unit-Test Generation.", "fields": ["software development", "unit testing", "regression testing", "software maintenance", "source code"], "abstract": "Software programs continue to evolve throughout their lifetime. Maintenance of such evolving programs, including regression testing, is one of the most expensive activities in software development. We present an approach and its implementation called DiffGen for automated regression unit-test generation and checking for Java programs. Given two versions of a Java class, our approach instruments the code by adding new branches such that if these branches can be covered by a test generation tool, behavioral differences between the two class versions are exposed. DiffGen then uses a coverage-based test generation tool to generate test inputs for covering the added branches to expose behavioral differences. We have evaluated DiffGen on finding behavioral differences between 21 classes and their versions. Experimental results show that our approach can effectively expose many behavioral differences that cannot be exposed by state-of-the-art techniques.", "citation": "Citations (65)", "departments": ["North Carolina State University", "North Carolina State University"], "authors": ["Kunal Taneja.....http://dblp.org/pers/hd/t/Taneja:Kunal", "Tao Xie.....http://dblp.org/pers/hd/x/Xie_0001:Tao"], "conf": "kbse", "year": "2008", "pages": 4}