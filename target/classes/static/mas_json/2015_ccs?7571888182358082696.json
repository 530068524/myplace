{"title": "Symbolic Execution of Obfuscated Code.", "fields": ["obfuscation", "symbolic execution", "taint checking", "concolic testing"], "abstract": "Symbolic and concolic execution nd important applications in a number of security-related program analyses, including analysis of malicious code. However, malicious code tend to very often be obfuscated, and current concolic analysis techniques have trouble dealing with some of these obfuscations, leading to imprecision and/or excessive resource usage. This paper discusses three such obfuscations: two of these are already found in obfuscation tools used by malware, while the third is a simple variation on an existing obfuscation technique. We show empirically that existing symbolic analyses are not robust against such obfuscations, and propose ways in which the problems can be mitigated using a combination of ne-grained bit-level taint analysis and architecture-aware constraint generations. Experimental results indicate that our approach is eective in allowing symbolic and concolic execution to handle such obfuscations.", "citation": "Citations (22)", "year": "2015", "departments": ["University of Arizona", "University of Arizona"], "conf": "ccs", "authors": ["Babak Yadegari.....http://dblp.org/pers/hd/y/Yadegari:Babak", "Saumya Debray.....http://dblp.org/pers/hd/d/Debray:Saumya"], "pages": 13}