{"title": "Automatic mining of specifications from invocation traces and method invariants.", "fields": ["restrict", "implementation", "documentation", "inference", "experimental data"], "abstract": "Software library documentation often describes individual methods' APIs, but not the intended protocols and method interactions. This can lead to library misuse, and restrict runtime detection of protocol violations and automated verification of software that uses the library. Specification mining, if accurate, can help mitigate these issues, which has led to significant research into new model-inference techniques that produce FSM-based models from program invariants and execution traces. However, there is currently a lack of empirical studies that, in a principled way, measure the impact of the inference strategies on model quality. To this end, we identify four such strategies and systematically study the quality of the models they produce for nine off-the-shelf libraries. We find that (1) using invariants to infer an initial model significantly improves model quality, increasing precision by 4% and recall by 41%, on average; (2) effective invariant filtering is crucial for quality and scalability of strategies that use invariants; and (3) using traces in combination with invariants greatly improves robustness to input noise. We present our empirical evaluation, implement new and extend existing model-inference techniques, and make public our implementations, ground-truth models, and experimental data. Our work can lead to higher-quality model inference, and directly improve the techniques and tools that rely on model inference.", "citation": "Citations (28)", "departments": ["Google", "University of Massachusetts Amherst", "University of Southern California"], "authors": ["Ivo Krka.....http://dblp.org/pers/hd/k/Krka:Ivo", "Yuriy Brun.....http://dblp.org/pers/hd/b/Brun:Yuriy", "Nenad Medvidovic.....http://dblp.org/pers/hd/m/Medvidovic:Nenad"], "conf": "sigsoft", "year": "2014", "pages": 12}