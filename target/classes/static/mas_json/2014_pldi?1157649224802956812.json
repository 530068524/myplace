{"title": "Getting F-bounded polymorphism into shape.", "fields": ["restrict", "recursion", "bounded quantification", "subtyping", "joins"], "abstract": "We present a way to restrict recursive inheritance without sacrificing the benefits of F-bounded polymorphism. In particular, we distinguish two new concepts,  materials  and  shapes , and demonstrate through a survey of 13.5 million lines of open-source generic-Java code that these two concepts never actually overlap in practice. With this  Material-Shape Separation , we prove that even naive type-checking algorithms are sound and complete, some of which address problems that were unsolvable even under the existing proposals for restricting inheritance. We illustrate how the simplicity of our design reflects the design intuitions employed by programmers and potentially enables new features coming into demand for upcoming programming languages.", "citation": "Citations (13)", "departments": ["Cornell University", "Cornell University", "Cornell University"], "authors": ["Ben Greenman.....http://dblp.org/pers/hd/g/Greenman:Ben", "Fabian Muehlboeck.....http://dblp.org/pers/hd/m/Muehlboeck:Fabian", "Ross Tate.....http://dblp.org/pers/hd/t/Tate:Ross"], "conf": "pldi", "year": "2014", "pages": 11}