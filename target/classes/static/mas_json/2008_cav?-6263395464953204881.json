{"title": "Theorem Proving for Verification (Invited Tutorial).", "fields": ["dynamic logic", "computation tree logic", "correctness", "zeroth order logic", "signature"], "abstract": "There are numerous verification techniques in active use. Traditional testing and simulation usually only provide a limited guarantee, since they can seldom exercise all possible situations. Methods based on abstraction consciously simplify the problem to make its complete analysis tractable, but still do not normally completely verify the ultimate target. We will confine ourselves here to full formal verification techniques that can be used to prove complete correctness of a (model of a) system with respect to a formal specification. Roughly speaking, these methods model the system and specification in a logical formalism and then apply general methods to determine whether the formal expressions are valid, indicating correctness of the model with respect to the specification. Typical formalisms include:\n\n\nPropositional logic, a.k.a. Boolean algebra\nTemporal logic (CTL, LTL etc.)\nQuantifier-free combinations of first-order theories\nFull first-order logic\nHigher-order logic or first-order logic with arithmetic or set theory\n\n\n\nThis list is organized approximately in order of increasing logical generality, with formalisms later in the list often subsuming earlier ones. But there is a price to be paid for this generality: deciding validity in the formalisms becomes successively more difficult.", "citation": "Citations (4)", "year": "2008", "departments": ["Intel"], "conf": "cav", "authors": ["John Harrison.....http://dblp.org/pers/hd/h/Harrison:John"], "pages": 8}