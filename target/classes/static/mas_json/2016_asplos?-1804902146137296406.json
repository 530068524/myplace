{"title": "Failure-Atomic Persistent Memory Updates via JUSTDO Logging.", "fields": ["memory footprint", "logging", "non volatile memory", "processor register", "real time computing", "computer science", "persistent data structure", "atomicity", "cpu cache", "persistence"], "abstract": "Persistent memory invites applications to manipulate persistent data via load and store instructions. Because failures during updates may destroy transient data (e.g., in CPU registers), preserving data integrity in the presence of failures requires failure-atomic bundles of updates. Prior failure atomicity approaches for persistent memory entail overheads due to logging and CPU cache flushing. Persistent caches can eliminate the need for flushing, but conventional logging remains complex and memory intensive. We present the design and implementation of JUSTDO logging, a new failure atomicity mechanism that greatly reduces the memory footprint of logs, simplifies log management, and enables fast parallel recovery following failure. Crash-injection tests confirm that JUSTDO logging preserves application data integrity and performance evaluations show that it improves throughput 3x or more compared with a state-of-the-art alternative for a spectrum of data-intensive algorithms.", "citation": "Citations (17)", "year": "2016", "departments": ["University of Rochester", "Hewlett-Packard", "University of Michigan"], "conf": "asplos", "authors": ["Joseph Izraelevitz.....http://dblp.org/pers/hd/i/Izraelevitz:Joseph", "Terence Kelly.....http://dblp.org/pers/hd/k/Kelly:Terence", "Aasheesh Kolli.....http://dblp.org/pers/hd/k/Kolli:Aasheesh"], "pages": 16}