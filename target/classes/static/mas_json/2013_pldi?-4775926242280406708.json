{"title": "Complete completion using types and weights.", "fields": ["program synthesis", "expression", "type inhabitation", "plug in", "scala"], "abstract": "Developing modern software typically involves composing functionality from existing libraries. This task is difficult because libraries may expose many methods to the developer. To help developers in such scenarios, we present a technique that synthesizes and suggests valid expressions of a given type at a given program point. As the basis of our technique we use type inhabitation for lambda calculus terms in long normal form. We introduce a succinct representation for type judgements that merges types into equivalence classes to reduce the search space, then reconstructs any desired number of solutions on demand. Furthermore, we introduce a method to rank solutions based on weights derived from a corpus of code. We implemented the algorithm and deployed it as a plugin for the Eclipse IDE for Scala. We show that the techniques we incorporated greatly increase the effectiveness of the approach. Our evaluation benchmarks are code examples from programming practice; we make them available for future comparisons.", "citation": "Citations (83)", "departments": ["\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "Max Planck Society"], "authors": ["Tihomir Gvero.....http://dblp.org/pers/hd/g/Gvero:Tihomir", "Viktor Kuncak.....http://dblp.org/pers/hd/k/Kuncak:Viktor", "Ivan Kuraj.....http://dblp.org/pers/hd/k/Kuraj:Ivan", "Ruzica Piskac.....http://dblp.org/pers/hd/p/Piskac:Ruzica"], "conf": "pldi", "year": "2013", "pages": 12}