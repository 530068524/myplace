{"title": "Parabix: Boosting the efficiency of text processing on commodity processors.", "fields": ["microarchitecture", "ranging", "toolchain", "x86", "simd"], "abstract": "Modern applications employ text files widely for providing data storage in a readable format for applications ranging from database systems to mobile phones. Traditional text processing tools are built around a byte-at-a-time sequential processing model that introduces significant branch and cache miss penalties. Recent work has explored an alternative, transposed representation of text, Parabix (Parallel Bit Streams), to accelerate scanning and parsing using SIMD facilities. This paper advocates and develops Parabix as a general framework and toolkit, describing the software toolchain and run-time support that allows applications to exploit modern SIMD instructions for high performance text processing. The goal is to generalize the techniques to ensure that they apply across a wide variety of applications and architectures. The toolchain enables the application developer to write constructs assuming unbounded character streams and Parabix's code translator generates code based on machine specifics (e.g., SIMD register widths). The general argument in support of Parabix technology is made by a detailed performance and energy study of XML parsing across a range of processor architectures. Parabix exploits intra-core SIMD hardware and demonstrates 2\u00d7\u20137\u00d7 speedup and 4\u00d7 improvement in energy efficiency when compared with two widely used conventional software parsers, Expat and Apache-Xerces. SIMD implementations across three generations of x86 processors are studied including the new SandyBridge. The 256-bit AVX technology in Intel SandyBridge is compared with the well established 128-bit SSE technology to analyze the benefits and challenges of 3-operand instruction formats and wider SIMD hardware. Finally, the XML program is partitioned into pipeline stages to demonstrate that thread-level parallelism enables the application to exploit SIMD units scattered across the different cores, achieving improved performance (2\u00d7 on 4 cores) while maintaining single-threaded energy levels.", "citation": "Citations (18)", "departments": ["Simon Fraser University", "Simon Fraser University", "Simon Fraser University", "Simon Fraser University", "Simon Fraser University"], "authors": ["Dan Lin.....http://dblp.org/pers/hd/l/Lin_0003:Dan", "Nigel Medforth.....http://dblp.org/pers/hd/m/Medforth:Nigel", "Kenneth S. Herdy.....http://dblp.org/pers/hd/h/Herdy:Kenneth_S=", "Arrvindh Shriraman.....http://dblp.org/pers/hd/s/Shriraman:Arrvindh", "Robert D. Cameron.....http://dblp.org/pers/hd/c/Cameron:Robert_D="], "conf": "hpca", "year": "2012", "pages": 12}