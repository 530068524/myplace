{"title": "Ad Hoc Synchronization Considered Harmful.", "fields": ["porting", "implementation", "considered harmful", "use case", "ad hoc testing"], "abstract": "Many synchronizations in existing multi-threaded programs are implemented in an ad hoc way. The first part of this paper does a comprehensive characteristic study of ad hoc synchronizations in concurrent programs. By studying 229 ad hoc synchronizations in 12 programs of various types (server, desktop and scientific), including Apache, MySQL, Mozilla, etc., we find several interesting and perhaps alarming characteristics: (1) Every studied application uses ad hoc synchronizations. Specifically, there are 6-83 ad hoc synchronizations in each program. (2) Ad hoc synchronizations are error-prone. Significant percentages (22-67%) of these ad hoc synchronizations introduced bugs or severe performance issues. (3) Ad hoc synchronization implementations are diverse and many of them cannot be easily recognized as synchronizations, i.e. have poor readability and maintainability.\n\nThe second part of our work builds a tool called SyncFinder to automatically identify and annotate ad hoc synchronizations in concurrent programswritten in C/C++ to assist programmers in porting their code to better structured implementations, while also enabling other tools to recognize them as synchronizations. Our evaluation using 25 concurrent programs shows that, on average, SyncFinder can automatically identify 96% of ad hoc synchronizations with 6% false positives.\n\nWe also build two use cases to leverage SyncFinder's auto-annotation. The first one uses annotation to detect 5 deadlocks (including 2 new ones) and 16 potential issues missed by previous analysis tools in Apache, MySQL and Mozilla. The second use case reduces Valgrind data race checker's false positive rates by 43-86%.", "citation": "Citations (135)", "year": "2010", "departments": ["University of Illinois at Urbana\u2013Champaign", "University of California, San Diego", "University of California, San Diego", "University of California, San Diego", "Intel"], "conf": "osdi", "authors": ["Weiwei Xiong.....http://dblp.org/pers/hd/x/Xiong:Weiwei", "Soyeon Park.....http://dblp.org/pers/hd/p/Park:Soyeon", "Jiaqi Zhang.....http://dblp.org/pers/hd/z/Zhang:Jiaqi", "Yuanyuan Zhou.....http://dblp.org/pers/hd/z/Zhou:Yuanyuan", "Zhiqiang Ma.....http://dblp.org/pers/hd/m/Ma:Zhiqiang"], "pages": 14}