{"title": "Effective Program Verification for Relaxed Memory Models.", "fields": ["software development", "vector clock", "memory model", "stateless protocol", "sequential consistency"], "abstract": "Program verification for relaxed memory models is hard. The high degree of nondeterminism in such models challenges standard verification techniques. This paper proposes a new verification technique for the most common relaxation, store buffers. Crucial to this technique is the observation that all programmers, including those who use low-lock techniques for performance, expect their programs to be sequentially consistent. We first present a monitor algorithm that can detect the presence of program executions that are not sequentially consistent due to store buffers while  only exploring sequentially consistent executions. Then, we combine this monitor with a stateless model checker that verifies that every sequentially consistent execution is correct. We have implemented this algorithm in a prototype tool called Sober and present experiments that demonstrate the precision and scalability of our method. We find relaxed memory model bugs in several programs, including two previously unknown bugs in a production-level concurrency library that would have been difficult to find by other means.", "citation": "Citations (128)", "year": "2008", "departments": ["Microsoft", "Microsoft"], "conf": "cav", "authors": ["Sebastian Burckhardt.....http://dblp.org/pers/hd/b/Burckhardt:Sebastian", "Madanlal Musuvathi.....http://dblp.org/pers/hd/m/Musuvathi:Madanlal"], "pages": 14}