{"title": "ICE: Managing cold state for big data applications.", "fields": ["stream processing", "analytics", "exploit", "auxiliary memory", "operator"], "abstract": "The use of big data in a business revolves around a monitor-mine-manage (M3) loop: data is monitored in real-time, while mined insights are used to manage the business and derive value. While mining has traditionally been performed offline, recent years have seen an increasing need to perform all phases of M3 in real-time. A stream processing engine (SPE) enables such a seamless M3 loop for applications such as targeted advertising, recommender systems, risk analysis, and call-center analytics. However, these M3 applications require the SPE to maintain massive amounts of state in memory, leading to resource usage skew: memory is scarce and over-utilized, whereas CPU and I/O are under-utilized. In this paper, we propose a novel solution to scaling SPEs for memory-bound M3 applications that leverages natural access skew in data-parallel subqueries, where a small fraction of the state is hot (frequently accessed) and most state is cold (infrequently accessed). We present ICE (incremental coldstate engine), a framework that allows an SPE to seamlessly migrate cold state to secondary storage (disk or flash). ICE uses a novel architecture that exploits the semantics of individual stream operators to efficiently manage cold state in an SPE using an incremental log-structured store. We implemented ICE inside an SPE. Experiments using real data show that ICE can reduce memory usage significantly without sacrificing performance, and can sometimes even improve performance.", "citation": "Citations (1)", "departments": ["Microsoft", "Microsoft", "Microsoft"], "authors": ["Badrish Chandramouli.....http://dblp.org/pers/hd/c/Chandramouli:Badrish", "Justin J. Levandoski.....http://dblp.org/pers/hd/l/Levandoski:Justin_J=", "Eli Cortez.....http://dblp.org/pers/hd/c/Cortez:Eli"], "conf": "icde", "year": "2016", "pages": 12}