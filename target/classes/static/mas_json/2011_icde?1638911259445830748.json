{"title": "Decomposing DAGs into spanning trees: A new way to compress transitive closures.", "fields": ["strength of a graph", "edge graceful labeling", "simplex graph", "complement graph", "transitive reduction"], "abstract": "Let G(V, E) be a digraph (directed graph) with n nodes and e edges. Digraph G* = (V, E*) is the reflexive, transitive closure if (v, u) \u2208 E* iff there is a path from v to u in G. Efficient storage of G* is important for supporting reachability queries which are not only common on graph databases, but also serve as fundamental operations used in many graph algorithms. A lot of strategies have been suggested based on the graph labeling, by which each node is assigned with certain labels such that the reachability of any two nodes through a path can be determined by their labels. Among them are interval labelling, chain decomposition, and 2-hop labeling. However, due to the very large size of many real world graphs, the computational cost and size of labels using existing methods would prove too expensive to be practical. In this paper, we propose a new approach to decompose a graph into a series of spanning trees which may share common edges, to transform a reachability query over a graph into a set of queries over trees. We demonstrate both analytically and empirically the efficiency and effectiveness of our method.", "citation": "Citations (21)", "departments": ["University of Winnipeg", "University of Winnipeg"], "authors": ["Yangjun Chen.....http://dblp.org/pers/hd/c/Chen:Yangjun", "Yibin Chen.....http://dblp.org/pers/hd/c/Chen:Yibin"], "conf": "icde", "year": "2011", "pages": 12}