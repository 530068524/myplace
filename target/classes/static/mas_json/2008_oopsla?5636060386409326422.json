{"title": "jStar: towards practical verification for java.", "fields": ["software development", "software design pattern", "visitor pattern", "symbolic execution", "separation logic"], "abstract": "In this paper we introduce a novel methodology for verifying a large set of Java programs which builds on recent theoretical developments in program verification: it combines the idea of abstract predicate families and the idea of symbolic execution and abstraction using separation logic. The proposed technology has been implemented in a new automatic verification system, called jStar, which combines theorem proving and abstract interpretation techniques. We demonstrate the effectiveness of our methodology by using jStar to verify example programs implementing four popular design patterns (subject/observer, visitor, factory, and pooling). Although these patterns are extensively used by object-oriented developers in real-world applications, so far they have been highly challenging for existing object-oriented verification techniques.", "citation": "Citations (318)", "departments": ["Queen Mary University of London", "University of Cambridge"], "authors": ["Dino Distefano.....http://dblp.org/pers/hd/d/Distefano:Dino", "Matthew J. Parkinson.....http://dblp.org/pers/hd/p/Parkinson:Matthew_J="], "conf": "oopsla", "year": "2008", "pages": 14}