{"title": "Side-Channel Attacks on BLISS Lattice-Based Signatures: Exploiting Branch Tracing against strongSwan and Electromagnetic Emanations in Microcontrollers.", "fields": ["tracing", "microcontroller", "exploit", "side channel attack", "lattice", "digital signature algorithm", "bliss", "fault injection"], "abstract": "In this paper, we investigate the security of the BLISS lattice-based signature scheme, one of the most promising candidates for postquantum-secure signatures, against side-channel attacks. Several works have been devoted to its efficient implementation on various platforms, from desktop CPUs to microcontrollers and FPGAs, and more recent papers have also considered its security against certain types of physical attacks, notably fault injection and cache attacks. We turn to more traditional side-channel analysis, and describe several attacks that can yield a full key recovery.   We first identify a serious source of leakage in the rejection sampling algorithm used during signature generation. Existing implementations of that rejection sampling step, which is essential for security, actually leak the \"relative norm\" of the secret key. We show how an extension of an algorithm due to Howgrave-Graham and Szydlo can be used to recover the key from that relative norm, at least when the absolute norm is easy to factor (which happens for a significant fraction of secret keys). We describe how this leakage can be exploited in practice both on an embedded device (an 8-bit AVR microcontroller) using  electromagnetic analysis  (EMA), and a desktop computer (recent Intel CPU running Linux) using  branch tracing . The latter attack has been mounted against the open source VPN software strongSwan.   We also show that other parts of the BLISS signing algorithm can leak secrets not just for a subset of secret keys, but for 100% of them. The BLISS Gaussian sampling algorithm in strongSwan is intrinsically variable time. This would be hard to exploit using a noisy source of leakage like EMA, but branch tracing allows to recover the  entire randomness  and hence the key: we show that a  single  execution of the strongSwan signature algorithm is actually sufficient for full key recovery. We also describe a more traditional side-channel attack on the sparse polynomial multiplications carried out in BLISS: classically, multiplications can be attacked using DPA; however, our target 8-bit AVR target implementation uses repeated shifted additions instead. Surprisingly, we manage to obtain a full key recovery in that setting using integer linear programming from a single EMA trace.", "citation": "Not cited", "year": "2017", "departments": ["Pierre-and-Marie-Curie University", "University of Rennes", "DGA.MI, Bruz, France", "NTT Corporation, Tokyo, Japan"], "conf": "ccs", "authors": ["Thomas Espitau.....http://dblp.org/pers/hd/e/Espitau:Thomas", "Pierre-Alain Fouque.....http://dblp.org/pers/hd/f/Fouque:Pierre=Alain", "Beno\u00eet G\u00e9rard.....http://dblp.org/pers/hd/g/G=eacute=rard:Beno=icirc=t", "Mehdi Tibouchi.....http://dblp.org/pers/hd/t/Tibouchi:Mehdi"], "pages": 18}