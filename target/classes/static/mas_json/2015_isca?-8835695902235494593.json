{"title": "Cost-effective speculative scheduling in high performance processors.", "fields": ["operand", "cache", "microarchitecture", "cpu cache", "wait"], "abstract": "To maximize performance, out-of-order execution processors sometimes issue instructions without having the guarantee that operands will be available in time; e.g. loads are typically assumed to hit in the L1 cache and dependent instructions are issued accordingly. This form of speculation -- that we refer to as speculative scheduling -- has been used for two decades in real processors, but has received little attention from the research community.   In particular, as pipeline depth grows, and the distance between the Issue and the Execute stages increases, it becomes critical to issue instructions dependent on variable-latency instructions as soon as possible rather than wait for the actual cycle at which the result becomes available. Unfortunately, due to the uncertain nature of speculative scheduling, the scheduler may wrongly issue an instruction that will not have its source(s) available on the bypass network when it reaches the Execute stage. In that event, the instruction is canceled and replayed, potentially impairing performance and increasing energy consumption.   In this work, we do not present a new replay mechanism. Rather, we focus on ways to reduce the number of replays that are agnostic of the replay scheme. First, we propose an easily implementable, low-cost solution to reduce the number of replays caused by L1 bank conflicts. Schedule shifting always assumes that, given a dual-load issue capacity, the second load issued in a given cycle will be delayed because of a bank conflict. Its dependents are thus always issued with the corresponding delay. Second, we also improve on existing L1 hit/miss prediction schemes by taking into account instruction criticality. That is, for some criterion of criticality and for loads whose hit/miss behavior is hard to predict, we show that it is more cost-effective to stall dependents if the load is not predicted critical.   In total, in our experiments assuming a 4-cycle issue-to-execute delay, we found that the majority of instruction replays caused by L1 data cache banks conflicts -- 78.0% -- and L1 hit mispredictions -- 96.5% -- can be avoided, thus leading to a 3.4% performance gain and a 13.4% decrease in the number of issued instructions, over a baseline pipeline with speculative scheduling.", "citation": "Citations (2)", "departments": ["French Institute for Research in Computer Science and Automation", "French Institute for Research in Computer Science and Automation", "French Institute for Research in Computer Science and Automation", "Uppsala University", "Uppsala University"], "authors": ["Arthur Perais.....http://dblp.org/pers/hd/p/Perais:Arthur", "Andr\u00e9 Seznec.....http://dblp.org/pers/hd/s/Seznec:Andr=eacute=", "Pierre Michaud.....http://dblp.org/pers/hd/m/Michaud:Pierre", "Andreas Sembrant.....http://dblp.org/pers/hd/s/Sembrant:Andreas", "Erik Hagersten.....http://dblp.org/pers/hd/h/Hagersten:Erik"], "conf": "isca", "year": "2015", "pages": 13}