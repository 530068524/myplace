{"title": "Modular verification of security protocol code by typing.", "fields": ["program analysis", "cryptographic primitive", "modular programming", "cryptographic protocol", "security of cryptographic hash functions", "computer science", "modular design", "typing", "soundness", "computer architecture"], "abstract": "We propose a method for verifying the security of protocol implementations. Our method is based on declaring and enforcing invariants on the usage of cryptography. We develop cryptographic libraries that embed a logic model of their cryptographic structures and that specify preconditions and postconditions on their functions so as to maintain their invariants. We present a theory to justify the soundness of modular code verification via our method.   We implement the method for protocols coded in F# and verified using F7, our SMT-based typechecker for refinement types, that is, types carrying formulas to record invariants. As illustrated by a series of programming examples, our method can flexibly deal with a range of different cryptographic constructions and protocols.   We evaluate the method on a series of larger case studies of protocol code, previously checked using whole-program analyses based on ProVerif, a leading verifier for cryptographic protocols. Our results indicate that compositional verification by typechecking with refinement types is more scalable than the best domain-specific analysis currently available for cryptographic code.", "citation": "Citations (128)", "departments": ["Microsoft", "Microsoft", "Microsoft", "School of Informatics"], "authors": ["Karthikeyan Bhargavan.....http://dblp.org/pers/hd/b/Bhargavan:Karthikeyan", "C\u00e9dric Fournet.....http://dblp.org/pers/hd/f/Fournet:C=eacute=dric", "Andrew D. Gordon.....http://dblp.org/pers/hd/g/Gordon:Andrew_D="], "conf": "popl", "year": "2010", "pages": 12}