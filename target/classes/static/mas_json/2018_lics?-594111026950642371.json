{"title": "ReLoC: A Mechanised Relational Logic for Fine-Grained Concurrency.", "fields": ["judgement", "soundness", "mathematical proof", "expression", "separation logic"], "abstract": "We present ReLoC: a logic for proving refinements of programs in a language with higher-order state, fine-grained concurrency, polymorphism and recursive types. The core of our logic is a judgement e p e': \u03c4, which expresses that a program e refines a program e' at type \u03c4. In contrast to earlier work on refinements for languages with higher-order state and concurrency, ReLoC provides type- and structure-directed rules for manipulating this judgement, whereas previously, such proofs were carried out by unfolding the judgement into its definition in the model. These more abstract proof rules make it simpler to carry out refinement proofs.   Moreover, we introduce logically atomic relational specifications: a novel approach for relational specifications for compound expressions that take effect at a single instant in time. We demonstrate how to formalise and prove such relational specifications in ReLoC, allowing for more modular proofs.   ReLoC is built on top of the expressive concurrent separation logic Iris, allowing us to leverage features of Iris such as invariants and ghost state. We provide a mechanisation of our logic in Coq, which does not just contain a proof of soundness, but also tactics for interactively carrying out refinements proofs. We have used these tactics to mechanise several examples, which demonstrates the practicality and modularity of our logic.", "citation": "Not cited", "departments": ["Radboud University Nijmegen", "Delft University of Technology", "Aarhus University"], "authors": ["Dan Frumin.....http://dblp.org/pers/hd/f/Frumin:Dan", "Robbert Krebbers.....http://dblp.org/pers/hd/k/Krebbers:Robbert", "Lars Birkedal.....http://dblp.org/pers/hd/b/Birkedal:Lars"], "conf": "lics", "year": "2018", "pages": 10}