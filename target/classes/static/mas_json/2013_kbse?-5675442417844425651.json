{"title": "A study of repetitiveness of code changes in software evolution.", "fields": ["codebase", "kpi driven code analysis", "redundant code", "code review", "static program analysis"], "abstract": "In this paper, we present a large-scale study of repetitiveness of code changes in software evolution. We collected a large data set of 2,841 Java projects, with 1.7 billion source lines of code (SLOC) at the latest revisions, 1.8 million code change revisions (0.4 million fixes), 6.2 million changed files, and 2.5 billion changed SLOCs. A change is considered repeated within or cross-project if it matches another change having occurred in the history of the project or another project, respectively. We report the following important findings. First, repetitiveness of changes could be as high as 70-100% at small sizes and decreases exponentially as size increases. Second, repetitiveness is higher and more stable in the cross-project setting than in the within-project one. Third, fixing changes repeat similarly to general changes. Importantly, learning code changes and recommending them in software evolution is beneficial with accuracy for top-1 recommendation of over 30% and top-3 of nearly 35%. Repeated fixing changes could also be useful for automatic program repair.", "citation": "Citations (62)", "year": "2013", "departments": ["Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University", "Iowa State University"], "conf": "kbse", "authors": ["Hoan Anh Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Hoan_Anh", "Anh Tuan Nguyen.....http://dblp.org/pers/hd/n/Nguyen_0001:Anh_Tuan", "Tung Thanh Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Tung_Thanh", "Tien N. Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Tien_N=", "Hridesh Rajan.....http://dblp.org/pers/hd/r/Rajan:Hridesh"], "pages": 11}