{"title": "Don't rush into a union: take time to find your roots.", "fields": ["computational complexity theory", "amortized analysis", "cell probe model", "disjoint sets", "phenomenon"], "abstract": "We present a new threshold phenomenon in data structure lower bounds where slightly reduced update times lead to exploding query times. Consider incremental connectivity, letting t u  be the time to insert an edge and t q  be the query time. For t u  = Omega(t q ), the problem is equivalent to the well-understood union-find problem: proc{InsertEdge}(s,t) can be implemented by Union(Find(s), Find(t)). This gives worst-case time t u  = t q  = O(lg n / lg lg n) and amortized t u  = t q  = O(\u03b1(n)). By contrast, we show that if t u  = o(lg n / lg lg n), the query time explodes to t q  \u2265 n 1-o(1) . In other words, if the data structure doesn't have time to find the roots of each disjoint set (tree) during edge insertion, there is no effective way to organize the information!   For amortized complexity, we demonstrate a new inverse-Ackermann type trade-off in the regime t u  = o(t q ).   A similar lower bound is given for fully dynamic connectivity, where an update time of o(lg n) forces the query time to be n 1-o(1) . This lower bound allows for amortization and Las Vegas randomization, and comes close to the known O(lg n \u2022 (lg lg n) O(1) ) upper bound.", "citation": "Citations (10)", "year": "2011", "departments": ["AT&T Labs", "AT&T Labs"], "conf": "stoc", "authors": ["Mihai Patrascu.....http://dblp.org/pers/hd/p/Patrascu:Mihai", "Mikkel Thorup.....http://dblp.org/pers/hd/t/Thorup:Mikkel"], "pages": 10}