{"title": "On the synchronization bottleneck of OpenStack Swift-like cloud storage systems.", "fields": ["eventual consistency", "sync", "cloud storage", "root cause", "swift", "merkle tree"], "abstract": "As one type of the most popular cloud storage services, OpenStack Swift and its follow-up systems replicate each data object across multiple storage nodes and leverage object sync protocols to achieve high availability and eventual consistency. The performance of object sync protocols heavily relies on two key parameters: r (number of replicas for each object) and \u03b7 (number of objects hosted by each storage node). In existing tutorials and demos, the configurations are usually r = 3 and n   3 and n \u226b 1000, the object sync process is significantly delayed and produces massive network overhead. This phenomenon is referred to as the sync bottleneck problem. Then, to explore the root cause, we review the source code of OpenStack Swift and find that its object sync protocol utilizes a fairly simple and network-intensive approach to check the consistency among replicas of objects. In particular, each storage node is required to periodically multicast the hash values of all its hosted objects to all the other replica nodes. Thus in a sync round, the number of exchanged hash values per node is \u0398(n\u00d7r). Further, to tackle the problem, we propose a lightweight object sync protocol called LightSync. It remarkably reduces the sync overhead by using two novel building blocks: 1) Hashing of Hashes, which aggregates all the h hash values of each data partition into a single but representative hash value with the Merkle tree; 2) Circular Hash Checking, which checks the consistency of different partition replicas by only sending the aggregated hash value to the clockwise neighbor. Its design provably reduces the per-node network overhead from \u0398(n\u00d7r) to \u0398(n/h). In addition, we have implemented LightSync as an open-source patch and adopted it to OpenStack Swift, thus reducing sync delay by up to 28.8\u00d7 and network overhead by up to 14.2\u00d7.", "citation": "Not cited", "departments": ["Tsinghua University", "Yale University", "Tsinghua University", "Tsinghua University", "University at Buffalo", "Tsinghua University", "University of Luxembourg", "Yale University", "Tsinghua University", "Binghamton University"], "authors": ["Thierry Titcheu Chekam.....http://dblp.org/pers/hd/c/Chekam:Thierry_Titcheu", "Ennan Zhai.....http://dblp.org/pers/hd/z/Zhai:Ennan", "Zhenhua Li.....http://dblp.org/pers/hd/l/Li_0001:Zhenhua", "Yong Cui.....http://dblp.org/pers/hd/c/Cui_0001:Yong", "Kui Ren.....http://dblp.org/pers/hd/r/Ren_0001:Kui"], "conf": "infocom", "year": "2016", "pages": 9}