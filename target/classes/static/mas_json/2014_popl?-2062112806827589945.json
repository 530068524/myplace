{"title": "Proofs that count.", "fields": ["recursion", "mathematical proof", "concurrency", "thread", "static analysis"], "abstract": "Counting arguments are among the most basic proof methods in mathematics. Within the field of formal verification, they are useful for reasoning about programs with  infinite control , such as programs with an unbounded number of threads, or (concurrent) programs with recursive procedures. While counting arguments are common in informal, hand-written proofs of such programs, there are no fully  automated  techniques to construct counting arguments. The key questions involved in automating counting arguments are:  how to decide what should be counted? , and  how to decide when a counting argument is valid?  In this paper, we present a technique for automatically constructing and checking counting arguments, which includes novel solutions to these questions.", "citation": "Citations (17)", "departments": ["University of Toronto", "University of Toronto", "University of Freiburg"], "authors": ["Azadeh Farzan.....http://dblp.org/pers/hd/f/Farzan:Azadeh", "Zachary Kincaid.....http://dblp.org/pers/hd/k/Kincaid:Zachary", "Andreas Podelski.....http://dblp.org/pers/hd/p/Podelski:Andreas"], "conf": "popl", "year": "2014", "pages": 14}