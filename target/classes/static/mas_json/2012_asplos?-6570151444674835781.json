{"title": "Whole-system persistence.", "fields": ["data deduplication", "transient state", "heap", "processor register", "non volatile random access memory"], "abstract": "Today's databases and key-value stores commonly keep all their data in main memory. A single server can have over 100 GB of memory, and a cluster of such servers can have 10s to 100s of TB. However, a storage back end is still required for recovery from failures. Recovery can last for minutes for a single server or hours for a whole cluster, causing heavy load on the back end. Non-volatile main memory (NVRAM) technologies can help by allowing near-instantaneous recovery of in-memory state. However, today's software does not support this well. Block-based approaches such as persistent buffer caches suffer from data duplication and block transfer overheads. Recently, user-level persistent heaps have been shown to have much better performance than these. However they require substantial application modification and still have significant runtime overheads. This paper proposes whole-system persistence (WSP) as an alternative. WSP is aimed at systems where all memory is non-volatile. It transparently recovers an application's entire state, making a failure appear as a suspend/resume event. Runtime overheads are eliminated by using \"flush on fail\": transient state in processor registers and caches is flushed to NVRAM only on failure, using the residual energy from the system power supply. Our evaluation shows that this approach has 1.6--13 times better runtime performance than a persistent heap, and that flush-on-fail can complete safely within 2--35\\% of the residual energy window provided by standard power supplies.", "citation": "Citations (193)", "year": "2012", "departments": ["Microsoft", "Microsft Resear ...  United Kingdom"], "conf": "asplos", "authors": ["Dushyanth Narayanan.....http://dblp.org/pers/hd/n/Narayanan:Dushyanth", "Orion Hodson.....http://dblp.org/pers/hd/h/Hodson:Orion"], "pages": 10}