{"title": "Precise memory leak detection for java software using container profiling.", "fields": ["profiling", "leak", "novelty", "memory leak", "static analysis", "handle leak", "software bug"], "abstract": "A memory leak in a Java program occurs when object references that are no longer needed are unnecessarily maintained. Such leaks are difficult to understand because static analyses typically cannot precisely identify these redundant references, and existing dynamic analyses for leak detection track and report fine-grained information about individual objects, producing results that are usually hard to interpret and lack precision.   We introduce a novel container-based heap-tracking technique, based on the observation that many memory leaks in Java programs occur due to containers that keep references to unused data entries. The novelty of the described work is two-fold: (1) instead of tracking arbitrary objects and finding leaks by analyzing references to unused objects, the technique tracks only containers and directly identifies the source of the leak, and (2) the approach computes a confidence value for each container based on a combination of its memory consumption and its elements' staleness (time since last retrieval), while previous approaches do not consider such combined metrics. Our experimental results show that the reports generated by the proposed technique can be very precise: for two bugs reported by Sun and for a known bug in SPECjbb, the top containers in the reports include the containers that leak memory.", "citation": "Citations (126)", "departments": ["Ohio State University", "Ohio State University", "University of California, Irvine", "Ohio State University"], "authors": ["Guoqing (Harry) Xu.....http://dblp.org/pers/hd/x/Xu:Guoqing_=Harry=", "Atanas Rountev.....http://dblp.org/pers/hd/r/Rountev:Atanas"], "conf": "icse", "year": "2008", "pages": 10}