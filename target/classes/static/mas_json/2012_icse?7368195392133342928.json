{"title": "Metadata invariants: Checking and inferring metadata coding conventions.", "fields": ["meta data services", "metadata repository", "data element definition", "marker interface pattern", "metadata modeling"], "abstract": "As the prevailing programming model of enterprise applications is becoming more declarative, programmers are spending an increasing amount of their time and efforts writing and maintaining metadata, such as XML or annotations. Although metadata is a cornerstone of modern software, automatic bug finding tools cannot ensure that metadata maintains its correctness during refactoring and enhancement. To address this shortcoming, this paper presents metadata invariants, a new abstraction that codifies various naming and typing relationships between metadata and the main source code of a program. We reify this abstraction as a domain-specific language. We also introduce algorithms to infer likely metadata invariants and to apply them to check metadata correctness in the presence of program evolution. We demonstrate how metadata invariant checking can help ensure that metadata remains consistent and correct during program evolution; it finds metadata-related inconsistencies and recommends how they should be corrected. Similar to static bug finding tools, a metadata invariant checker identifies metadata-related bugs as a program is being refactored and enhanced. Because metadata is omnipresent in modern software applications, our approach can help ensure the overall consistency and correctness of software as it evolves.", "citation": "Citations (11)", "departments": ["Virginia Tech", "Virginia Tech"], "authors": ["Myoungkyu Song.....http://dblp.org/pers/hd/s/Song:Myoungkyu", "Eli Tilevich.....http://dblp.org/pers/hd/t/Tilevich:Eli"], "conf": "icse", "year": "2012", "pages": 11}