{"title": "HMC: Verifying Functional Programs Using Abstract Interpreters.", "fields": ["logic in computer science", "functional programming", "abstract interpretation", "invariant", "interpreter"], "abstract": "We present Hindley-Milner-Cousots (HMC), an algorithm that reduces verification of safety properties of typed higher-order functional programs to interprocedural analysis for first-order imperative programs. HMC works as follows. First, it uses the type structure of the functional program to generate a set of logical refinement constraints whose satisfaction implies the safety of the source program. Next, it transforms the logical refinement constraints into a simple first-order imperative program and an invariant that holds iff the constraints are satisfiable. Finally, it uses an invariant generator for first-order imperative programs to discharge the invariant. We have implemented HMC and describe preliminary experimental results using two imperative checkers - ARMC and INTERPROC - to verify OCAML programs. By composing type-based reasoning grounded in program syntax and state-based reasoning grounded in abstract interpretation, HMC enables the fully automatic verification of programs written in modern programming languages.", "citation": "Citations (62)", "year": "2011", "departments": ["University of California, San Diego", "University of California, Los Angeles", "Technische Universit\u00e4t M\u00fcnchen"], "conf": "cav", "authors": ["Ranjit Jhala.....http://dblp.org/pers/hd/j/Jhala:Ranjit", "Rupak Majumdar.....http://dblp.org/pers/hd/m/Majumdar:Rupak", "Andrey Rybalchenko.....http://dblp.org/pers/hd/r/Rybalchenko:Andrey"], "pages": 16}