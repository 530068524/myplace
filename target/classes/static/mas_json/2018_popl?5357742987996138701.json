{"title": "On the cost of type-tag soundness.", "fields": ["python", "soundness", "theoretical computer science", "gradual typing", "order of magnitude"], "abstract": "Gradual typing systems ensure type soundness by transforming static type annotations into run-time checks. These checks provide semantic guarantees, but may come at a large cost in performance. In particular, recent work by Takikawa et al. suggests that enforcing a conventional form of type soundness may slow a program by two orders of magnitude.     Since different gradual typing systems satisfy different notions of soundness, the question then arises: what is the cost of such varying notions of soundness? This paper answers an instance of this question by applying Takikawa et al.'s evaluation method to Reticulated Python, which satisfies a notion of type-tag soundness. We find that the cost of soundness in Reticulated is at most one order of magnitude, and increases linearly with the number of type annotations.", "citation": "Citations (1)", "departments": ["Northeastern University", "Northeastern University"], "authors": ["Ben Greenman.....http://dblp.org/pers/hd/g/Greenman:Ben", "Zeina Migeed.....http://dblp.org/pers/hd/m/Migeed:Zeina"], "conf": "popl", "year": "2018", "pages": 10}