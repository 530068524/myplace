{"title": "Design and evaluation of main memory hash join algorithms for multi-core CPUs.", "fields": ["hash buster", "rolling hash", "block nested loop", "primary clustering", "sort merge join"], "abstract": "The focus of this paper is on investigating efficient hash join algorithms for modern multi-core processors in main memory environments. This paper dissects each internal phase of a typical hash join algorithm and considers different alternatives for implementing each phase, producing a family of hash join algorithms. Then, we implement these main memory algorithms on two radically different modern multi-processor systems, and carefully examine the factors that impact the performance of each method.   Our analysis reveals some interesting results -- a very simple hash join algorithm is very competitive to the other more complex methods. This simple join algorithm builds a shared hash table and does not partition the input relations. Its simplicity implies that it requires fewer parameter settings, thereby making it far easier for query optimizers and execution engines to use it in practice. Furthermore, the performance of this simple algorithm improves dramatically as the skew in the input data increases, and it quickly starts to outperform all other algorithms.", "citation": "Citations (199)", "year": "2011", "departments": ["University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison"], "conf": "sigmod", "authors": ["Spyros Blanas.....http://dblp.org/pers/hd/b/Blanas:Spyros", "Yinan Li.....http://dblp.org/pers/hd/l/Li:Yinan", "Jignesh M. Patel.....http://dblp.org/pers/hd/p/Patel:Jignesh_M="], "pages": 12}