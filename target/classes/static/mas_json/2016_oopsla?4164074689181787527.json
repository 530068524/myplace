{"title": "Dynamically diagnosing type errors in unsafe code.", "fields": ["programmer", "false positive paradox", "liveness", "flags register", "static analysis"], "abstract": "Existing approaches for detecting type errors in unsafe languages are limited. Static analysis methods are imprecise, and often require source-level changes, while most dynamic methods check only memory properties (bounds, liveness, etc.), owing to a lack of run-time type information. This paper describes libcrunch, a system for binary-compatible run-time type checking of unmodified unsafe code, currently focusing on C. Practical experience shows that our prototype implementation is easily applicable to many real codebases without source-level modification, correctly flags programmer errors with a very low rate of false positives, offers a very low run-time overhead, and covers classes of error caught by no previously existing tool.", "citation": "Citations (4)", "departments": ["University of Cambridge"], "authors": ["Stephen Kell.....http://dblp.org/pers/hd/k/Kell:Stephen"], "conf": "oopsla", "year": "2016", "pages": 20}