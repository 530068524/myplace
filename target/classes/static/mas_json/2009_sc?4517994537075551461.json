{"title": "Automating the generation of composed linear algebra kernels.", "fields": ["partitioned global address space", "global arrays", "memory bandwidth", "basic linear algebra subprograms", "work stealing"], "abstract": "Memory bandwidth limits the performance of important kernels in many scientific applications. Such applications often use sequences of Basic Linear Algebra Subprograms (BLAS), and highly efficient implementations of those routines enable scientists to achieve high performance at little cost. However, tuning the BLAS in isolation misses opportunities for memory optimization that result from composing multiple subprograms. Because it is not practical to create a library of all BLAS combinations, we have developed a domain-specific compiler that generates them on demand. In this paper, we describe a novel algorithm for compiling linear algebra kernels and searching for the best combination of optimization choices. We also present a new hybrid analytic/empirical method for quickly evaluating the profitability of each optimization. We report experimental results showing speedups of up to 130% relative to the GotoBLAS on an AMD Opteron and up to 137% relative to MKL on an Intel Core 2.", "citation": "Citations (72)", "year": "2009", "departments": ["University of Colorado Boulder", "University of Colorado Boulder", "University of Colorado Boulder", "University of Colorado Boulder"], "conf": "sc", "authors": ["Geoffrey Belter.....http://dblp.org/pers/hd/b/Belter:Geoffrey", "Elizabeth R. Jessup.....http://dblp.org/pers/hd/j/Jessup:Elizabeth_R=", "Ian Karlin.....http://dblp.org/pers/hd/k/Karlin:Ian", "Jeremy G. Siek.....http://dblp.org/pers/hd/s/Siek:Jeremy_G="], "pages": -1}