{"title": "On the congruence of modularity and code coupling.", "fields": ["kpi driven code analysis", "modularity", "software system", "static program analysis", "software construction"], "abstract": "Software systems are modularized to make their inherent complexity manageable. While there exists a set of well-known principles that may guide software engineers to design the modules of a software system, we do not know which principles are followed in practice. In a study based on 16 open source projects, we look at different kinds of coupling concepts between source code entities, including structural dependencies, fan-out similarity, evolutionary coupling, code ownership, code clones, and semantic similarity. The congruence between these coupling concepts and the modularization of the system hints at the modularity principles used in practice. Furthermore, the results provide insights on how to support developers to modularize software systems.", "citation": "Citations (56)", "departments": ["University of Trier", "University of Trier"], "authors": ["Fabian Beck.....http://dblp.org/pers/hd/b/Beck_0001:Fabian", "Stephan Diehl.....http://dblp.org/pers/hd/d/Diehl_0001:Stephan"], "conf": "sigsoft", "year": "2011", "pages": 11}