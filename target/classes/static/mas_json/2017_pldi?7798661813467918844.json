{"title": "Control-flow recovery from partial failure reports.", "fields": ["debugging", "regular language", "formal language", "control flow", "subclass"], "abstract": "Debugging is difficult. When software fails in production, debugging is even harder, as failure reports usually provide only an incomplete picture of the failing execution. We present a system that answers control-flow queries posed by developers as formal languages, indicating whether the query expresses control flow that is possible or impossible for a given failure report. We consider three separate approaches that trade off precision, expressiveness for failure constraints, and scalability. We also introduce a new subclass of regular languages, the unreliable trace languages, which are particularly suited to answering control-flow queries in polynomial time. Our system answers queries remarkably efficiently when we encode failure constraints and user queries entirely as unreliable trace languages.", "citation": "Citations (1)", "departments": ["University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison"], "authors": ["Peter Ohmann.....http://dblp.org/pers/hd/o/Ohmann:Peter", "Alexander Brooks.....http://dblp.org/pers/hd/b/Brooks:Alexander", "Loris D'Antoni.....http://dblp.org/pers/hd/d/D=Antoni:Loris", "Ben Liblit.....http://dblp.org/pers/hd/l/Liblit:Ben"], "conf": "pldi", "year": "2017", "pages": 16}