{"title": "Synthesizing intensional behavior models by graph transformation.", "fields": ["graph rewriting", "black box", "component based software engineering", "abstraction", "formal specification"], "abstract": "This paper describes an approach (SPY) to recovering the specification of a software component from the observation of its run-time behavior. It focuses on components that behave as data abstractions. Components are assumed to be black boxes that do not allow any implementation inspection. The inferred description may help understand what the component does when no formal specification is available. SPY works in two main stages. First, it builds a deterministic finite-state machine that models the partial behavior of instances of the data abstraction. This is then generalized via graph transformation rules. The rules can generate a possibly infinite number of behavior models, which generalize the description of the data abstraction under an assumption of \u201cregularity\u201d with respect to the observed behavior. The rules can be viewed as a likely specification of the data abstraction. We illustrate how SPY works on relevant examples and we compare it with competing methods.", "citation": "Citations (101)", "departments": ["Polytechnic University of Milan", "Polytechnic University of Milan", "University of Milan"], "authors": ["Carlo Ghezzi.....http://dblp.org/pers/hd/g/Ghezzi:Carlo", "Andrea Mocci.....http://dblp.org/pers/hd/m/Mocci:Andrea", "Mattia Monga.....http://dblp.org/pers/hd/m/Monga:Mattia"], "conf": "icse", "year": "2009", "pages": 11}