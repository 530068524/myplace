{"title": "Modular code-based cryptographic verification.", "fields": ["computational hardness assumption", "type safety", "cryptographic primitive", "modular design", "program transformation"], "abstract": "Type systems are effective tools for verifying the security of cryptographic programs. They provide automation, modularity and scalability, and have been applied to large security protocols. However, they traditionally rely on abstract assumptions on the underlying cryptographic primitives, expressed in symbolic models. Cryptographers usually reason on security assumptions using lower level, computational models that precisely account for the complexity and success probability of attacks. These models are more realistic, but they are harder to formalize and automate. We present the first modular automated program verification method based on standard cryptographic assumptions. We show how to verify ideal functionalities and protocols written in ML by typing them against new cryptographic interfaces using F7, a refinement type checker coupled with an SMT-solver. We develop a probabilistic core calculus for F7 and formalize its type safety in Coq.   We build typed module and interfaces for MACs, signatures, and encryptions, and establish their authenticity and secrecy properties. We relate their ideal functionalities and concrete implementations, using game-based program transformations behind typed interfaces. We illustrate our method on a series of protocol implementations.", "citation": "Citations (68)", "year": "2011", "departments": ["Microsoft", "Microsoft", "French Institute for Research in Computer Science and Automation"], "conf": "ccs", "authors": ["C\u00e9dric Fournet.....http://dblp.org/pers/hd/f/Fournet:C=eacute=dric", "Markulf Kohlweiss.....http://dblp.org/pers/hd/k/Kohlweiss:Markulf", "Pierre-Yves Strub.....http://dblp.org/pers/hd/s/Strub:Pierre=Yves"], "pages": 10}