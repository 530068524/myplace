{"title": "Using Cluster Analysis to Improve the Design of Component Interfaces.", "fields": ["software maintenance", "wizard", "header", "code refactoring", "maintainability", "software system"], "abstract": "For large software systems, interface structure has an important impact on their maintainability and build performance. For example, for complex systems written in C, recompilation due to a change in one central header file can run into hours. In this paper, we explore how automated cluster analysis can be used to refactor interfaces, in order to reduce the number of dependencies and to improve encapsulation, thus improving build performance and maintainability. We implemented our approach in a tool called \"Interface Regroup Wizard\", which we applied to several interfaces of a large industrial embedded system. From this, we not only learned that automated cluster analysis works surprisingly well to improve the design of interfaces, but also which of the refactoring steps are best done manually by an architect.", "citation": "Citations (5)", "departments": ["Delft University of Technology", "Delft University of Technology", "Delft University of Technology", "Delft University of Technology"], "authors": ["Rahmat Adnan.....http://dblp.org/pers/hd/a/Adnan:Rahmat", "Bas Graaf.....http://dblp.org/pers/hd/g/Graaf:Bas", "Arie van Deursen.....http://dblp.org/pers/hd/d/Deursen:Arie_van", "Joost Zonneveld.....http://dblp.org/pers/hd/z/Zonneveld:Joost"], "conf": "kbse", "year": "2008", "pages": 4}