{"title": "Mining framework usage changes from instantiation code.", "fields": ["software design", "porting", "software system", "software maintenance", "test case"], "abstract": "Framework evolution may break existing users, which need to be migrated to the new framework version. This is a tedious and error-prone process that benefits from automation. Existing approaches compare two versions of the framework code in order to find changes caused by refactorings. However, other kinds of changes exist, which are relevant for the migration. In this paper, we propose to mine framework usage change rules from already ported instantiations, the latter being applications build on top of the framework, or test cases maintained by the framework developers. Our evaluation shows that our approach finds usage changes not only caused by refactorings, but also by conceptual changes within the framework. Further, it copes well with some issues that plague tools focusing on finding refactorings such as deprecated program elements or multiple changes applied to a single program element.", "citation": "Citations (96)", "departments": ["Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt"], "authors": ["Thorsten Sch\u00e4fer.....http://dblp.org/pers/hd/s/Sch=auml=fer:Thorsten", "Jan Jonas.....http://dblp.org/pers/hd/j/Jonas:Jan", "Mira Mezini.....http://dblp.org/pers/hd/m/Mezini:Mira"], "conf": "icse", "year": "2008", "pages": 10}