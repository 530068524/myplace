{"title": "Efficient Tracing of Cold Code via Bias-Free Sampling.", "fields": ["redundant code", "specint", "dead code", "unreachable code", "code bloat"], "abstract": "Bugs often lurk in code that is infrequently executed (i.e., cold code), so testing and debugging requires tracing such code. Alas, the location of cold code is generally not known a priori and, by definition, cold code is elusive during execution. Thus, programs either incur unnecessary runtime overhead to \"catch\" cold code, or they must employ sampling, in which case many executions are required to sample the cold code even once.\n\nWe introduce a technique called bias-free sampling (BfS), in which the machine instructions of a dynamic execution are sampled independently of their execution frequency by using breakpoints. The BfS overhead is therefore independent of a program's runtime behavior and is fully predictable: it is merely a function of program size. BfS operates directly on binaries.\n\nWe present the theory and implementation of BfS for both managed and unmanaged code, as well as both kernel and user mode. We ran BfS on a total of 679 programs (all Windows system binaries, Z3, SPECint suite, and on several C# benchmarks), and BfS incurred performance overheads of just 1-6%.", "citation": "Citations (9)", "departments": ["\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "Microsoft", "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne", "Microsoft", "Microsoft"], "authors": ["Baris Kasikci.....http://dblp.org/pers/hd/k/Kasikci:Baris", "Thomas Ball.....http://dblp.org/pers/hd/b/Ball:Thomas", "George Candea.....http://dblp.org/pers/hd/c/Candea:George", "John Erickson.....http://dblp.org/pers/hd/e/Erickson:John", "Madanlal Musuvathi.....http://dblp.org/pers/hd/m/Musuvathi:Madanlal"], "conf": "usenix", "year": "2014", "pages": 12}