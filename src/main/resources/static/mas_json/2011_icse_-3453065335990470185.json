{"title": "A lightweight code analysis and its role in evaluation of a dependability case.", "fields": ["dependability", "user interface", "static program analysis", "novelty", "server"], "abstract": "A  dependability case  is an explicit, end-to-end argument, based on concrete evidence, that a system satisfies a critical property. We report on a case study constructing a dependability case for the control software of a medical device. The key novelty of our approach is a lightweight code analysis that generates a list of side conditions that correspond to assumptions to be discharged about the code and the environment in which it executes. This represents an unconventional trade-off between, at one extreme, more ambitious analyses that attempt to discharge all conditions automatically (but which cannot even in principle handle environmental assumptions), and at the other, flow- or context-insensitive analyses that require more user involvement. The results of the analysis suggested a variety of ways in which the dependability of the system might be improved.", "citation": "Citations (9)", "departments": ["Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology"], "authors": ["Joseph P. Near.....http://dblp.org/pers/hd/n/Near:Joseph_P=", "Aleksandar Milicevic.....http://dblp.org/pers/hd/m/Milicevic:Aleksandar", "Eunsuk Kang.....http://dblp.org/pers/hd/k/Kang:Eunsuk", "Daniel Jackson.....http://dblp.org/pers/hd/j/Jackson_0001:Daniel"], "conf": "icse", "year": "2011", "pages": 10}