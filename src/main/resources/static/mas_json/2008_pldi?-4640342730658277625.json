{"title": "Type-preserving compilation for large-scale optimizing object-oriented compilers.", "fields": ["inline expansion", "compiler correctness", "single compilation unit", "interprocedural optimization", "functional compiler"], "abstract": "Type-preserving compilers translate well-typed source code, such as Java or C#, into verifiable target code, such as typed assembly language or proof-carrying code. This paper presents the implementation of type-preserving compilation in a complex, large-scale optimizing compiler. Compared to prior work, this implementation supports extensive optimizations, and it verifies a large portion of the interface between the compiler and the runtime system. This paper demonstrates the practicality of type-preserving compilation in complex optimizing compilers: the generated typed assembly language is only 2.3% slower than the base compiler's generated untyped assembly language, and the type-preserving compiler is 82.8% slower than the base compiler.", "citation": "Citations (17)", "departments": ["Microsoft", "Microsoft", "Princeton University", "University of California, Los Angeles", "Microsoft"], "authors": ["Juan Chen.....http://dblp.org/pers/hd/c/Chen:Juan", "Chris Hawblitzel.....http://dblp.org/pers/hd/h/Hawblitzel:Chris", "Frances Perry.....http://dblp.org/pers/hd/p/Perry:Frances", "Michael Emmi.....http://dblp.org/pers/hd/e/Emmi:Michael", "Jeremy Condit.....http://dblp.org/pers/hd/c/Condit:Jeremy", "Derrick Coetzee.....http://dblp.org/pers/hd/c/Coetzee:Derrick", "Polyvios Pratikaki.....http://dblp.org/pers/hd/p/Pratikaki:Polyvios"], "conf": "pldi", "year": "2008", "pages": 10}