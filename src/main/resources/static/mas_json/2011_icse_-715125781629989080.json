{"title": "Program abstractions for behaviour validation.", "fields": ["implementation", "source code", "abstraction", "formal specification", "documentation"], "abstract": "Code artefacts that have non-trivial requirements with respect to the ordering in which their methods or procedures ought to be called are common and appear, for instance, in the form of API implementations and objects. This work addresses the problem of validating if API implementations provide their intended behaviour when descriptions of this behaviour are informal, partial or non-existent. The proposed approach addresses this problem by generating abstract behaviour models which resemble typestates. These models are statically computed and encode all admissible sequences of method calls. The level of abstraction at which such models are constructed has shown to be useful for validating code artefacts and identifying findings which led to the discovery of bugs, adjustment of the requirements expected by the engineer to the requirements implicit in the code, and the improvement of available documentation.", "citation": "Citations (12)", "departments": ["University of Buenos Aires", "University of Buenos Aires", "University of Buenos Aires", "Imperial College London"], "authors": ["Guido de Caso.....http://dblp.org/pers/hd/c/Caso:Guido_de", "V\u00edctor A. Braberman.....http://dblp.org/pers/hd/b/Braberman:V=iacute=ctor_A=", "Diego Garbervetsky.....http://dblp.org/pers/hd/g/Garbervetsky:Diego", "Sebasti\u00e1n Uchitel.....http://dblp.org/pers/hd/u/Uchitel:Sebasti=aacute=n"], "conf": "icse", "year": "2011", "pages": 10}