{"title": "FastLane: improving performance of software transactional memory for low thread counts.", "fields": ["software transactional memory", "runtime system", "transactional memory", "thread", "database transaction"], "abstract": "Software transactional memory (STM) can lead to scalable implementations of concurrent programs, as the  relative  performance of an application increases with the number of threads that support it. However, the  absolute  performance is typically impaired by the overheads of transaction management and instrumented accesses to shared memory. This often leads STM-based programs with low thread counts to perform worse than a sequential, non-instrumented version of the same application.   In this paper, we propose FastLane, a new STM algorithm that bridges the performance gap between sequential execution and classical STM algorithms when running on few cores. FastLane seeks to reduce instrumentation costs and thus performance degradation in its target operation range. We introduce a novel algorithm that differentiates between two types of threads: One thread (the master) executes transactions pessimistically without ever aborting, thus with minimal instrumentation and management costs, while other threads (the helpers) can commit speculative transactions only when they do not conflict with the master. Helpers thus contribute to the application progress without impairing on the performance of the master.   We implement FastLane as an extension of a state-of-the-art STM runtime system and compiler. Multiple code paths are produced for execution on a single, few, and many cores. The runtime system selects the code path providing the best throughput, depending on the number of cores available on the target machine. Evaluation results indicate that our approach provides promising performance at low thread counts: FastLane almost systematically wins over a classical STM in the 1-6 threads range, and often performs better than sequential execution of the non-instrumented version of the same application starting with 2 threads.", "citation": "Citations (13)", "year": "2013", "departments": ["Dresden University of Technology", "Dresden University of Technology", "French Institute for Research in Computer Science and Automation", "Universit\u00e9 de N ... el, Switzerland", "Universit\u00e9 de N ... el, Switzerland"], "conf": "ppopp", "authors": ["Jons-Tobias Wamhoff.....http://dblp.org/pers/hd/w/Wamhoff:Jons=Tobias", "Christof Fetzer.....http://dblp.org/pers/hd/f/Fetzer:Christof", "Pascal Felber.....http://dblp.org/pers/hd/f/Felber:Pascal", "Etienne Rivi\u00e8re.....http://dblp.org/pers/hd/r/Rivi=egrave=re:Etienne", "Gilles Muller.....http://dblp.org/pers/hd/m/Muller:Gilles"], "pages": 10}