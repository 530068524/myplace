{"title": "Automated transplantation and differential testing for clones.", "fields": ["mutation testing", "rafter", "identifier", "clone", "fold"], "abstract": "Code clones are common in software. When applying similar edits to clones, developers often find it difficult to examine the runtime behavior of clones. The problem is exacerbated when some clones are tested, while their counterparts are not. To reuse tests for similar but not identical clones, G rafter  transplants one clone to its counterpart by (1) identifying variations in identifier names, types, and method call targets, (2) resolving compilation errors caused by such variations through code transformation, and (3) inserting stub code to transfer input data and intermediate output values for examination. To help developers examine behavioral differences between clones, G rafter  supports fine-grained differential testing at both the test outcome level and the intermediate program state level.   In our evaluation on three open source projects, G rafter  successfully reuses tests in 94% of clone pairs without inducing build errors, demonstrating its automated code transplantation capability. To examine the robustness of G rafter , we systematically inject faults using a mutation testing tool, M ajor , and detect behavioral differences induced by seeded faults. Compared with a static cloning bug finder, G rafter  detects 31% more mutants using the test-level comparison and almost 2X more using the state-level comparison. This result indicates that G rafter  should effectively complement static cloning bug finders.", "citation": "Citations (4)", "departments": ["University of California, Berkeley", "University of California", "University of California, Berkeley", "University of California"], "authors": ["Tianyi Zhang.....http://dblp.org/pers/hd/z/Zhang_0001:Tianyi", "Miryung Kim.....http://dblp.org/pers/hd/k/Kim:Miryung"], "conf": "icse", "year": "2017", "pages": 12}