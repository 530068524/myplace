{"title": "Mimic: computing models for opaque code.", "fields": ["redundant code", "opaque data type", "opaque pointer", "unreachable code", "dead code"], "abstract": "Opaque code, which is executable but whose source is unavailable or hard to process, can be problematic in a number of scenarios, such as program analysis. Manual construction of models is often used to handle opaque code, but this process is tedious and error-prone. (In this paper, we use model to mean a representation of a piece of code suitable for program analysis.) We present a novel technique for automatic generation of models for opaque code, based on program synthesis. The technique intercepts memory accesses from the opaque code to client objects, and uses this information to construct partial execution traces. Then, it performs a heuristic search inspired by Markov Chain Monte Carlo techniques to discover an executable code model whose behavior matches the opaque code. Native execution, parallelization, and a carefully-designed fitness function are leveraged to increase the effectiveness of the search. We have implemented our technique in a tool Mimic for discovering models of opaque JavaScript functions, and used Mimic to synthesize correct models for a variety of array-manipulating routines.", "citation": "Citations (7)", "departments": ["Stanford University", "Samsung", "Samsung"], "authors": ["Stefan Heule.....http://dblp.org/pers/hd/h/Heule:Stefan", "Manu Sridharan.....http://dblp.org/pers/hd/s/Sridharan:Manu", "Satish Chandra.....http://dblp.org/pers/hd/c/Chandra_0001:Satish"], "conf": "sigsoft", "year": "2015", "pages": 11}