{"title": "Lineage-driven Fault Injection.", "fields": ["fault injection", "fault model", "exploit", "data lineage", "debugging"], "abstract": "In large-scale data management systems, failure is practically a certainty. Fault-tolerant protocols and components are notoriously difficult to implement and debug. Worse still, choosing existing fault-tolerance mechanisms and integrating them correctly into complex systems remains an art form, and programmers have few tools to assist them.   We propose a novel approach for discovering bugs in fault-tolerant data management systems:  lineage-driven fault injection . A lineage-driven fault injector reasons backwards from correct system outcomes to determine whether failures in the execution could have prevented the outcome. We present MOLLY, a prototype of lineage-driven fault injection that exploits a novel combination of data lineage techniques from the database literature and state-of-the-art satisfiability testing. If fault-tolerance bugs exist for a particular configuration, MOLLY finds them rapidly, in many cases using a order of magnitude fewer executions than random fault injection. Otherwise, MOLLY certifies that the code is bug-free for that configuration.", "citation": "Citations (13)", "year": "2015", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "conf": "sigmod", "authors": ["Peter Alvaro.....http://dblp.org/pers/hd/a/Alvaro:Peter", "Joshua Rosen.....http://dblp.org/pers/hd/r/Rosen:Joshua", "Joseph M. Hellerstein.....http://dblp.org/pers/hd/h/Hellerstein:Joseph_M="], "pages": 16}