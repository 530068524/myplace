{"title": "Contract-based program repair without the contracts.", "fields": ["overfitting", "abstraction", "contract management", "software bug", "maintenance engineering"], "abstract": "Automated program repair (APR) is a promising approach to automatically fixing software bugs. Most APR techniques use tests to drive the repair process; this makes them readily applicable to realistic code bases, but also brings the risk of generating spurious repairs that overfit the available tests. Some techniques addressed the overfitting problem by targeting code using contracts (such as pre- and postconditions), which provide additional information helpful to characterize the states of correct and faulty computations; unfortunately, mainstream programming languages do not normally include contract annotations, which severely limits the applicability of such contract-based techniques. This paper presents JAID, a novel APR technique for Java programs, which is capable of constructing detailed state abstractions\u2014similar to those employed by contract-based techniques\u2014that are derived from regular Java code without any special annotations. Grounding the repair generation and validation processes on rich state abstractions mitigates the overfitting problem, and helps extend APR's applicability: in experiments with the DEFECTS4J benchmark, a prototype implementation of JAID produced genuinely correct repairs, equivalent to those written by programmers, for 25 bugs\u2014improving over the state of the art of comparable Java APR techniques in the number and kinds of correct fixes.", "citation": "Citations (4)", "departments": ["Hong Kong Polytechnic University", "Hong Kong Polytechnic University", "Chalmers University of Technology"], "authors": ["Liushan Chen.....http://dblp.org/pers/hd/c/Chen:Liushan", "Yu Pei.....http://dblp.org/pers/hd/p/Pei_0001:Yu", "Carlo A. Furia.....http://dblp.org/pers/hd/f/Furia:Carlo_A="], "conf": "kbse", "year": "2017", "pages": 11}