{"title": "Monitoring Atomicity in Concurrent Programs.", "fields": ["mathematical proof", "model checking", "atomicity", "thread", "decidability"], "abstract": "We study the problem of monitoring concurrent program runs for atomicity violations. Unearthing fundamental results behind scheduling algorithms in database control, we build space-efficient monitoring algorithms for checking atomicity that use space polynomial in the number of active threads and entities, and independent of the length of the run monitored. Second, by interpreting the monitoring algorithm as a  finite automaton , we solve the model checking problem for atomicity of finite-state concurrent models. This establishes (for the first time) that model checking finite-state concurrent models for atomicity is decidable, and remedies incorrect proofs published in the literature. Finally, we exhibit experimental evidence that our atomicity monitoring algorithm gives substantial time and space benefits on benchmark applications.", "citation": "Citations (78)", "year": "2008", "departments": ["Carnegie Mellon University", "University of Illinois at Urbana\u2013Champaign"], "conf": "cav", "authors": ["Azadeh Farzan.....http://dblp.org/pers/hd/f/Farzan:Azadeh", "P. Madhusudan.....http://dblp.org/pers/hd/m/Madhusudan:P="], "pages": 14}