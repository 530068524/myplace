{"title": "WISE: Automated test generation for worst-case complexity.", "fields": ["benchmark", "correctness", "program analysis", "worst case complexity", "symbolic execution"], "abstract": "Program analysis and automated test generation have primarily been used to find correctness bugs. We present complexity testing, a novel automated test generation technique to find performance bugs. Our complexity testing algorithm, which we call WISE (Worst-case Inputs from Symbolic Execution), operates on a program accepting inputs of arbitrary size. For each input size, WISE attempts to construct an input which exhibits the worst-case computational complexity of the program. WISE uses exhaustive test generation for small input sizes and generalizes the result of executing the program on those inputs into an \u201cinput generator.\u201d The generator is subsequently used to efficiently generate worst-case inputs for larger input sizes. We have performed experiments to demonstrate the utility of our approach on a set of standard data structures and algorithms. Our results show that WISE can effectively generate worstcase inputs for several of these benchmarks.", "citation": "Citations (88)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Jacob Burnim.....http://dblp.org/pers/hd/b/Burnim:Jacob", "Sudeep Juvekar.....http://dblp.org/pers/hd/j/Juvekar:Sudeep", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "icse", "year": "2009", "pages": 11}