{"title": "Increasing Test Granularity by Aggregating Unit Tests.", "fields": ["component based software engineering", "dynamic testing", "traverse", "unit testing", "granularity"], "abstract": "Unit tests are focused, efficient, and there are many techniques to support their automatic generation. Coarser granularity tests, however, are necessary to validate the behavior of larger software components, and are also likely to be more robust in the presence of program changes. This paper investigates whether coarser granularity tests can be automatically generated by aggregating unit tests. We leverage our Differential Unit Test (DUT) framework to represent unit tests, define a space of potential aggregations of those unit tests, and implement a strategy to traverse that space to generate Aggregated DUTs (A- DUTs) that validate the effects of multiple method calls on a (set of) receiver object(s). An empirical study of A-DUTs on two applications shows their tradeoffs with DUTs and their potential to increase the number of versions for which tests remain usable relative to method level tests.", "citation": "Citations (8)", "departments": ["University of Nebraska\u2013Lincoln", "University of Nebraska\u2013Lincoln", "University of Nebraska\u2013Lincoln"], "authors": ["Matthew Jorde.....http://dblp.org/pers/hd/j/Jorde:Matthew", "Sebastian G. Elbaum.....http://dblp.org/pers/hd/e/Elbaum:Sebastian_G=", "Matthew B. Dwyer.....http://dblp.org/pers/hd/d/Dwyer:Matthew_B="], "conf": "kbse", "year": "2008", "pages": 10}