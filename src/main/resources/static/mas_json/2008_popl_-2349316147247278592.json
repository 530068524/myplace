{"title": "Focusing and higher-order abstract syntax.", "fields": ["abstract syntax", "linear logic", "higher order abstract syntax", "intuitionistic logic", "expression"], "abstract": "Focusing is a proof-search strategy, originating in linear logic, that elegantly eliminates inessential nondeterminism, with one byproduct being a correspondence between focusing proofs and programs with explicit evaluation order. Higher-order abstract syntax (HOAS) is a technique for representing higher-order programming language constructs (e.g., \u03bb's) by higher-order terms at the\"meta-level\", thereby avoiding some of the bureaucratic headaches of first-order representations (e.g., capture-avoiding substitution).   This paper begins with a fresh, judgmental analysis of focusing for intuitionistic logic (with a full suite of propositional connectives), recasting the \"derived rules\" of focusing as  iterated inductive definitions . This leads to a uniform presentation, allowing concise, modular proofs of the identity and cut principles. Then we show how this formulation of focusing induces, through the Curry-Howard isomorphism, a new kind of higher-order encoding of abstract syntax: functions are encoded by maps from  patterns  to expressions. Dually, values are encoded as patterns together with  explicit substitutions . This gives us pattern-matching \"for free\", and lets us reason about a rich type system with minimal syntactic overhead. We describe how to translate the language and proof of type safety almost directly into Coq using HOAS, and finally, show how the system's modular design pays off in enabling a very simple extension with recursion and recursive types.", "citation": "Citations (29)", "departments": ["Carnegie Mellon University"], "authors": ["Noam Zeilberger.....http://dblp.org/pers/hd/z/Zeilberger:Noam"], "conf": "popl", "year": "2008", "pages": 11}