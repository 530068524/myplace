{"title": "A Symbolic Execution Framework for JavaScript.", "fields": ["unobtrusive javascript", "string operations", "ajax", "code injection", "solver"], "abstract": "As AJAX applications gain popularity, client-side JavaScript code is becoming increasingly complex. However, few automated vulnerability analysis tools for JavaScript exist. In this paper, we describe the first system for exploring the execution space of JavaScript code using symbolic execution. To handle JavaScript code\u2019s complex use of string operations, we design a new language of string constraints and implement a solver for it. We build an automatic end-to-end tool, Kudzu, and apply it to the problem of finding client-side code injection vulnerabilities. In experiments on 18 live web applications, Kudzu automatically discovers 2 previously unknown vulnerabilities and 9 more that were previously found only with a manually-constructed test suite.", "citation": "Citations (399)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Prateek Saxena.....http://dblp.org/pers/hd/s/Saxena:Prateek", "Devdatta Akhawe.....http://dblp.org/pers/hd/a/Akhawe:Devdatta", "Steve Hanna.....http://dblp.org/pers/hd/h/Hanna:Steve", "Feng Mao.....http://dblp.org/pers/hd/m/Mao:Feng", "Stephen McCamant.....http://dblp.org/pers/hd/m/McCamant:Stephen", "Dawn Song.....http://dblp.org/pers/hd/s/Song:Dawn"], "conf": "sp", "year": "2010", "pages": 16}