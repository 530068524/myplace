{"title": "Store-Load-Branch (SLB) predictor: A compiler assisted branch prediction for data dependent branches.", "fields": ["branch table", "indirect branch", "branch predication", "branch", "branch trace"], "abstract": "Data-dependent branches constitute single biggest source of remaining branch mispredictions. Typically, data-dependent branches are associated with program data structures, and follow store-load-branch execution sequence. A set of memory locations is written at an earlier point in a program. Later, these locations are read, and used for evaluating branch condition. Branch outcome depends on data values stored in data structure, which, typically do not have repeatable pattern. Therefore, in addition to history-based dynamic predictor, we need a different kind of predictor for handling such branches. This paper presents Store-Load-Branch (SLB) predictor; a compiler-assisted dynamic branch prediction scheme for data-dependent direct and indirect branches. For every data-dependent branch, compiler identifies store instructions that modify the data structure associated with the branch. Marked store instructions are dynamically tracked, and stored values are used for computing branch flags ahead of time. Branch flags are buffered, and later used for making predictions. On average, compared to standalone TAGE predictor, combined TAGE+SLB predictor reduces branch MPKI by 21% and 51% for SPECINT and EEMBC benchmark suites respectively.", "citation": "Citations (13)", "departments": ["University of Texas at Austin", "University of Texas at Austin", "University of Texas at Austin"], "authors": ["Muhammad Umar Farooq.....http://dblp.org/pers/hd/f/Farooq:Muhammad_Umar", "Khubaib.....http://dblp.org/pers/hd/k/Khubaib:", "Lizy K. John.....http://dblp.org/pers/hd/j/John:Lizy_K="], "conf": "hpca", "year": "2013", "pages": 12}