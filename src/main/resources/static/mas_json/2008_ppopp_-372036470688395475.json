{"title": "Design and implementation of a high-performance MPI for C# and the common language infrastructure.", "fields": ["dependence analysis", "runtime system", "dynamic priority scheduling", "separation of concerns", "programmer"], "abstract": "This paper describes SuperMatrix, a runtime system that parallelizes matrix operations for SMP and/or multi-core architectures. We use this system to demonstrate how code described at a high level of abstraction can achieve high performance on such architectures while completely hiding the parallelism from the library programmer. The key insight entails viewing matrices hierarchically, consisting of blocks that serve as units of data where operations over those blocks are treated as units of computation. The implementation transparently enqueues the required operations, internally tracking dependencies, and then executes the operations utilizing out-of-order execution techniques inspired by superscalar microarchitectures. This separation of concerns allows library developers to implement algorithms without concerning themselves with the parallelization aspect of the problem. Different heuristics for scheduling operations can be implemented in the runtime system independent of the code that enqueues the operations. Results gathered on a 16 CPU ccNUMA Itanium2 server demonstrate excellent performance.", "citation": "Citations (106)", "year": "2008", "departments": ["University of Texas at Austin", "University of Texas at Austin", "Duke University", "Universidad Jau ... astellon, Spain", "Universidad Jau ... astellon, Spain"], "conf": "ppopp", "authors": ["Douglas P. Gregor.....http://dblp.org/pers/hd/g/Gregor:Douglas_P=", "Andrew Lumsdaine.....http://dblp.org/pers/hd/l/Lumsdaine:Andrew"], "pages": 10}