{"title": "Timeline: An Operating System Abstraction for Time-Aware Applications.", "fields": ["observable", "component based software engineering", "abstraction", "application programming interface", "world wide web", "timeline", "science technology and society", "search engine", "open source hardware"], "abstract": "Having a shared and accurate sense of time is critical to distributed Cyber-Physical Systems (CPS) and the Internet of Things (IoT). Thanks to decades of research in clock technologies and synchronization protocols, it is now possible to measure and synchronize time across distributed systems with unprecedented accuracy. However, applications have not benefited to the same extent due to limitations of the system services that help manage time, and hardware-OS and OS-application interfaces through which timing information flows to the application. Due to the importance of time awareness in a broad range of emerging applications, running on commodity platforms and operating systems, it is imperative to rethink how time is handled across the system stack. We advocate the adoption of a holistic notion of Quality of Time (QoT) that captures metrics such as resolution, accuracy, and stability. Building on this notion we propose an architecture in which the local perception of time is a controllable operating system primitive with observable uncertainty, and where time synchronization balances applications' timing demands with system resources such as energy and bandwidth. Our architecture features an expressive application programming interface that is centered around the abstraction of a timeline \u2013 a virtual temporal coordinate frame that is defined by an application to provide its components with a shared sense of time, with a desired accuracy and resolution. The timeline abstraction enables developers to easily write applications whose activities are choreographed across time and space. Leveraging open source hardware and software components, we have implemented an initial Linux realization of the proposed timeline-driven QoT stack on a standard embedded computing platform. Results from its evaluation are also presented.", "citation": "Not cited", "year": "2016", "departments": ["University of California, Los Angeles", "Carnegie Mellon University", "University of California, Los Angeles", "Carnegie Mellon University", "Carnegie Mellon University"], "conf": "rtss", "authors": ["Fatima M. Anwar.....http://dblp.org/pers/hd/a/Anwar:Fatima_M=", "Sandeep D'Souza.....http://dblp.org/pers/hd/d/D=Souza:Sandeep", "Andrew Symington.....http://dblp.org/pers/hd/s/Symington:Andrew", "Adwait Dongare.....http://dblp.org/pers/hd/d/Dongare:Adwait", "Ragunathan Rajkumar.....http://dblp.org/pers/hd/r/Rajkumar:Ragunathan", "Anthony Rowe.....http://dblp.org/pers/hd/r/Rowe:Anthony", "Mani B. Srivastava.....http://dblp.org/pers/hd/s/Srivastava:Mani_B="], "pages": 12}