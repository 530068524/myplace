{"title": "Modular, higher-order cardinality analysis in theory and practice.", "fields": ["lazy evaluation", "functional programming", "operational semantics", "static analysis", "haskell", "modular design", "cardinality", "mathematical proof", "compiler"], "abstract": "Since the mid '80s, compiler writers for functional languages (especially lazy ones) have been writing papers about identifying and exploiting thunks and lambdas that are used only once. However it has proved difficult to achieve both power and simplicity in practice. We describe a new, modular analysis for a higher-order language, which is both simple and effective, and present measurements of its use in a full-scale, state of the art optimising compiler. The analysis finds many single-entry thunks and one-shot lambdas and enables a number of program optimisations.", "citation": "Citations (6)", "departments": ["IMDEA", "Microsoft", "Microsoft"], "authors": ["Ilya Sergey.....http://dblp.org/pers/hd/s/Sergey:Ilya", "Dimitrios Vytiniotis.....http://dblp.org/pers/hd/v/Vytiniotis:Dimitrios", "Simon L. Peyton Jones.....http://dblp.org/pers/hd/j/Jones:Simon_L=_Peyton"], "conf": "popl", "year": "2014", "pages": 14}