{"title": "Language-independent sandboxing of just-in-time compilation and self-modifying code.", "fields": ["self modifying code", "porting", "sandbox", "just in time compilation", "common language runtime"], "abstract": "When dealing with dynamic, untrusted content, such as on the Web, software behavior must be sandboxed, typically through use of a language like JavaScript. However, even for such specially-designed languages, it is difficult to ensure the safety of highly-optimized, dynamic language runtimes which, for efficiency, rely on advanced techniques such as Just-In-Time (JIT) compilation, large libraries of native-code support routines, and intricate mechanisms for multi-threading and garbage collection. Each new runtime provides a new potential attack surface and this security risk raises a barrier to the adoption of new languages for creating untrusted content.   Removing this limitation, this paper introduces general mechanisms for safely and efficiently sandboxing software, such as dynamic language runtimes, that make use of advanced, low-level techniques like runtime code modification. Our  language-independent sandboxing  builds on Software-based Fault Isolation (SFI), a traditionally static technique. We provide a more flexible form of SFI by adding new constraints and mechanisms that allow safety to be guaranteed despite runtime code modifications.   We have added our extensions to both the x86-32 and x86-64 variants of a production-quality, SFI-based sandboxing platform; on those two architectures SFI mechanisms face different challenges. We have also ported two representative language platforms to our extended sandbox: the Mono common language runtime and the V8 JavaScript engine. In detailed evaluations, we find that sandboxing slowdown varies between different benchmarks, languages, and hardware platforms. Overheads are generally moderate and they are close to zero for some important benchmark/platform combinations.", "citation": "Citations (93)", "departments": ["Massachusetts Institute of Technology", "University College London", "Google", "Google", "Google"], "authors": ["Jason Ansel.....http://dblp.org/pers/hd/a/Ansel:Jason", "Petr Marchenko.....http://dblp.org/pers/hd/m/Marchenko:Petr", "\u00dalfar Erlingsson.....http://dblp.org/pers/hd/e/Erlingsson:=Uacute=lfar", "Elijah Taylor.....http://dblp.org/pers/hd/t/Taylor:Elijah", "Brad Chen.....http://dblp.org/pers/hd/c/Chen:Brad", "Derek L. Schuff.....http://dblp.org/pers/hd/s/Schuff:Derek_L=", "David Sehr.....http://dblp.org/pers/hd/s/Sehr:David", "Cliff Biffle.....http://dblp.org/pers/hd/b/Biffle:Cliff", "Bennet Yee.....http://dblp.org/pers/hd/y/Yee:Bennet"], "conf": "pldi", "year": "2011", "pages": 12}