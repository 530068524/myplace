{"title": "Inferring ownership transfer for efficient message passing.", "fields": ["multi core processor", "actor model", "pointer", "shared memory", "copying"], "abstract": "One of the more popular paradigms for concurrent programming is the Actor model of message passing; it has been adopted in one form or another by a number of languages and frameworks. By avoiding a shared local state and instead relying on message passing, the Actor model facilitates modular programming. An important challenge for message passing languages is to transmit messages efficiently. This requires retaining the pass-by-value semantics of messages while avoiding making a deep copy on sequential or shared memory multicore processors. A key observation is that many messages have an ownership transfer semantics; such messages can be sent efficiently using pointers without introducing shared state between concurrent objects. We propose a conservative static analysis algorithm which infers if the content of a message is compatible with an ownership transfer semantics. Our tool, called SOTER (for Safe Ownership Transfer enablER) transforms the program to avoid the cost of copying the contents of a message whenever it can infer the content obeys the ownership transfer semantics. Experiments using a range of programs suggest that our conservative static analysis method is usually able to infer ownership transfer. Performance results demonstrate that the transformed programs execute up to an order of magnitude faster than the original programs.", "citation": "Citations (27)", "year": "2011", "departments": ["University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign"], "conf": "ppopp", "authors": ["Stas Negara.....http://dblp.org/pers/hd/n/Negara:Stas", "Rajesh K. Karmani.....http://dblp.org/pers/hd/k/Karmani:Rajesh_K=", "Gul A. Agha.....http://dblp.org/pers/hd/a/Agha:Gul_A="], "pages": 10}