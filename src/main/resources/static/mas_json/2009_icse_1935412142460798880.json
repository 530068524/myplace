{"title": "Accurate Interprocedural Null-Dereference Analysis for Java.", "fields": ["java", "null", "false positive paradox", "software bug", "static program analysis"], "abstract": "Null dereference is a commonly occurring defect in Java programs, and many static-analysis tools identify such defects. However, most of the existing tools perform a limited interprocedural analysis. In this paper, we present an interprocedural path-sensitive and context-sensitive analysis for identifying null dereferences. Starting at a dereference statement, our approach performs a backward demand-driven analysis to identify precisely paths along which null values may flow to the dereference. The demand-driven analysis avoids an exhaustive program exploration, which lets it scale to large programs. We present the results of empirical studies conducted using large open-source and commercial products. Our results show that: (1) our approach detects fewer false positives, and significantly more interprocedural true positives, than other commonly used tools; (2) the analysis scales to large subjects; and (3) the identified defects are often deleted in subsequent releases, which indicates that the reported defects are important.", "citation": "Citations (76)", "departments": ["IBM", "IBM"], "authors": ["Mangala Gowri Nanda.....http://dblp.org/pers/hd/n/Nanda:Mangala_Gowri", "Saurabh Sinha.....http://dblp.org/pers/hd/s/Sinha:Saurabh"], "conf": "icse", "year": "2009", "pages": 11}