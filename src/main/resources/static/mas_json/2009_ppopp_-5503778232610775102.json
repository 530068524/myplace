{"title": "Techniques for efficient placement of synchronization primitives.", "fields": ["multithreading", "control flow graph", "linux kernel", "instruction level parallelism", "task parallelism"], "abstract": "Harnessing the hardware parallelism of the emerging multi-cores systems necessitates concurrent software. Unfortunately, most of the existing mainstream software is sequential in nature. Although one could auto-parallelize a given program, the efficacy of this is largely limited to floating-point codes. One of the ways to alleviate the above limitation is to parallelize programs, which cannot be auto-parallelized, via explicit synchronization. In this regard, efficient placement of the synchronization primitives - say, post, wait - plays a key role in achieving high degree of thread-level parallelism ( TLP ). In this paper, we propose novel compiler techniques for the above. Specifically, given a control flow graph ( CFG ), the proposed techniques place a post as early as possible and place a wait as late as possible in the CFG, subject to dependences. We demonstrate the efficacy of our techniques, on a real machine, using real codes, specifically, from the industry-standard SPEC CPU benchmarks, the Linux kernel and other widely used open source codes. Our results show that the proposed techniques yield significantly higher levels of TLP than the state-of-the-art.", "citation": "Citations (12)", "year": "2009", "departments": ["University of California, Irvine", "University of California, Irvine", "Yahoo!"], "conf": "ppopp", "authors": ["Alexandru Nicolau.....http://dblp.org/pers/hd/n/Nicolau:Alexandru", "Guangqiang Li.....http://dblp.org/pers/hd/l/Li:Guangqiang", "Arun Kejariwal.....http://dblp.org/pers/hd/k/Kejariwal:Arun"], "pages": 10}