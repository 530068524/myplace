{"title": "Parallel data race detection for task parallel programs with locks.", "fields": ["compiler", "programmer", "schedule", "thread", "work stealing"], "abstract": "Programming with tasks is a promising approach to write performance portable parallel code. In this model, the programmer explicitly specifies tasks and the task parallel runtime employs work stealing to distribute tasks among threads. Similar to multithreaded programs, task parallel programs can also exhibit data races. Unfortunately, prior data race detectors for task parallel programs either run the program serially or do not handle locks, and/or detect races only in the schedule observed by the analysis. This paper proposes PTRacer, a parallel on-the-fly data race detector for task parallel programs that use locks. PTRacer detects data races not only in the observed schedule but also those that can happen in other schedules (which are permutations of the memory operations in the observed schedule) for a given input. It accomplishes the above goal by leveraging the dynamic execution graph of a task parallel execution to determine whether two accesses can happen in parallel and by maintaining constant amount of access history metadata with each distinct set of locks held for each shared memory location. To detect data races (beyond the observed schedule) in programs with branches sensitive to scheduling decisions, we propose static compiler instrumentation that records memory accesses that will be executed in the other path with simple branches. PTRacer has performance overheads similar to the state-of-the-art race detector for task parallel programs, SPD3, while detecting more races in programs with locks.", "citation": "Citations (5)", "departments": ["Rutgers University", "Rutgers University", "Princeton University"], "authors": ["Adarsh Yoga.....http://dblp.org/pers/hd/y/Yoga:Adarsh", "Santosh Nagarakatte.....http://dblp.org/pers/hd/n/Nagarakatte:Santosh", "Aarti Gupta.....http://dblp.org/pers/hd/g/Gupta:Aarti"], "conf": "sigsoft", "year": "2016", "pages": 13}