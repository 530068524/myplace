{"title": "Archface: a contract place where architectural design and code meet together.", "fields": ["software architecture", "architecture description language", "control flow", "bridging", "trait"], "abstract": "This paper proposes  Archface , an interface mechanism for bridging the gap between architectural design and its implementation.  Archface , which encapsulates design essence based on the  component-and-connector  architecture, is not only an ADL (Architecture Description Language) but also a programming-level interface.  Archface  is effective for software evolution because traceability between design and its implementation can be realized by enforcing architectural constraints on program implementation, and this traceability is bidirectional. In  Archface , a component exposes program points such as method call/execution and a connector defines how to coordinate exposed program points. A collaborative architecture consisting of components can be encapsulated into a group of interfaces and separated from implementation, because dynamic program points representing control flow can be specified in the interfaces. We can characterize the notion of  Archface  with the phrase \" predicate coordination ,\" in which program points are exposed by a predicate and coordinated by a trait-based connector.", "citation": "Citations (70)", "departments": ["Kyushu University", "Kyushu Institute of Technology", "University of Tokyo"], "authors": ["Naoyasu Ubayashi.....http://dblp.org/pers/hd/u/Ubayashi:Naoyasu", "Jun Nomura.....http://dblp.org/pers/hd/n/Nomura:Jun", "Tetsuo Tamai.....http://dblp.org/pers/hd/t/Tamai:Tetsuo"], "conf": "icse", "year": "2010", "pages": 10}