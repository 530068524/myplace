{"title": "General transformations for GPU execution of tree traversals.", "fields": ["tree traversal", "degree of parallelism", "memory hierarchy", "cuda", "pointer"], "abstract": "With the advent of programmer-friendly GPU computing environments, there has been much interest in offloading workloads that can exploit the high degree of parallelism available on modern GPUs. Exploiting this parallelism and optimizing for the GPU memory hierarchy is well-understood for regular applications that operate on dense data structures such as arrays and matrices. However, there has been significantly less work in the area of irregular algorithms and even less so when pointer-based dynamic data structures are involved. Recently, irregular algorithms such as Barnes-Hut and kd-tree traversals have been implemented on GPUs, yielding significant performance gains over CPU implementations. However, the implementations often rely on exploiting application-specific semantics to get acceptable performance. We argue that there are general-purpose techniques for implementing irregular algorithms on GPUs that exploit similarities in algorithmic structure rather than application-specific knowledge. We demonstrate these techniques on several tree traversal algorithms, achieving speedups of up to 38x over 32--thread CPU versions.", "citation": "Citations (15)", "departments": ["Purdue University", "Purdue University", "Purdue University"], "authors": ["Michael Goldfarb.....http://dblp.org/pers/hd/g/Goldfarb:Michael", "Youngjoon Jo.....http://dblp.org/pers/hd/j/Jo:Youngjoon", "Milind Kulkarni.....http://dblp.org/pers/hd/k/Kulkarni_0001:Milind"], "conf": "sc", "year": "2013", "pages": 12}