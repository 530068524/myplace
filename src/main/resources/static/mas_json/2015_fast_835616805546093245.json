{"title": "Efficient Intra-Operating System Protection Against Harmful DMAs.", "fields": ["throughput", "virtual address space", "overhead", "time complexity", "allocator"], "abstract": "Operating systems can defend themselves against misbehaving I/O devices and drivers by employing intra-OS protection. With \"strict\" intra-OS protection, the OS uses the IOMMU to map each DMA buffer immediately before the DMA occurs and to unmap it immediately after. Strict protection is costly due to IOMMU-related hardware overheads, motivating \"deferred\" intra-OS protection, which trades off some safety for performance.\n\nWe investigate the Linux intra-OS protection mapping layer and discover that hardware overheads are not exclusively to blame for its high cost. Rather, the cost is amplified by the I/O virtual address (IOVA) allocator, which regularly induces linear complexity. We find that the nature of IOVA allocation requests is inherently simple and constrained due to the manner by which I/O devices are used, allowing us to deliver constant time complexity with a compact, easy-to-implement optimization. Our optimization improves the throughput of standard benchmarks by up to 5.5x. It delivers strict protection with performance comparable to that of the baseline deferred protection.\n\nTo generalize our case that OSes drive the IOMMU with suboptimal software, we additionally investigate the FreeBSD mapping layer and obtain similar findings.", "citation": "Citations (7)", "departments": ["Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology"], "authors": ["Moshe Malka.....http://dblp.org/pers/hd/m/Malka:Moshe", "Nadav Amit.....http://dblp.org/pers/hd/a/Amit:Nadav", "Dan Tsafrir.....http://dblp.org/pers/hd/t/Tsafrir:Dan"], "conf": "fast", "year": "2015", "pages": 16}