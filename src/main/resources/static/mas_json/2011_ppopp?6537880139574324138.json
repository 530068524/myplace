{"title": "Communicating memory transactions.", "fields": ["correctness", "message broker", "deadlock", "transactional memory", "database transaction"], "abstract": "Many concurrent programming models enable both transactional memory and message passing. For such models, researchers have built increasingly efficient implementations and defined reasonable correctness criteria, while it remains an open problem to obtain the best of both worlds. We present a programming model that is the first to have opaque transactions, safe asynchronous message passing, and an efficient implementation. Our semantics uses tentative message passing and keeps track of dependencies to enable undo of message passing in case a transaction aborts. We can program communication idioms such as barrier and rendezvous that do not deadlock when used in an atomic block. Our experiments show that our model adds little overhead to pure transactions, and that it is significantly more efficient than Transactional Events. We use a novel definition of safe message passing that may be of independent interest.", "citation": "Citations (27)", "year": "2011", "departments": ["University of California, Los Angeles", "University of California, Los Angeles"], "conf": "ppopp", "authors": ["Mohsen Lesani.....http://dblp.org/pers/hd/l/Lesani:Mohsen", "Jens Palsberg.....http://dblp.org/pers/hd/p/Palsberg:Jens"], "pages": 12}