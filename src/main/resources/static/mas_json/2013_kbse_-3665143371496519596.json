{"title": "Detecting and characterizing semantic inconsistencies in ported code.", "fields": ["porting", "mutation testing", "identifier", "software quality", "subroutine"], "abstract": "Adding similar features and bug fixes often requires porting program patches from reference implementations and adapting them to target implementations. Porting errors may result from faulty adaptations or inconsistent updates. This paper investigates (1) the types of porting errors found in practice, and (2) how to detect and characterize potential porting errors. Analyzing version histories, we define five categories of porting errors, including incorrect control- and data-flow, code redundancy, inconsistent identifier renamings, etc. Leveraging this categorization, we design a static control- and data-dependence analysis technique, SPA, to detect and characterize porting inconsistencies. Our evaluation on code from four open-source projects shows that SPA can detect porting inconsistencies with 65% to 73% precision and 90% recall, and identify inconsistency types with 58% to 63% precision and 92% to 100% recall. In a comparison with two existing error detection tools, SPA improves precision by 14 to 17 percentage points.", "citation": "Citations (15)", "year": "2013", "departments": ["University of Texas at Austin", "University of Texas at Austin", "Langley Research Center", "Ames Research Center"], "conf": "kbse", "authors": ["Baishakhi Ray.....http://dblp.org/pers/hd/r/Ray:Baishakhi", "Miryung Kim.....http://dblp.org/pers/hd/k/Kim:Miryung", "Suzette Person.....http://dblp.org/pers/hd/p/Person:Suzette", "Neha Rungta.....http://dblp.org/pers/hd/r/Rungta:Neha"], "pages": 11}