{"title": "Compiler testing via a theory of sound optimisations in the C11/C++11 memory model.", "fields": ["inline expansion", "compiler correctness", "memory barrier", "interprocedural optimization", "functional compiler"], "abstract": "Compilers sometimes generate correct sequential code but break the concurrency memory model of the programming language: these subtle compiler bugs are observable only when the miscompiled functions interact with concurrent contexts, making them particularly hard to detect. In this work we design a strategy to reduce the hard problem of hunting concurrency compiler bugs to differential testing of sequential code and build a tool that puts this strategy to work. Our first contribution is a theory of sound optimisations in the C11/C++11 memory model, covering most of the optimisations we have observed in real compilers and validating the claim that common compiler optimisations are sound in the C11/C++11 memory model. Our second contribution is to show how, building on this theory, concurrency compiler bugs can be identified by comparing the memory trace of compiled code against a reference memory trace for the source code. Our tool identified several mistaken write introductions and other unexpected behaviours in the latest release of the gcc compiler.", "citation": "Citations (27)", "departments": ["French Institute for Research in Computer Science and Automation", "Indian Institute of Technology Kanpur", "French Institute for Research in Computer Science and Automation"], "authors": ["Robin Morisset.....http://dblp.org/pers/hd/m/Morisset:Robin", "Pankaj Pawan.....http://dblp.org/pers/hd/p/Pawan:Pankaj", "Francesco Zappa Nardelli.....http://dblp.org/pers/hd/n/Nardelli:Francesco_Zappa"], "conf": "pldi", "year": "2013", "pages": 10}