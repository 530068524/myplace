{"title": "Navigating the maze of graph analytics frameworks using massive graph datasets.", "fields": ["implementation", "analytics", "graph traversal", "machine code", "graph database"], "abstract": "Graph algorithms are becoming increasingly important for analyzing large datasets in many fields. Real-world graph data follows a pattern of sparsity, that is not uniform but highly skewed towards a few items. Implementing graph traversal, statistics and machine learning algorithms on such data in a scalable manner is quite challenging. As a result, several graph analytics frameworks (GraphLab, CombBLAS, Giraph, SociaLite and Galois among others) have been developed, each offering a solution with different programming models and targeted at different users. Unfortunately, the \"Ninja performance gap\" between optimized code and most of these frameworks is very large (2-30X for most frameworks and up to 560X for Giraph) for common graph algorithms, and moreover varies widely with algorithms. This makes the end-users' choice of graph framework dependent not only on ease of use but also on performance. In this work, we offer a quantitative roadmap for improving the performance of all these frameworks and bridging the \"ninja gap\". We first present hand-optimized baselines that get performance close to hardware limits and higher than any published performance figure for these graph algorithms. We characterize the performance of both this native implementation as well as popular graph frameworks on a variety of algorithms. This study helps end-users delineate bottlenecks arising from the algorithms themselves vs. programming model abstractions vs. the framework implementations. Further, by analyzing the system-level behavior of these frameworks, we obtain bottlenecks that are agnostic to specific algorithms. We recommend changes to alleviate these bottlenecks (and implement some of them) and reduce the performance gap with respect to native code. These changes will enable end-users to choose frameworks based mostly on ease of use.", "citation": "Citations (129)", "year": "2014", "departments": ["Intel", "Intel", "Intel", "Stanford University", "Intel"], "conf": "sigmod", "authors": ["Nadathur Satish.....http://dblp.org/pers/hd/s/Satish:Nadathur", "Narayanan Sundaram.....http://dblp.org/pers/hd/s/Sundaram:Narayanan", "Md. Mostofa Ali Patwary.....http://dblp.org/pers/hd/p/Patwary:Md=_Mostofa_Ali", "Jiwon Seo.....http://dblp.org/pers/hd/s/Seo:Jiwon", "Jongsoo Park.....http://dblp.org/pers/hd/p/Park:Jongsoo", "M. Amber Hassaan.....http://dblp.org/pers/hd/h/Hassaan:M=_Amber", "Shubho Sengupta.....http://dblp.org/pers/hd/s/Sengupta:Shubho", "Zhaoming Yin.....http://dblp.org/pers/hd/y/Yin:Zhaoming", "Pradeep Dubey.....http://dblp.org/pers/hd/d/Dubey:Pradeep"], "pages": 12}