{"title": "Incremental Bloom Filters.", "fields": ["distributed database", "false positive rate", "ranging", "memory management", "bloom filter"], "abstract": "A bloom filter is a randomized data structure for performing approximate membership queries. It is being increasingly used in networking applications ranging from security to routing in peer to peer networks. In order to meet a given false positive rate, the amount of memory required by a bloom filter is a function of the number of elements in the set. We consider the problem of minimizing the memory requirements in cases where the number of elements in the set is not known in advance but the distribution or moment information of the number of elements is known. We show how to exploit such information to minimize the expected amount of memory required for the filter. We also show how this approach can significantly reduce memory requirement when bloom filters are constructed for multiple sets in parallel. We show analytically as well as experiments on synthetic and trace data that our approach leads to one to three orders of magnitude reduction in memory compared to a standard bloom filter.", "citation": "Citations (24)", "departments": ["Bell Labs", "Bell Labs", "Bell Labs"], "authors": ["Fang Hao.....http://dblp.org/pers/hd/h/Hao:Fang", "Murali S. Kodialam.....http://dblp.org/pers/hd/k/Kodialam:Murali_S=", "T. V. Lakshman.....http://dblp.org/pers/hd/l/Lakshman:T=_V="], "conf": "infocom", "year": "2008", "pages": 9}