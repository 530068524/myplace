{"title": "Sound static deadlock analysis for C/Pthreads.", "fields": ["deadlock", "posix threads", "speedup", "software bug", "static analysis"], "abstract": "We present a static deadlock analysis approach for C/pthreads. The design of our method has been guided by the requirement to analyse real-world code. Our approach is sound (i.e., misses no deadlocks) for programs that have defined behaviour according to the C standard and the pthreads specification, and is precise enough to prove deadlock-freedom for a large number of such programs. The method consists of a pipeline of several analyses that build on a new context- and thread-sensitive abstract interpretation framework. We further present a lightweight dependency analysis to identify statements relevant to deadlock analysis and thus speed up the overall analysis. In our experimental evaluation, we succeeded to prove deadlock-freedom for 292 programs from the Debian GNU/Linux distribution with in total 2.3 MLOC in 4 hours.", "citation": "Citations (3)", "departments": ["University of Oxford", "University of Oxford", "University of Sussex", "SSW-Trading GmbH, Germany"], "authors": ["Daniel Kroening.....http://dblp.org/pers/hd/k/Kroening:Daniel", "Daniel Poetzl.....http://dblp.org/pers/hd/p/Poetzl:Daniel", "Peter Schrammel.....http://dblp.org/pers/hd/s/Schrammel:Peter", "Bj\u00f6rn Wachter.....http://dblp.org/pers/hd/w/Wachter:Bj=ouml=rn"], "conf": "kbse", "year": "2016", "pages": 12}