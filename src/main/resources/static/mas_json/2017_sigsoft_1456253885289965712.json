{"title": "AtexRace: across thread and execution sampling for in-house race detection.", "fields": ["test case", "concurrency", "dynamic data", "thread", "sampling"], "abstract": "Data race is a major source of concurrency bugs. Dynamic data race detection tools (e.g., FastTrack) monitor the execu-tions of a program to report data races occurring in runtime. However, such tools incur significant overhead that slows down and perturbs executions. To address the issue, the state-of-the-art dynamic data race detection tools (e.g., LiteRace) ap-ply sampling techniques to selectively monitor memory access-es. Although they reduce overhead, they also miss many data races as confirmed by existing studies. Thus, practitioners face a dilemma on whether to use FastTrack, which detects more data races but is much slower, or LiteRace, which is faster but detects less data races. In this paper, we propose a new sam-pling approach to address the major limitations of current sampling techniques, which ignore the facts that a data race involves two threads and a program under testing is repeatedly executed. We develop a tool called AtexRace to sample memory accesses across both threads and executions. By selectively monitoring the pairs of memory accesses that have not been frequently observed in current and previous executions, AtexRace detects as many data races as FastTrack at a cost as low as LiteRace. We have compared AtexRace against FastTrack and LiteRace on both Parsec benchmark suite and a large-scale real-world MySQL Server with 223 test cases. The experiments confirm that AtexRace can be a replacement of FastTrack and LiteRace.", "citation": "Not cited", "departments": ["Western Michigan University", "Chinese Academy of Sciences", "Western Michigan University"], "authors": ["Yu Guo.....http://dblp.org/pers/hd/g/Guo:Yu", "Yan Cai.....http://dblp.org/pers/hd/c/Cai_0001:Yan", "Zijiang Yang.....http://dblp.org/pers/hd/y/Yang:Zijiang"], "conf": "sigsoft", "year": "2017", "pages": 11}