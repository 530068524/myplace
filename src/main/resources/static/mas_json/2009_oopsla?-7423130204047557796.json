{"title": "The design of a task parallel library.", "fields": ["language integrated query", "net framework", "parallel extensions", "delegate", "work stealing"], "abstract": "The Task Parallel Library (TPL) is a library for .NET that makes it easy to take advantage of potential parallelism in a program. The library relies heavily on generics and delegate expressions to provide custom control structures expressing structured parallelism such as map-reduce in user programs. The library implementation is built around the notion of a task as a finite CPU-bound computation. To capture the ubiquitous apply-to-all pattern the library also introduces the novel concept of a replicable task. Tasks and replicable tasks are assigned to threads using work stealing techniques, but unlike traditional implementations based on the THE protocol, the library uses a novel data structure called a 'duplicating queue'. A surprising feature of duplicating queues is that they have sequentially inconsistent behavior on architectures with weak memory models, but capture this non-determinism in a benign way by sometimes duplicating elements. TPL ships as part of the Microsoft Parallel Extensions for the .NET framework 4.0, and forms the foundation of Parallel LINQ queries (however, note that the productized TPL library may differ in significant ways from the basic design described in this article).", "citation": "Citations (285)", "year": "2009", "departments": ["Microsoft", "Microsoft", "Microsoft"], "conf": "oopsla", "authors": ["Daan Leijen.....http://dblp.org/pers/hd/l/Leijen:Daan", "Wolfram Schulte.....http://dblp.org/pers/hd/s/Schulte:Wolfram", "Sebastian Burckhardt.....http://dblp.org/pers/hd/b/Burckhardt:Sebastian"], "pages": 16}