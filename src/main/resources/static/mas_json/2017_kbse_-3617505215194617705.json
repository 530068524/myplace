{"title": "Why and how JavaScript developers use linters.", "fields": ["syntax", "spelling", "static program analysis", "javascript", "mistake"], "abstract": "Automatic static analysis tools help developers to automatically spot code issues in their software. They can be of extreme value in languages with dynamic characteristics, such as JavaScript, where developers can easily introduce mistakes which can go unnoticed for a long time, e.g. a simple syntactic or spelling mistake. Although research has already shown how developers perceive such tools for strongly-typed languages such as Java, little is known about their perceptions when it comes to dynamic languages. In this paper, we investigate what motivates and how developers make use of such tools in JavaScript projects. To that goal, we apply a qualitative research method to conduct and analyze a series of 15 interviews with developers responsible for the linter configuration in reputable OSS JavaScript projects that apply the most commonly used linter, ESLint. The results describe the benefits that developers obtain when using ESLint, the different ways one can configure the tool and prioritize its rules, and the existing challenges in applying linters in the real world. These results have direct implications for developers, tool makers, and researchers, such as tool improvements, and a research agenda that aims to increase our knowledge about the usefulness of such analyzers.", "citation": "Citations (1)", "departments": ["Delft University of Technology", "Delft University of Technology", "Delft University of Technology"], "authors": ["Krist\u00edn Fj\u00f3la T\u00f3masd\u00f3ttir.....http://dblp.org/pers/hd/t/T=oacute=masd=oacute=ttir:Krist=iacute=n_Fj=oacute=la", "Mauricio Finavaro Aniche.....http://dblp.org/pers/hd/a/Aniche:Mauricio_Finavaro", "Arie van Deursen.....http://dblp.org/pers/hd/d/Deursen:Arie_van"], "conf": "kbse", "year": "2017", "pages": 12}