{"title": "Automatic generation of library bindings using static analysis.", "fields": ["software development", "code reuse", "python", "modular programming", "scratch"], "abstract": "High-level languages are growing in popularity. However, decades of C software development have produced large libraries of fast, time-tested, meritorious code that are impractical to recreate from scratch. Cross-language bindings can expose low-level C code to high-level languages. Unfortunately, writing bindings by hand is tedious and error-prone, while mainstream binding generators require extensive manual annotation or fail to offer the language features that users of modern languages have come to expect.   We present an improved binding-generation strategy based on static analysis of unannotated library source code. We characterize three high-level idioms that are not uniquely expressible in C's low-level type system: array parameters, resource managers, and multiple return values. We describe a suite of interprocedural analyses that recover this high-level information, and we show how the results can be used in a binding generator for the Python programming language. In experiments with four large C libraries, we find that our approach avoids the mistakes characteristic of hand-written bindings while offering a level of Python integration unmatched by prior automated approaches. Among the thousands of functions in the public interfaces of these libraries, roughly 40% exhibit the behaviors detected by our static analyses.", "citation": "Citations (14)", "departments": ["University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison"], "authors": ["Tristan Ravitch.....http://dblp.org/pers/hd/r/Ravitch:Tristan", "Steve Jackson.....http://dblp.org/pers/hd/j/Jackson:Steve", "Eric Aderhold.....http://dblp.org/pers/hd/a/Aderhold:Eric", "Ben Liblit.....http://dblp.org/pers/hd/l/Liblit:Ben"], "conf": "pldi", "year": "2009", "pages": 11}