{"title": "Detecting inconsistencies in wrappers: a case study.", "fields": ["implementation", "operating system abstraction layer", "component based software engineering", "software system", "static analysis"], "abstract": "Exchangeability between software components such as operating systems, middleware, databases, and hardware components is a common requirement in many software systems. One way to enable exchangeability is to promote indirect use through a common interface and an implementation for each component that wraps the original component. As developers use the interface instead of the underlying component, they assume that the software system will behave in a specific way independently of the actual component in use. However, differences in the implementations of the wrappers may lead to different behavior when one component is changed for another, which might lead to failures in the field. This work reports on a simple, yet effective approach to detect these differences. The approach is based on tool-supported reviews leveraging lightweight static analysis and machine learning. The approach is evaluated in a case study that analyzes NASA's Operating System Abstraction Layer (OSAL), which is used in various space missions. We detected 84 corner-case issues of which 57 turned out to be bugs that could have resulted in runtime failures.", "citation": "Citations (3)", "departments": ["Fraunhofer Society", "Fraunhofer Society", "Goddard Space Flight Center", "Tech. Univ. Mun ... Munich, Germany"], "authors": ["Henning Femmer.....http://dblp.org/pers/hd/f/Femmer:Henning", "Dharmalingam Ganesan.....http://dblp.org/pers/hd/g/Ganesan:Dharmalingam", "Mikael Lindvall.....http://dblp.org/pers/hd/l/Lindvall:Mikael", "David McComas.....http://dblp.org/pers/hd/m/McComas:David"], "conf": "icse", "year": "2013", "pages": 10}