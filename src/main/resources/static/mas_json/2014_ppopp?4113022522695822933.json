{"title": "Fast concurrent lock-free binary search trees.", "fields": ["order statistic tree", "self balancing binary search tree", "ternary search tree", "dichotomic search", "optimal binary search tree"], "abstract": "We present a new  lock-free  algorithm for concurrent manipulation of a binary search tree in an asynchronous shared memory system that supports search, insert and delete operations. In addition to read and write instructions, our algorithm uses (single-word) compare-and-swap (CAS) and bit-test-and-set (SETB) atomic instructions, both of which are commonly supported by many modern processors including Intel~64 and AMD64.   In contrast to existing lock-free algorithms for a binary search tree, our algorithm is based on marking  edges  rather than nodes. As a result, when compared to other lock-free algorithms, modify (insert and delete) operations in our algorithm work on a smaller portion of the tree, thereby reducing conflicts, and execute fewer atomic instructions (one for insert and three for delete). Our experiments indicate that our lock-free algorithm significantly outperforms all other algorithms for a concurrent binary search tree in many cases, especially when contention is high, by as much as 100%.", "citation": "Citations (96)", "year": "2014", "departments": ["University of Texas at Dallas", "University of Texas at Dallas"], "conf": "ppopp", "authors": ["Aravind Natarajan.....http://dblp.org/pers/hd/n/Natarajan:Aravind", "Neeraj Mittal.....http://dblp.org/pers/hd/m/Mittal:Neeraj"], "pages": 12}