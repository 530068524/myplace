{"title": "Effective dynamic detection of alias analysis errors.", "fields": ["undefined behavior", "alias", "alias analysis", "correctness", "implementation"], "abstract": "Alias analysis is perhaps one of the most crucial and widely used analyses, and has attracted tremendous research efforts over the years. Yet, advanced alias analyses are extremely difficult to get right, and the bugs in these analyses are one key reason that they have not been adopted to production compilers. This paper presents NeonGoby, a system for effectively detecting errors in alias analysis implementations, improving their correctness and hopefully widening their adoption. NeonGoby detects the worst type of bugs where the alias analysis claims that two pointers never alias, but they actually alias at runtime. NeonGoby works by dynamically observing pointer addresses during the execution of a test program and then checking these addresses against an alias analysis for errors. It is explicitly designed to (1) be agnostic to the alias analysis it checks for maximum applicability and ease of use and (2) detect alias analysis errors that manifest on real-world programs and workloads. It emits no false positives as long as test programs do not have undefined behavior per ANSI C specification or call external functions that interfere with our detection algorithm. It reduces performance overhead using a practical selection of techniques. Evaluation on three popular alias analyses and real-world programs Apache and MySQL shows that NeonGoby effectively finds 29 alias analysis bugs with zero false positives and reasonable overhead; the most serious four bugs have been patched by the developers. To enable alias analysis builders to start using NeonGoby today, we have released it open-source at https://github.com/columbia/neongoby, along with our error detection results and proposed patches.", "citation": "Citations (6)", "departments": ["Columbia University", "Columbia University", "Columbia University", "Columbia University"], "authors": ["Jingyue Wu.....http://dblp.org/pers/hd/w/Wu:Jingyue", "Gang Hu.....http://dblp.org/pers/hd/h/Hu:Gang", "Yang Tang.....http://dblp.org/pers/hd/t/Tang:Yang", "Junfeng Yang.....http://dblp.org/pers/hd/y/Yang:Junfeng"], "conf": "sigsoft", "year": "2013", "pages": 11}