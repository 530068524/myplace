{"title": "NDSeq: runtime checking for nondeterministic sequential specifications of parallel correctness.", "fields": ["correctness", "interleaving", "nondeterministic algorithm", "thread", "serializability"], "abstract": "We propose to specify the correctness of a program's parallelism using a sequential version of the program with controlled nondeterminism. Such a  nondeterministic sequential specification  allows (1) the correctness of parallel interference to be verified independently of the program's functional correctness, and (2) the functional correctness of a program to be understood and verified on a sequential version of the program, one with controlled nondeterminism but no interleaving of parallel threads.   We identify a number of common patterns for writing nondeterministic sequential specifications. We apply these patterns to specify the parallelism correctness for a variety of parallel Java benchmarks, even in cases when the functional correctness is far too complex to feasibly specify.   We describe a sound runtime checking technique to validate that an execution of a parallel program conforms to its nondeterministic sequential specification. The technique uses a novel form of conflict-serializability checking to identify, for a given interleaved execution of a parallel program, an equivalent nondeterministic sequential execution. Our experiments show a significant reduction in the number of false positives versus traditional conflict-serializability in checking for parallelization bugs.", "citation": "Citations (17)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Jacob Burnim.....http://dblp.org/pers/hd/b/Burnim:Jacob", "Tayfun Elmas.....http://dblp.org/pers/hd/e/Elmas:Tayfun", "George C. Necula.....http://dblp.org/pers/hd/n/Necula:George_C=", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "pldi", "year": "2011", "pages": 14}