{"title": "A compiler-directed data prefetching scheme for chip multiprocessors.", "fields": ["instruction prefetch", "cache", "small number", "cpu cache", "experimental data"], "abstract": "Data prefetching has been widely used in the past as a technique for hiding memory access latencies. However, data prefetching in multi-threaded applications running on chip multiprocessors (CMPs) can be problematic when multiple cores compete for a shared on-chip cache (L2 or L3). In this paper, we (i) quantify the impact of conventional data prefetching on shared caches in CMPs. The experimental data collected using multi-threaded applications indicates that, while data prefetching improves performance in small number of cores, its benefits reduce significantly as the number of cores is increased, that is, it is not scalable; (ii) identify harmful prefetches as one of the main contributors for degraded performance with a large number of cores; and (iii) propose and evaluate a compiler-directed data prefetching scheme for shared on-chip cache based CMPs. The proposed scheme first identifies program phases using static compiler analysis, and then divides the threads into groups within each phase and assigns a customized prefetcher thread (helper thread) to each group of threads. This helps to reduce the total number of prefetches issued, prefetch overheads, and negative interactions on the shared cache space due to data prefetches, and more importantly, makes compiler-directed prefetching a scalable optimization for CMPs. Our experiments with the applications from the SPEC OMP benchmark suite indicate that the proposed scheme improves overall parallel execution latency by 18.3% over the no-prefetch case and 6.4% over the conventional data prefetching scheme (where each core prefetches its data independently), on average, when 12 cores are used. The corresponding average performance improvements with 24 cores are 16.4% (over the no-prefetch case) and 11.7% (over the conventional prefetching case). We also demonstrate that the proposed scheme is robust under a wide range of values of our major simulation parameters, and the improvements it achieves come very close to those that can be achieved using an optimal scheme.", "citation": "Citations (24)", "year": "2009", "departments": ["Pennsylvania State University", "Pennsylvania State University", "Imperial College London", "Hewlett-Packard"], "conf": "ppopp", "authors": ["Seung Woo Son.....http://dblp.org/pers/hd/s/Son:Seung_Woo", "Mahmut T. Kandemir.....http://dblp.org/pers/hd/k/Kandemir:Mahmut_T=", "Mustafa Karak\u00f6y.....http://dblp.org/pers/hd/k/Karak=ouml=y:Mustafa", "Dhruva R. Chakrabarti.....http://dblp.org/pers/hd/c/Chakrabarti:Dhruva_R="], "pages": 10}