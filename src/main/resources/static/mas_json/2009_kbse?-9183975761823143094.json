{"title": "Looper: Lightweight Detection of Infinite Loops at Runtime.", "fields": ["satisfiability modulo theories", "debugging", "symbolic execution", "heap", "infinite loop"], "abstract": "When a running program becomes unresponsive, it is often impossible for a user to determine if the program is performing some useful computation or if it has entered an infinite loop. We present LOOPER, an automated technique for dynamically analyzing a running program to prove that it is non-terminating. LOOPER uses symbolic execution to produce simple non-termination arguments for infinite loops dependent on both program values and the shape of heap. The constructed arguments are verified with an off-the-shelf SMT solver. We have implemented our technique in a prototype tool for Java applications, and we demonstrate our technique\u2019s effectiveness on several non-terminating benchmarks, including a reported infinite loop bug in open-source text editor jEdit. Our tool is able to dynamically detect infinite loops deep in the execution of large Java programs with no false warnings, producing symbolic arguments that can aid in debugging non-termination.", "citation": "Citations (28)", "departments": ["University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley", "University of California, Berkeley"], "authors": ["Jacob Burnim.....http://dblp.org/pers/hd/b/Burnim:Jacob", "Nicholas Jalbert.....http://dblp.org/pers/hd/j/Jalbert:Nicholas", "Christos Stergiou.....http://dblp.org/pers/hd/s/Stergiou:Christos", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "kbse", "year": "2009", "pages": 9}