{"title": "DOJ: dynamically parallelizing object-oriented programs.", "fields": ["thread", "code", "speedup", "heap", "out of order execution"], "abstract": "We present Dynamic Out-of-Order Java (DOJ), a dynamic parallelization approach. In DOJ, a developer annotates code blocks as tasks to decouple these blocks from the parent execution thread. The DOJ compiler then analyzes the code to generate heap examiners that ensure the parallel execution preserves the behavior of the original sequential program. Heap examiners dynamically extract heap dependences between code blocks and determine when it is safe to execute a code block.   We have implemented DOJ and evaluated it on twelve benchmarks. We achieved an average compilation speedup of 31.15 times over OoOJava and an average execution speedup of 12.73 times over sequential versions of the benchmarks.", "citation": "Citations (10)", "year": "2012", "departments": ["University of California, Irvine", "University of California, Irvine", "University of California, Irvine", "University of California, Irvine"], "conf": "ppopp", "authors": ["Yong Hun Eom.....http://dblp.org/pers/hd/e/Eom:Yong_Hun", "Stephen Yang.....http://dblp.org/pers/hd/y/Yang:Stephen", "James Christopher Jenista.....http://dblp.org/pers/hd/j/Jenista:James_Christopher", "Brian Demsky.....http://dblp.org/pers/hd/d/Demsky:Brian"], "pages": 12}