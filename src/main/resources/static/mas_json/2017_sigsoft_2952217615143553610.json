{"title": "Symbolic execution of programmable logic controller code.", "fields": ["programmable logic controller", "order of magnitude", "symbolic execution", "scada", "partial order reduction"], "abstract": "Programmable logic controllers (PLCs) are specialized computers for automating a wide range of cyber-physical systems. Since these systems are often safety-critical, software running on PLCs need to be free of programming errors. However, automated tools for testing PLC software are lacking despite the pervasive use of PLCs in industry. We propose a symbolic execution based method, named SymPLC, for automatically testing PLC software written in programming languages specified in the IEC 61131-3 standard. SymPLC takes the PLC source code as input and translates it into C before applying symbolic execution, to systematically generate test inputs that cover both paths in each periodic task and interleavings of these tasks. Toward this end, we propose a number of PLC-specific reduction techniques for identifying and eliminating redundant interleavings. We have evaluated SymPLC on a large set of benchmark programs with both single and multiple tasks. Our experiments show that SymPLC can handle these programs efficiently, and for multi-task PLC programs, our new reduction techniques outperform the state-of-the-art partial order reduction technique by more than two orders of magnitude.", "citation": "Citations (4)", "departments": ["Virginia Tech", "Virginia Tech", "University of Southern California"], "authors": ["Shengjian Guo.....http://dblp.org/pers/hd/g/Guo:Shengjian", "Meng Wu.....http://dblp.org/pers/hd/w/Wu:Meng", "Chao Wang.....http://dblp.org/pers/hd/w/Wang_0001:Chao"], "conf": "sigsoft", "year": "2017", "pages": 11}