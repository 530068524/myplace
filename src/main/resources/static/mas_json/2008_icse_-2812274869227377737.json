{"title": "Defining and continuous checking of structural program dependencies.", "fields": ["incremental build model", "datalog", "java", "data structure", "visualization"], "abstract": "Dependencies between program elements need to be modeled from different perspectives reflecting architectural, design, and implementation level decisions. To avoid erosion of the intended structure of the code, it is necessary to explicitly codify these different perspectives on the permitted dependencies and to detect violations continuously and incrementally as software evolves.   We propose an approach that uses declarative queries to group source elements - across programming language module boundaries - into overlapping ensembles. The dependencies between these ensembles are also specified as logic queries. The approach has been integrated into the incremental build process of Eclipse to ensure continuous checking, using an engine for tabled and incremental evaluation of logic queries. Our evaluation shows that our approach is fast enough for day-to-day use along the incremental build process of modern IDEs.", "citation": "Citations (96)", "departments": ["Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt"], "authors": ["Michael Eichberg.....http://dblp.org/pers/hd/e/Eichberg:Michael", "Sven Kloppenburg.....http://dblp.org/pers/hd/k/Kloppenburg:Sven", "Karl Klose.....http://dblp.org/pers/hd/k/Klose:Karl", "Mira Mezini.....http://dblp.org/pers/hd/m/Mezini:Mira"], "conf": "icse", "year": "2008", "pages": 10}