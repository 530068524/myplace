{"title": "Quantification of Software Changes through Probabilistic Symbolic Execution (N).", "fields": ["exploit", "dynamic program analysis", "software maintenance", "concolic testing", "software construction"], "abstract": "Characterizing software changes is fundamental for software maintenance. However existing techniques are imprecise leading to unnecessary maintenance efforts. We introduce a novel approach that computes a precise numeric characterization of program changes, which quantifies the likelihood of reaching target program events (e.g., assert violations or successful termination) and how that evolves with each program update, together with the percentage of inputs impacted by the change. This precise characterization leads to a natural ranking of different program changes based on their probability of execution and their impact on target events. The approach is based on model counting over the constraints collected with a symbolic execution of the program, and exploits the similarity between program versions to reduce cost and improve the quality of analysis results. We implemented our approach in the Symbolic PathFinder tool and illustrate it on several Java case studies, including the evaluation of different program repairs, mutants used in testing, or incremental analysis after a change.", "citation": "Citations (4)", "departments": ["University of Stuttgart", "Carnegie Mellon University", "Texas State University"], "authors": ["Antonio Filieri.....http://dblp.org/pers/hd/f/Filieri:Antonio", "Corina S. Pasareanu.....http://dblp.org/pers/hd/p/Pasareanu:Corina_S=", "Guowei Yang.....http://dblp.org/pers/hd/y/Yang:Guowei"], "conf": "kbse", "year": "2015", "pages": 6}