{"title": "Large scale Hamming distance query processing.", "fields": ["hamming bound", "hamming weight", "query string", "hamming graph", "sargable"], "abstract": "Hamming distance has been widely used in many application domains, such as near-duplicate detection and pattern recognition. We study Hamming distance range query problems, where the goal is to find all strings in a database that are within a Hamming distance bound k from a query string. If k is fixed, we have a static Hamming distance range query problem. If k is part of the input, we have a dynamic Hamming distance range query problem. For the static problem, the prior art uses lots of memory due to its aggressive replication of the database. For the dynamic range query problem, as far as we know, there is no space and time efficient solution for arbitrary databases. In this paper, we first propose a static Hamming distance range query algorithm called HEngine s , which addresses the space issue in prior art by dynamically expanding the query on the fly. We then propose a dynamic Hamming distance range query algorithm called HEngine d , which addresses the limitation in prior art using a divide-and-conquer strategy. We implemented our algorithms and conducted side-by-side comparisons on large real-world and synthetic datasets. In our experiments, HEngine s  uses 4.65 times less space and processes queries 16% faster than the prior art, and HEngine d  processes queries 46 times faster than linear scan while using only 1.7 times more space.", "citation": "Citations (16)", "departments": ["Michigan State University", "Michigan State University", "Michigan State University"], "authors": ["Alex X. Liu.....http://dblp.org/pers/hd/l/Liu:Alex_X=", "Ke Shen.....http://dblp.org/pers/hd/s/Shen:Ke", "Eric Torng.....http://dblp.org/pers/hd/t/Torng:Eric"], "conf": "icde", "year": "2011", "pages": 12}