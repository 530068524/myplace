{"title": "An empirical investigation into the role of API-level refactorings during software evolution.", "fields": ["software bug", "software maintenance", "code refactoring", "software evolution", "software release life cycle"], "abstract": "It is widely believed that refactoring improves software quality and programmer productivity by making it easier to maintain and understand software systems. However, the role of refactorings has not been systematically investigated using fine-grained evolution history. We quantitatively and qualitatively studied API-level refactorings and bug fixes in three large open source projects, totaling 26523 revisions of evolution.   The study found several surprising results: One, there is an increase in the number of bug fixes after API-level refactorings. Two, the time taken to fix bugs is shorter after API-level refactorings than before. Three, a large number of refactoring revisions include bug fixes at the same time or are related to later bug fix revisions. Four, API-level refactorings occur more frequently before than after major software releases. These results call for re-thinking refactoring's true benefits. Furthermore, frequent  floss refactoring  mistakes observed in this study call for new software engineering tools to support safe application of refactoring and behavior modifying edits together.", "citation": "Citations (92)", "departments": ["University of Texas at Austin", "Hong Kong University of Science and Technology", "Hong Kong University of Science and Technology"], "authors": ["Miryung Kim.....http://dblp.org/pers/hd/k/Kim:Miryung", "Dongxiang Cai.....http://dblp.org/pers/hd/c/Cai:Dongxiang", "Sunghun Kim.....http://dblp.org/pers/hd/k/Kim_0001:Sunghun"], "conf": "icse", "year": "2011", "pages": 10}