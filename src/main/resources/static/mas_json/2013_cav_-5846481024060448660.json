{"title": "Automatic Generation of Quality Specifications.", "fields": ["linear temporal logic", "operator", "intuition", "partition", "parameterized complexity"], "abstract": "The logic ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ extends ${\\ensuremath{\\rm LTL}} $ by quality operators. The satisfaction value of an ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ formula in a computation refines the 0/1 value of ${\\ensuremath{\\rm LTL}} $ formulas to a real value in [0,1]. The higher the value is, the better is the quality of the computation. The quality operator \u2207\u03bb, for a quality constant \u03bb\u2208[0,1], enables the designer to prioritize different satisfaction possibilities. Formally, the satisfaction value of a sub-formula \u2207\u03bb\u03d5 is \u03bb times the satisfaction value of \u03d5. For example, the ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ formula $G({\\it req} \\rightarrow (X {\\it grant} \\vee \\triangledown _{\\frac{1}{2}} F{\\it grant}))$ has value 1 in computations in which every request is immediately followed by a grant, value $\\frac{1}{2}$ if grants to some requests involve a delay, and value 0 if some request is not followed by a grant.\n\nThe design of an ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ formula typically starts with an ${\\ensuremath{\\rm LTL}} $ formula on top of which the designer adds the parameterized \u2207 operators. In the Boolean setting, the problem of automatic generation of specifications from binary-tagged computations is of great importance and is a very challenging one. Here we consider the quantitative counterpart: an ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ query is an ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ formula in which some of the quality constants are replaced by variables. Given an ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ query and a set of computations tagged by satisfaction values, the goal is to find an assignment to the variables in the query so that the obtained ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ formula has the given satisfaction values, or, if this is impossible, best approximates them. The motivation to solving ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ queries is that in practice it is easier for a designer to provide desired satisfaction values in representative computations than to come up with quality constants that capture his intuition of good and bad quality.\n\nWe study the problem of solving ${\\ensuremath{\\rm LTL}} ^{\\triangledown } $ queries and show that while the problem is NP-hard, interesting fragments can be solved in polynomial time. One such fragment is the case of a single tagged computation, which we use for introducing a heuristic for the general case. The polynomial solution is based on an analysis of the search space, showing that reasoning about the infinitely many possible assignments can proceed by reasoning about their partition into finitely many classes. Our experimental results show the effectiveness and favorable outcome of the heuristic.", "citation": "Citations (2)", "year": "2013", "departments": ["Hebrew University of Jerusalem", "Hebrew University of Jerusalem", "Hebrew University of Jerusalem"], "conf": "cav", "authors": ["Shaull Almagor.....http://dblp.org/pers/hd/a/Almagor:Shaull", "Guy Avni.....http://dblp.org/pers/hd/a/Avni:Guy", "Orna Kupferman.....http://dblp.org/pers/hd/k/Kupferman:Orna"], "pages": 16}