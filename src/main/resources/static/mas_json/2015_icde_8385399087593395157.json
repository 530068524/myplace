{"title": "A comparison of adaptive radix trees and hash tables.", "fields": ["feature hashing", "hopscotch hashing", "open addressing", "primary clustering", "judy array"], "abstract": "With prices of main memory constantly decreasing, people nowadays are more interested in performing their computations in main memory, and leave high I/O costs of traditional disk-based systems out of the equation. This change of paradigm, however, represents new challenges to the way data should be stored and indexed in main memory in order to be processed efficiently. Traditional data structures, like the venerable B-tree, were designed to work on disk-based systems, but they are no longer the way to go in main-memory systems, at least not in their original form, due to the poor cache utilization of the systems they run on. Because of this, in particular, during the last decade there has been a considerable amount of research on index data structures for main-memory systems. Among the most recent and most interesting data structures for main-memory systems there is the recently-proposed adaptive radix tree ARTful (ART for short). The authors of ART presented experiments that indicate that ART was clearly a better choice over other recent tree-based data structures like FAST and B + -trees. However, ART was not the first adaptive radix tree. To the best of our knowledge, the first was the Judy Array (Judy for short), and a comparison between ART and Judy was not shown. Moreover, the same set of experiments indicated that only a hash table was competitive to ART. The hash table used by the authors of ART in their study was a chained hash table, but this kind of hash tables can be suboptimal in terms of space and performance due to their potentially high use of pointers. In this paper we present a thorough experimental comparison between ART, Judy, two variants of hashing via quadratic probing, and three variants of Cuckoo hashing. These hashing schemes are known to be very efficient. For our study we consider whether the data structures are to be used as a non-covering index (relying on an additional store), or as a covering index (covering key-value pairs). We consider both OLAP and OLTP scenarios. Our experiments strongly indicate that neither ART nor Judy are competitive to the aforementioned hashing schemes in terms of performance,", "citation": "Citations (6)", "departments": ["Saarland University", "Saarland University", "Saarland University", "Saarland University"], "authors": ["Victor Alvarez.....http://dblp.org/pers/hd/a/Alvarez:Victor", "Stefan Richter.....http://dblp.org/pers/hd/r/Richter_0007:Stefan", "Xiao Chen.....http://dblp.org/pers/hd/c/Chen:Xiao", "Jens Dittrich.....http://dblp.org/pers/hd/d/Dittrich:Jens"], "conf": "icde", "year": "2015", "pages": 12}