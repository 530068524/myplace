{"title": "Differential symbolic execution.", "fields": ["exploratory research", "exploit", "symbolic execution", "software maintenance", "software evolution"], "abstract": "Detecting and characterizing the effects of software changes is a fundamental component of software maintenance. Version differencing information can be used to perform version merging, infer change characteristics, produce program documentation, and guide program re-validation. Existing techniques for characterizing code changes, however, are imprecise leading to unnecessary maintenance efforts.   In this paper, we introduce a novel extension and application of symbolic execution techniques that computes a precise behavioral characterization of a program change. This technique, which we call  differential symbolic execution  (DSE), exploits the fact that program versions are largely similar to reduce cost and improve the quality of analysis results. We define the foundational concepts of DSE, describe cost-effective tool support for DSE, and illustrate its potential benefit through an exploratory study that considers version histories of two Java code bases.", "citation": "Citations (250)", "departments": ["University of Nebraska\u2013Lincoln", "University of Nebraska\u2013Lincoln", "University of Nebraska\u2013Lincoln", "Ames Research Center"], "authors": ["Suzette Person.....http://dblp.org/pers/hd/p/Person:Suzette", "Matthew B. Dwyer.....http://dblp.org/pers/hd/d/Dwyer:Matthew_B=", "Sebastian G. Elbaum.....http://dblp.org/pers/hd/e/Elbaum:Sebastian_G=", "Corina S. Pasareanu.....http://dblp.org/pers/hd/p/Pasareanu:Corina_S="], "conf": "sigsoft", "year": "2008", "pages": 12}