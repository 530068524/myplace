{"title": "Reproducing concurrency failures from crash stacks.", "fields": ["concurrent testing", "interleaving", "crash", "stack", "witness"], "abstract": "Reproducing field failures is the first essential step for understanding, localizing and removing faults. Reproducing concurrency field failures is hard due to the need of synthesizing a test code jointly with a thread interleaving that induce the failure in the presence of limited information from the field. Current techniques for reproducing concurrency failures focus on identifying failure-inducing interleavings, leaving largely open the problem of synthesizing the test code that manifests such interleavings. In this paper, we present ConCrash, a technique to automatically generate test codes that reproduce concurrency failures that violate thread-safety from crash stacks, which commonly summarize the conditions of field failures. ConCrash efficiently explores the huge space of possible test codes to identify a failure-inducing one by using a suitable set of search pruning strategies. Combined with existing techniques for exploring interleavings, ConCrash automatically reproduces a given concurrency failure that violates the thread-safety of a class by identifying both a failure-inducing test code and corresponding interleaving. In the paper, we define the ConCrash approach, present a prototype implementation of ConCrash, and discuss the experimental results that we obtained on a known set of ten field failures that witness the effectiveness of the approach.", "citation": "Citations (3)", "departments": ["University of Lugano", "University of Lugano", "University of Lugano"], "authors": ["Francesco A. Bianchi.....http://dblp.org/pers/hd/b/Bianchi:Francesco_A=", "Mauro Pezz\u00e8.....http://dblp.org/pers/hd/p/Pezz=egrave=:Mauro", "Valerio Terragni.....http://dblp.org/pers/hd/t/Terragni:Valerio"], "conf": "sigsoft", "year": "2017", "pages": 12}