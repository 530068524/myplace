{"title": "Blame for all.", "fields": ["lambda calculus", "parametric polymorphism", "parametricity", "blame", "perl 6", "racket", "gradual typing"], "abstract": "We present a language that integrates statically and dynamically typed components, similar to the gradual types of Siek and Taha (2006), and extend it to incorporate parametric polymorphism. Our system permits a dynamically typed value to be cast to a polymorphic type, with the type enforced by dynamic sealing along the lines proposed by Pierce and Sumii (2000), Matthews and Ahmed (2008), and Neis, Dreyer, and Rossberg (2009), in a way that ensures all terms satisfy relational parametricity. Our system includes a notion of blame, which allows us to show that when more-typed and less-typed portions of a program interact, that any type failures are due to the less-typed portion.", "citation": "Citations (110)", "departments": ["Toyota Technological Institute at Chicago", "Northwestern University", "Google", "University of Edinburgh", "Indiana University Bloomington", "Northwestern University", "University of Colorado Boulder", "University of Edinburgh"], "authors": ["Amal Ahmed.....http://dblp.org/pers/hd/a/Ahmed:Amal", "Robert Bruce Findler.....http://dblp.org/pers/hd/f/Findler:Robert_Bruce", "Jeremy G. Siek.....http://dblp.org/pers/hd/s/Siek:Jeremy_G=", "Philip Wadler.....http://dblp.org/pers/hd/w/Wadler:Philip"], "conf": "popl", "year": "2011", "pages": 14}