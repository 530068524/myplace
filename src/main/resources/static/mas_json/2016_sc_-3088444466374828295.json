{"title": "LIBXSMM: accelerating small matrix multiplications by runtime code generation.", "fields": ["central processing unit", "just in time compilation", "x86", "sparse matrix", "instruction set"], "abstract": "Many modern highly scalable scientific simulations packages rely on small matrix multiplications as their main computational engine. Math libraries or compilers are unlikely to provide the best possible kernel performance. To address this issue, we present a library which provides high performance small matrix multiplications targeting all recent x86 vector instruction set extensions up to Intel AVX-512. Our evaluation proves that speed-ups of more than 10 x are possible depending on the CPU and application. These speed-ups are achieved by a combination of several novel technologies. We use a code generator which has a built-in architectural model to create code which runs well without requiring an auto-tuning phase. Since such code is very specialized we leverage just-in-time compilation to only build the required kernel variant at runtime. To keep ease-of-use, overhead, and kernel management under control we accompany our library with a BLAS-compliant frontend which features a multi-level code-cache hierarchy.", "citation": "Citations (18)", "departments": ["Los Angeles Mission College", "Intel", "University of Chicago", "Intel"], "authors": ["Alexander Heinecke.....http://dblp.org/pers/hd/h/Heinecke:Alexander", "Greg Henry.....http://dblp.org/pers/hd/h/Henry:Greg", "Maxwell Hutchinson.....http://dblp.org/pers/hd/h/Hutchinson:Maxwell", "Hans Pabst.....http://dblp.org/pers/hd/p/Pabst:Hans"], "conf": "sc", "year": "2016", "pages": 11}