{"title": "Conc-iSE: incremental symbolic execution of concurrent software.", "fields": ["symbolic trajectory evaluation", "dynamic program analysis", "regression testing", "concolic testing", "software bug"], "abstract": "Software updates often introduce new bugs to existing code bases. Prior regression testing tools focus mainly on test case selection and prioritization whereas symbolic execution tools only handle code changes in sequential software. In this paper, we propose the first incremental symbolic execution method for concurrent software to generate new tests by exploring only the executions affected by code changes between two program versions. Specifically, we develop an inter-thread and inter-procedural change-impact analysis to check if a statement is affected by the changes and then leverage the information to choose executions that need to be re-explored. We also check if execution summaries computed in the previous program can be used to avoid redundant explorations in the new program. We have implemented our method in an incremental symbolic execution tool called Conc-iSE and evaluated it on a large set of multithreaded C programs. Our experiments show that the new method can significantly reduce the overall symbolic execution time when compared with state-of-the-art symbolic execution tools such as KLEE.", "citation": "Citations (13)", "departments": ["Virginia Tech", "Virginia Tech", "University of Southern California"], "authors": ["Shengjian Guo.....http://dblp.org/pers/hd/g/Guo:Shengjian", "Markus Kusano.....http://dblp.org/pers/hd/k/Kusano:Markus", "Chao Wang.....http://dblp.org/pers/hd/w/Wang_0001:Chao"], "conf": "kbse", "year": "2016", "pages": 12}