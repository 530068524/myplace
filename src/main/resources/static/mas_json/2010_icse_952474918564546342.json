{"title": "Using twinning to adapt programs to alternative APIs.", "fields": ["implementation", "crystal twinning", "real time computing", "computer science"], "abstract": "We describe  twinning  and its applications to adapting programs to alternative APIs. Twinning is a simple technique that allows programmers to specify a class of program changes, in the form of a  mapping , without modifying the target program directly. Using twinning, programmers can specify changes that transition a program from using one API to using an alternative API.   We describe two related mapping-based source-to-source transformations. The first applies the mapping to a program, producing a copy with the changes applied. The second generates a new API that abstracts the changes specified in the mapping. Using this API, programmers can invoke either the old (replaced) code or the new (replacement) code through a single interface.   Managing program variants usually involves heavyweight tasks that can prevent the program from compiling for extended periods of time, as well as simultaneous maintenance of multiple implementations, which can make it easy to forget to add features or to fix bugs symmetrically. Our main contribution is to show that, at least in some common cases, the heavyweight work can be reduced and symmetric maintenance can be at least encouraged, and often enforced.", "citation": "Citations (76)", "departments": ["University of Washington", "University of Washington"], "authors": ["Marius Nita.....http://dblp.org/pers/hd/n/Nita:Marius", "David Notkin.....http://dblp.org/pers/hd/n/Notkin:David"], "conf": "icse", "year": "2010", "pages": 10}