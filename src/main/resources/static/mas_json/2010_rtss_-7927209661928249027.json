{"title": "Scheduling Parallel Real-Time Tasks on Multi-core Processors.", "fields": ["fixed priority pre emptive scheduling", "instruction set", "multiprocessor scheduling", "fork join queue", "parallel programming model"], "abstract": "Massively multi-core processors are rapidly gaining market share with major chip vendors offering an ever increasing number of cores per processor. From a programming perspective, the sequential programming model does not scale very well for such multi-core systems. Parallel programming models such as OpenMP present promising solutions for more effectively using multiple processor cores. In this paper, we study the problem of scheduling periodic real-time tasks on multiprocessors under the fork join structure used in OpenMP. We illustrate the theoretical best-case and worst-case periodic fork-join task sets from a processor utilization perspective. Based on our observations of these task sets, we provide a partitioned preemptive fixed-priority scheduling algorithm for periodic fork-join tasks. The proposed multiprocessor scheduling algorithm is shown to have a resource augmentation bound of 3.42, which implies that any task set that is feasible on m unit speed processors can be scheduled by the proposed algorithm on m processors that are 3:42 times faster.", "citation": "Citations (223)", "year": "2010", "departments": ["Carnegie Mellon University", "Carnegie Mellon University", "Carnegie Mellon University"], "conf": "rtss", "authors": ["Karthik Lakshmanan.....http://dblp.org/pers/hd/l/Lakshmanan:Karthik", "Shinpei Kato.....http://dblp.org/pers/hd/k/Kato:Shinpei", "Ragunathan Rajkumar.....http://dblp.org/pers/hd/r/Rajkumar:Ragunathan"], "pages": 10}