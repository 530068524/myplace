{"title": "Identifying Information Disclosure in Web Applications with Retroactive Auditing.", "fields": ["source lines of code", "porting", "password", "audit", "web application"], "abstract": "RAIL is a framework for building web applications that can precisely identify inappropriately disclosed data after a vulnerability is discovered. To do so, RAIL introduces retroactive disclosure auditing: re-running the application with previous inputs once the vulnerability is fixed, to determine what data should have been disclosed. A key challenge for RAIL is to reconcile state divergence between the original and replay executions, so that the differences between executions precisely correspond to inappropriately disclosed data. RAIL provides application developers with APIs to address this challenge, by identifying sensitive data, assigning semantic names to non-deterministic inputs, and tracking dependencies.\n\nResults from a prototype of RAIL built on top of the Meteor framework show that RAIL can quickly and precisely identify data disclosure from complex attacks, including programming bugs, administrative mistakes, and stolen passwords. RAIL incurs up to 22% throughput overhead and 0.5 KB storage overhead per request. Porting three existing web applications required fewer than 25 lines of code changes per application.", "citation": "Citations (5)", "departments": ["Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology", "Massachusetts Institute of Technology"], "authors": ["Haogang Chen.....http://dblp.org/pers/hd/c/Chen:Haogang", "Taesoo Kim.....http://dblp.org/pers/hd/k/Kim:Taesoo", "Xi Wang.....http://dblp.org/pers/hd/w/Wang:Xi", "Nickolai Zeldovich.....http://dblp.org/pers/hd/z/Zeldovich:Nickolai", "M. Frans Kaashoek.....http://dblp.org/pers/hd/k/Kaashoek:M=_Frans"], "conf": "osdi", "year": "2014", "pages": 15}