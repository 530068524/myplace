{"title": "Extending a C-like language for portable SIMD programming.", "fields": ["programming style", "programmer", "instruction set", "control flow", "simd"], "abstract": "SIMD instructions are common in CPUs for years now. Using these instructions effectively requires not only vectorization of  code , but also modifications to the  data layout . However, automatic vectorization techniques are often not powerful enough and suffer from restricted scope of applicability; hence, programmers often vectorize their programs manually by using intrinsics: compiler-known functions that directly expand to machine instructions. They significantly decrease programmer productivity by enforcing a very error-prone and hard-to-read assembly-like programming style. Furthermore, intrinsics are not portable because they are tied to a specific instruction set.   In this paper, we show how a C-like language can be extended to allow for portable and efficient SIMD programming. Our extension puts the programmer in total control over where and how control-flow vectorization is triggered. We present a type system and a formal semantics of our extension and prove the soundness of the type system. Using our prototype implementation IVL that targets Intel's MIC architecture and SSE instruction set, we show that the generated code is roughly on par with handwritten intrinsic code.", "citation": "Citations (15)", "year": "2012", "departments": ["Saarland University", "Saarland University", "Intel"], "conf": "ppopp", "authors": ["Roland Lei\u00dfa.....http://dblp.org/pers/hd/l/Lei=szlig=a:Roland", "Sebastian Hack.....http://dblp.org/pers/hd/h/Hack:Sebastian", "Ingo Wald.....http://dblp.org/pers/hd/w/Wald:Ingo"], "pages": 10}