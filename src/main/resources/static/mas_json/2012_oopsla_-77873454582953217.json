{"title": "Modular and verified automatic program repair.", "fields": ["net framework", "interpreter", "initialization", "code refactoring", "arithmetic overflow"], "abstract": "We study the problem of suggesting code repairs at design time, based on the warnings issued by modular program verifiers. We introduce the concept of a verified repair, a change to a program's source that removes bad execution traces while increasing the number of good traces, where the bad/good traces form a partition of all the traces of a program. Repairs are property-specific. We demonstrate our framework in the context of warnings produced by the modular cccheck (a.k.a. Clousot) abstract interpreter, and generate repairs for missing contracts, incorrect locals and objects initialization, wrong conditionals, buffer overruns, arithmetic overflow and incorrect floating point comparisons. We report our experience with automatically generating repairs for the .NET framework libraries, generating verified repairs for over 80% of the warnings generated by cccheck.", "citation": "Citations (73)", "departments": ["Microsoft", "Microsoft"], "authors": ["Francesco Logozzo.....http://dblp.org/pers/hd/l/Logozzo:Francesco", "Thomas Ball.....http://dblp.org/pers/hd/b/Ball:Thomas"], "conf": "oopsla", "year": "2012", "pages": 14}