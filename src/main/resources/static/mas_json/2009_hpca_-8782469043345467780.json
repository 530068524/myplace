{"title": "Criticality-based optimizations for efficient load processing.", "fields": ["exploit", "cache", "microarchitecture", "x86", "criticality"], "abstract": "Some instructions have more impact on processor performance than others. Identification of these critical instructions can be used to modify and improve instruction processing. Previous work has shown that the criticality of instructions can be dynamically predicted with high accuracy, and that this information can be leveraged to optimize the performance of load value prediction and instruction steering for clustered architectures. In this work, we revisit the idea of criticality, but we propose several processor enhancements that can exploit criticality information and can be directly applied to modern x86 microarchitectures. For the investment of a small (less than 1KB) criticality predictor, we can make a conventional single-read-port data cache achieve the performance of an ideal dual-read-port cache, yielding an average 10% performance improvement. Our remaining techniques can reuse the predictor (i.e., no additional overhead) to further optimize other aspects of load processing (e.g., caching decisions, store-to-load forwarding, etc.), yielding an overall performance improvement of 16% over a conventional processor. Some of these techniques also allow us to decrease power and area costs for several related hardware structures.", "citation": "Citations (10)", "departments": ["Georgia Institute of Technology College of Computing", "Intel", "Intel", "Georgia Institute of Technology College of Computing"], "authors": ["Samantika Subramaniam.....http://dblp.org/pers/hd/s/Subramaniam:Samantika", "Anne Bracy.....http://dblp.org/pers/hd/b/Bracy:Anne", "Hong Wang.....http://dblp.org/pers/hd/w/Wang_0003:Hong", "Gabriel H. Loh.....http://dblp.org/pers/hd/l/Loh:Gabriel_H="], "conf": "hpca", "year": "2009", "pages": 12}