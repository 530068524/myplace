{"title": "When good instructions go bad: generalizing return-oriented programming to RISC.", "fields": ["address space layout randomization", "reactive programming", "procedural programming", "return oriented programming", "general purpose programming language"], "abstract": "This paper reconsiders the threat posed by Shacham's \"return-oriented programming\" -- a technique by which W-xor-X-style hardware protections are evaded via carefully crafted stack frames that divert control flow into the middle of existing variable-length x86 instructions -- creating short new instructions streams that then return. We believe this attack is both more general and a greater threat than the author appreciated. In fact, the vulnerability is not limited to the x86 architecture or any particular operating system, is readily exploitable, and bypasses an entire category of malware protections. In this paper we demonstrate general return-oriented programming on the SPARC, a fixed instruction length RISC architecture with structured control flow. We construct a Turing-complete library of code gadgets using snippets of the Solaris libc, a general purpose programming language, and a compiler for constructing return-oriented exploits. Finally, we argue that the threat posed by return-oriented programming, across all architectures and systems, has negative implications for an entire class of security mechanisms: those that seek to prevent malicious computation by preventing the execution of malicious code.", "citation": "Citations (344)", "year": "2008", "departments": ["University of California, San Diego", "University of California, San Diego", "University of California, San Diego", "University of California, San Diego"], "conf": "ccs", "authors": ["Erik Buchanan.....http://dblp.org/pers/hd/b/Buchanan:Erik", "Ryan Roemer.....http://dblp.org/pers/hd/r/Roemer:Ryan", "Hovav Shacham.....http://dblp.org/pers/hd/s/Shacham:Hovav", "Stefan Savage.....http://dblp.org/pers/hd/s/Savage:Stefan"], "pages": 12}