{"title": "Steno: automatic optimization of declarative queries.", "fields": ["language integrated query", "declarative programming", "imperative programming", "uniprocessor system", "automatic parallelization"], "abstract": "Declarative queries enable programmers to write data manipulation code without being aware of the underlying data structure implementation. By increasing the level of abstraction over imperative code, they improve program readability and, crucially, create opportunities for automatic parallelization and optimization. For example, the Language Integrated Query (LINQ) extensions to C# allow the same declarative query to process in-memory collections, and datasets that are distributed across a compute cluster. However, our experiments show that the  serial  performance of declarative code is several times slower than the equivalent hand-optimized code, because it is implemented using run-time abstractions---such as iterators---that incur overhead due to virtual function calls and superfluous instructions.   To address this problem, we have developed Steno, which uses a combination of novel and well-known techniques to generate code for declarative queries that is almost as efficient as hand-optimized code. Steno translates a declarative LINQ query into type-specialized, inlined and loop-based imperative code. It eliminates chains of iterators from query execution, and optimizes nested queries. We have implemented Steno for uniprocessor, multiprocessor and distributed computing platforms, and show that, for a real-world distributed job, it can almost double the speed of end-to-end execution.", "citation": "Citations (40)", "departments": ["University of Cambridge", "Microsoft", "Microsoft"], "authors": ["Derek Gordon Murray.....http://dblp.org/pers/hd/m/Murray:Derek_Gordon", "Michael Isard.....http://dblp.org/pers/hd/i/Isard:Michael", "Yuan Yu.....http://dblp.org/pers/hd/y/Yu:Yuan"], "conf": "pldi", "year": "2011", "pages": 11}