{"title": "Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations.", "fields": ["heuristic", "executable", "time complexity", "software versioning", "compiler"], "abstract": "Function versioning is an approach to addressing input-sensitivity of program optimizations. A major side effect of it is notable code size increase, which has been hindering its broad applications to large code bases and space-stringent environments. In this paper, we initiate a systematic exploration into the problem, providing answers to some fundamental questions: Given a space constraint, to which function we should apply versioning? How many versions of a function should we include in the final executable? Is the optimal selection feasible to do in polynomial time? This study proves selecting the best set of versions under a space constraint is NP-complete and proposes a heuristic algorithm named CHoGS which yields near optimal results in quadratic time. We implement the algorithm and conduct experiments through the IBM XL compilers. We observe significant performance enhancement with only slight code size increase; the results from CHoGS show factors of higher space efficiency than those from traditional hotness-based methods.", "citation": "Citations (4)", "departments": ["College of William & Mary", "North Carolina State University", "IBM", "IBM"], "authors": ["Mingzhou Zhou.....http://dblp.org/pers/hd/z/Zhou:Mingzhou", "Xipeng Shen.....http://dblp.org/pers/hd/s/Shen:Xipeng", "Yaoqing Gao.....http://dblp.org/pers/hd/g/Gao:Yaoqing", "Graham Yiu.....http://dblp.org/pers/hd/y/Yiu:Graham"], "conf": "oopsla", "year": "2014", "pages": 14}