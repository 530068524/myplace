{"title": "Positive supercompilation for a higher order call-by-value language.", "fields": ["algorithm", "accidental", "evaluation strategy", "programmer", "theoretical computer science", "optimizing compiler", "programming language"], "abstract": "Previous deforestation and supercompilation algorithms may introduce accidental termination when applied to call-by-value programs. This hides looping bugs from the programmer, and changes the behavior of a program depending on whether it is optimized or not. We present a supercompilation algorithm for a higher-order call-by-value language and we prove that the algorithm both terminates and preserves termination properties. This algorithm utilizes strictness information for deciding whether to substitute or not and compares favorably with previous call-by-name transformations.", "citation": "Citations (29)", "departments": ["Lule\u00e5 University of Technology", "Lule\u00e5 University of Technology", "University of T ... cal Engineering", "University of T ... cal Engineering"], "authors": ["Peter A. Jonsson.....http://dblp.org/pers/hd/j/Jonsson:Peter_A=", "Johan Nordlander.....http://dblp.org/pers/hd/n/Nordlander:Johan"], "conf": "popl", "year": "2009", "pages": 12}