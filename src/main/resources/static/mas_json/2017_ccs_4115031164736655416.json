{"title": "Directed Greybox Fuzzing.", "fields": ["critical system", "simulated annealing", "fuzz testing", "crash", "vulnerability"], "abstract": "Existing Greybox Fuzzers (GF) cannot be effectively directed, for instance, towards problematic changes or patches, towards critical system calls or dangerous locations, or towards functions in the stack-trace of a reported vulnerability that we wish to reproduce. In this paper, we introduce Directed Greybox Fuzzing (DGF) which generates inputs with the objective of reaching a given set of target program locations efficiently. We develop and evaluate a simulated annealing-based power schedule that gradually assigns more energy to seeds that are closer to the target locations while reducing energy for seeds that are further away. Experiments with our implementation AFLGo demonstrate that DGF outperforms both directed symbolic-execution-based whitebox fuzzing and undirected greybox fuzzing. We show applications of DGF to patch testing and crash reproduction, and discuss the integration of AFLGo into Google's continuous fuzzing platform OSS-Fuzz. Due to its  directedness , AFLGo could find 39 bugs in several well-fuzzed, security-critical projects like LibXML2. 17 CVEs were assigned.", "citation": "Citations (13)", "year": "2017", "departments": ["National University of Singapore", "National University of Singapore", "National University of Singapore", "National University of Singapore"], "conf": "ccs", "authors": ["Marcel B\u00f6hme.....http://dblp.org/pers/hd/b/B=ouml=hme:Marcel", "Van-Thuan Pham.....http://dblp.org/pers/hd/p/Pham:Van=Thuan", "Manh-Dung Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Manh=Dung", "Abhik Roychoudhury.....http://dblp.org/pers/hd/r/Roychoudhury:Abhik"], "pages": 16}