{"title": "Towards reusable components with aspects: an empirical study on modularity and obliviousness.", "fields": ["software design", "modularity", "aspectj", "software maintenance", "code refactoring"], "abstract": "The potential of aspect-oriented programming to represent cross-cutting concerns as reusable components has yet to be fully realized. Indeed, authors have detailed significant challenges in creating reusable aspect component libraries. Proposed solutions include restricting the power of aspects upfront, inferring concern interaction, and shaping base code to conform to abstract design rules. Another proposed strategy is to reduce obliviousness in return for increased modularity by extending AspectJ with explicit join points (EJPs).   This paper presents the results of an empirical case study that aides in the understanding of the tradeoffs between obliviousness and modularity. We present a refactoring of the exception handling concern for three real-life Java applications to use EJPs instead of oblivious aspects. The empirical differences between this version and an equivalent oblivious version are analyzed. Finally, we present guiding principles on how to strike a favorable balance between obliviousness and modularity.", "citation": "Citations (58)", "departments": ["Purdue University", "Purdue University"], "authors": ["Kevin J. Hoffman.....http://dblp.org/pers/hd/h/Hoffman:Kevin_J=", "Patrick Eugster.....http://dblp.org/pers/hd/e/Eugster:Patrick"], "conf": "icse", "year": "2008", "pages": 10}