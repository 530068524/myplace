{"title": "Surviving Peripheral Failures in Embedded Systems.", "fields": ["latency", "programmer", "rollback", "peripheral", "embedded system"], "abstract": "Peripherals fail. Yet, modern embedded systems largely leave the burden of tolerating peripheral failures to the programmer. This paper presents Phoenix, a semi-automated peripheral recovery system for resource-constrained embedded systems. Phoenix introduces lightweight checkpointing mechanisms that transparently track both the internal program state and the external peripheral state. These mechanisms enable rollback to the precise point at which any failed peripheral access occurred using as little as 6 KB of memory, minimizing both recovery latency and memory utilization.", "citation": "Citations (2)", "departments": ["Rice University", "Rice University"], "authors": ["Rebecca Smith.....http://dblp.org/pers/hd/s/Smith:Rebecca", "Scott Rixner.....http://dblp.org/pers/hd/r/Rixner:Scott"], "conf": "usenix", "year": "2015", "pages": 13}