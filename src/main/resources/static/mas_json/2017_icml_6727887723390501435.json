{"title": "Developing Bug-Free Machine Learning Systems With Formal Mathematics.", "fields": ["numerical stability", "noisy data", "autoencoder", "proof assistant", "graph"], "abstract": "Noisy data, non-convex objectives, model misspecification, and numerical instability can all cause undesired behaviors in machine learning systems. As a result, detecting actual implementation errors can be extremely difficult. We demonstrate a methodology in which developers use an interactive proof assistant to both implement their system and to state a formal theorem defining what it means for their system to be correct. The process of proving this theorem interactively in the proof assistant exposes all implementation errors since any error in the program would cause the proof to fail. As a case study, we implement a new system, Certigrad, for optimizing over stochastic computation graphs, and we generate a formal (i.e. machine-checkable) proof that the gradients sampled by the system are unbiased estimates of the true mathematical gradients. We train a variational autoencoder using Certigrad and find the performance comparable to training the same model in TensorFlow.", "citation": "Citations (3)", "year": "2017", "departments": ["Stanford University", "Stanford University"], "conf": "icml", "authors": ["Daniel Selsam.....http://dblp.org/pers/hd/s/Selsam:Daniel", "Percy Liang.....http://dblp.org/pers/hd/l/Liang:Percy", "David L. Dill.....http://dblp.org/pers/hd/d/Dill:David_L="], "pages": 10}