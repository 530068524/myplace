{"title": "Joogie: Infeasible Code Detection for Java.", "fields": ["redundant code", "uninterpreted function", "dead code", "unreachable code", "code bloat"], "abstract": "We present Joogie, a tool that detects infeasible code in Java programs. Infeasible code is code that does not occur on feasible control-flow paths and thus has no feasible execution. Infeasible code comprises many errors detected by static analysis in modern IDEs such as guaranteed null-pointer dereference or unreachable code. Unlike existing techniques, Joogie identifies infeasible code by proving that a particular statement cannot occur on a terminating execution using techniques from static verification. Thus, Joogie is able to detect infeasible code which is overlooked by existing tools. Joogie works fully automatically, it does not require user-provided specifications and (almost) never produces false warnings.", "citation": "Citations (15)", "year": "2012", "departments": ["University of Freiburg", "United Nations University"], "conf": "cav", "authors": ["Stephan Arlt.....http://dblp.org/pers/hd/a/Arlt:Stephan", "Martin Sch\u00e4f.....http://dblp.org/pers/hd/s/Sch=auml=f:Martin"], "pages": 7}