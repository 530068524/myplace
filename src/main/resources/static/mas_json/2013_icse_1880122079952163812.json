{"title": "Detecting deadlock in programs with data-centric synchronization.", "fields": ["deadlock", "distributed computing", "database centric architecture", "java concurrency", "java modeling language", "synchronization", "computer science", "java annotation", "real time java"], "abstract": "Previously, we developed a data-centric approach to concurrency control in which programmers specify synchronization constraints declaratively, by grouping shared locations into atomic sets. We implemented our ideas in a Java extension called AJ, using Java locks to implement synchronization. We proved that atomicity violations are prevented by construction, and demonstrated that realistic Java programs can be refactored into AJ without significant loss of performance. This paper presents an algorithm for detecting possible dead- lock in AJ programs by ordering the locks associated with atomic sets. In our approach, a type-based static analysis is extended to handle recursive data structures by considering programmer- supplied, compiler-verified lock ordering annotations. In an eval- uation of the algorithm, all 10 AJ programs under consideration were shown to be deadlock-free. One program needed 4 ordering annotations and 2 others required minor refactorings. For the remaining 7 programs, no programmer intervention of any kind was required.", "citation": "Not cited", "departments": ["Symantec", "Saarland University", "IBM", "IBM", "University of Waterloo"], "authors": ["Daniel Marino.....http://dblp.org/pers/hd/m/Marino:Daniel", "Christian Hammer.....http://dblp.org/pers/hd/h/Hammer_0001:Christian", "Julian Dolby.....http://dblp.org/pers/hd/d/Dolby:Julian", "Mandana Vaziri.....http://dblp.org/pers/hd/v/Vaziri:Mandana", "Frank Tip.....http://dblp.org/pers/hd/t/Tip:Frank", "Jan Vitek.....http://dblp.org/pers/hd/v/Vitek:Jan"], "conf": "icse", "year": "2013", "pages": 10}