{"title": "Accelerating iterators in optimizing AST interpreters.", "fields": ["python", "interpreter", "speedup", "iterator", "virtual machine"], "abstract": "Generators offer an elegant way to express iterators. However, their performance has always been their Achilles heel and has prevented widespread adoption. We present techniques to efficiently implement and optimize generators.   We have implemented our optimizations in ZipPy, a modern, light-weight AST interpreter based Python 3 implementation targeting the Java virtual machine. Our implementation builds on a framework that optimizes AST interpreters using just-in-time compilation. In such a system, it is crucial that AST optimizations do not prevent subsequent optimizations. Our system was carefully designed to avoid this problem. We report an average speedup of 3.58x for generator-bound programs. As a result, using generators no longer has downsides and programmers are free to enjoy their upsides.", "citation": "Citations (8)", "departments": ["University of California, Irvine", "University of California, Irvine", "University of California, Irvine", "University of California, Irvine"], "authors": ["Wei Zhang.....http://dblp.org/pers/hd/z/Zhang_0059:Wei", "Per Larsen.....http://dblp.org/pers/hd/l/Larsen:Per", "Stefan Brunthaler.....http://dblp.org/pers/hd/b/Brunthaler:Stefan", "Michael Franz.....http://dblp.org/pers/hd/f/Franz:Michael"], "conf": "oopsla", "year": "2014", "pages": 17}