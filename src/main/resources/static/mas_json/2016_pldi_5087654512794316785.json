{"title": "Temporal NetKAT.", "fields": ["linear temporal logic", "domain specific language", "correctness", "denotational semantics", "kleene algebra"], "abstract": "Over the past 5-10 years, the rise of software-defined networking (SDN) has inspired a wide range of new systems, libraries, hypervisors and languages for programming, monitoring, and debugging network behavior. Oftentimes, these systems are disjoint\u2014one language for programming and another for verification, and yet another for run-time monitoring and debugging. In this paper, we present a new, unified framework, called Temporal NetKAT, capable of facilitating all of these tasks at once. As its name suggests, Temporal NetKAT is the synthesis of two formal theories: past-time (finite trace) linear temporal logic and (network) Kleene Algebra with Tests. Temporal predicates allow programmers to write down concise properties of a packet\u2019s path through the network and to make dynamic packet-forwarding, access control or debugging decisions on that basis. In addition to being useful for programming, the combined equational theory of LTL and NetKAT facilitates proofs of path-based correctness properties. Using new, general, proof techniques, we show that the equational semantics is sound with respect to the denotational semantics, and, for a class of programs we call network-wide programs, complete. We have also implemented a compiler for temporal NetKAT, evaluated its performance on a range of benchmarks, and studied the effectiveness of several optimizations.", "citation": "Citations (8)", "departments": ["Princeton University", "Pomona College", "Princeton University"], "authors": ["Ryan Beckett.....http://dblp.org/pers/hd/b/Beckett:Ryan", "Michael Greenberg.....http://dblp.org/pers/hd/g/Greenberg_0002:Michael", "David Walker.....http://dblp.org/pers/hd/w/Walker:David"], "conf": "pldi", "year": "2016", "pages": 16}