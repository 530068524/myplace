{"title": "Backward-compatible constant-time exception-protected memory.", "fields": ["escape analysis", "dangling pointer", "memory safety", "smart pointer", "pointer analysis"], "abstract": "We present a novel, table-free technique for detecting all temporal and spatial memory access errors (e.g. dangling pointers, out-of-bounds check, etc.) in programs supporting general pointers. Our approach is the first technique to provide such error checking using only constant-time operations. The scheme relies on fat pointers, whose size is contained within standard scalar sizes (up to two words) so that atomic hardware support for operations upon the pointers is obtained along with meaningful casts in-between pointers and other scalars. Optimized compilation of code becomes possible since the scalarized-for-free encoded pointers get register allocated and manipulated. Backward compatibility is enabled by the scalar pointer sizes, with novel automatic support provided for encoding and decoding of fat pointers in place for interaction with unprotected code (e.g. library binaries). Implementation and benchmarks of the technique over several applications of the memory-intensive Olden suite indicate that the average time overhead of our method is about half the time cost of an unprotected application's execution (", "citation": "Citations (1)", "departments": ["IBM", "Tata Institute of Fundamental Research", "Tata Institute of Fundamental Research"], "authors": ["Pradeep Varma.....http://dblp.org/pers/hd/v/Varma:Pradeep", "R. K. Shyamasundar.....http://dblp.org/pers/hd/s/Shyamasundar:R=_K=", "Harshit J. Shah.....http://dblp.org/pers/hd/s/Shah:Harshit_J="], "conf": "sigsoft", "year": "2009", "pages": 10}