{"title": "Floating-point symbolic execution: a case study in n-version programming.", "fields": ["symbolic trajectory evaluation", "programming domain", "procedural programming", "concolic testing", "symbolic programming"], "abstract": "Symbolic execution is a well-known program analysis technique for testing software, which makes intensive use of constraint solvers. Recent support for floating-point constraint solving has made it feasible to support floating-point reasoning in symbolic execution tools. In this paper, we present the experience of two research teams that independently added floating-point support to KLEE, a popular symbolic execution engine. Since the two teams independently developed their extensions, this created the rare opportunity to conduct a rigorous comparison between the two implementations, essentially a modern case study on N-version programming. As part of our comparison, we report on the different design and implementation decisions taken by each team, and show their impact on a rigorously assembled and tested set of benchmarks, itself a contribution of the paper.", "citation": "Citations (5)", "departments": ["Imperial College London", "RWTH Aachen University", "Imperial College London", "Imperial College London", "RWTH Aachen University"], "authors": ["Daniel Liew.....http://dblp.org/pers/hd/l/Liew:Daniel", "Daniel Schemmel.....http://dblp.org/pers/hd/s/Schemmel:Daniel", "Cristian Cadar.....http://dblp.org/pers/hd/c/Cadar:Cristian", "Alastair F. Donaldson.....http://dblp.org/pers/hd/d/Donaldson:Alastair_F=", "Rafael Z\u00e4hl.....http://dblp.org/pers/hd/z/Z=auml=hl:Rafael", "Klaus Wehrle.....http://dblp.org/pers/hd/w/Wehrle:Klaus"], "conf": "kbse", "year": "2017", "pages": 12}