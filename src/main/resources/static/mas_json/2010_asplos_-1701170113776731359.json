{"title": "A real system evaluation of hardware atomicity for software speculation.", "fields": ["code generation", "program optimization", "programming complexity", "atomicity", "code bloat"], "abstract": "In this paper we evaluate the atomic region compiler abstraction by incorporating it into a commercial system. We find that atomic regions are simple and intuitive to integrate into an x86 binary-translation system. Furthermore, doing so trivially enables additional optimization opportunities beyond that achievable by a high-performance dynamic optimizer, which already implements superblocks.   We show that atomic regions can suffer from severe performance penalties if misspeculations are left uncontrolled, but that a simple software control mechanism is sufficient to reign in all detrimental side-effects. We evaluate using full reference runs of the SPEC CPU2000 integer benchmarks and find that atomic regions enable up to a 9% (3% on average) improvement beyond the performance of a tuned product.   These performance improvements are achieved without any negative side effects. Performance side effects such as code bloat are absent with atomic regions; in fact, static code size is reduced. The hardware necessary is synergistic with other needs and was already available on the commercial product used in our evaluation. Finally, the software complexity is minimal as a single developer was able to incorporate atomic regions into a sophisticated 300,000 line code base in three months, despite never having seen the translator source code beforehand.", "citation": "Citations (19)", "year": "2010", "departments": ["University of Illinois at Urbana\u2013Champaign", "Intel", "University of Illinois at Urbana\u2013Champaign"], "conf": "asplos", "authors": ["Naveen Neelakantam.....http://dblp.org/pers/hd/n/Neelakantam:Naveen", "David R. Ditzel.....http://dblp.org/pers/hd/d/Ditzel:David_R=", "Craig B. Zilles.....http://dblp.org/pers/hd/z/Zilles:Craig_B="], "pages": 10}