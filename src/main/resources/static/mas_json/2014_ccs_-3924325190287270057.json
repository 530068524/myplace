{"title": "Code Reuse Attacks in PHP: Automated POP Chain Generation.", "fields": ["code", "code reuse", "internet security", "static program analysis", "memory corruption"], "abstract": "Memory corruption vulnerabilities that lead to control-flow hijacking attacks are a common problem for binary executables and such attacks are known for more than two decades. Over the last few years, especially code reuse attacks attracted a lot of attention. In such attacks, an adversary does not need to inject her own code during the exploitation phase, but she reuses existing code fragments (so called gadgets) to build a code chain that performs malicious computations on her behalf. Return-oriented programming (ROP) is a well-known technique that bypasses many existing defenses. Surprisingly, code reuse attacks are also a viable attack vector against web applications.   In this paper, we study code reuse attacks in the context of PHP-based web applications. We analyze how PHP object injection (POI) vulnerabilities can be exploited via property-oriented programming (POP) and perform a systematic analysis of available gadgets in common PHP applications. Furthermore, we introduce an automated approach to statically detect POI vulnerabilities in object-oriented PHP code. Our approach is also capable of generating POP chains in an automated way. We implemented a prototype of the proposed approach and evaluated it with 10 well-known applications. Overall, we detected 30 new POI vulnerabilities and 28 new gadget chains.", "citation": "Citations (8)", "year": "2014", "departments": ["Ruhr University Bochum", "Ruhr University Bochum", "Ruhr University Bochum"], "conf": "ccs", "authors": ["Johannes Dahse.....http://dblp.org/pers/hd/d/Dahse:Johannes", "Nikolai Krein.....http://dblp.org/pers/hd/k/Krein:Nikolai", "Thorsten Holz.....http://dblp.org/pers/hd/h/Holz:Thorsten"], "pages": 12}