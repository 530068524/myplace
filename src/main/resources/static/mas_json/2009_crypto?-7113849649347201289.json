{"title": "Solving Hidden Number Problem with One Bit Oracle and Advice.", "fields": ["oracle", "polynomial", "absolute value", "most significant bit", "fourier series"], "abstract": "In the Hidden Number Problem (HNP), the goal is to find a hidden number s, when given p, g and access to an oracle that on query a returns the k most significant bits of $s\\cdot g^a \\bmod p$.\n\nWe present an algorithm solving HNP, when given an advice depending only on p and g; the running time and advice length are polynomial in logp. This algorithm improves over prior HNP algorithms in achieving: (1) optimal number of bits k ? 1 (compared with k ? ?(loglogp)); (2) robustness to random noise; and (3) handling a wide family of predicates on top of the most significant bit.\n\nAs a central tool we present an algorithm that, given oracle access to a function f over ${\\mathbb Z}_N$, outputs all the significant Fourier coefficients of f (i.e., those occupying, say, at least 1% of the energy). This algorithm improves over prior works in being:\n\n\nLocal. Its running time is polynomial in logN and $L_1(\\widehat f)$ (for $L_1(\\widehat f)$ the sum of f's Fourier coefficients, in absolute value).\nUniversal. For any N,t, the same oracle queries are asked for all functions f over ${\\mathbb Z}_N$ s.t. $L_1(\\widehat f)\\le t$.\nRobust. The algorithm succeeds with high probability even if the oracle to f is corrupted by random noise.", "citation": "Citations (15)", "departments": ["Institute for Advanced Study"], "authors": ["Adi Akavia.....http://dblp.org/pers/hd/a/Akavia:Adi"], "conf": "crypto", "year": "2009", "pages": 18}