{"title": "How to get more value from your file system directory cache.", "fields": ["zap file", "webserver directory index", "file system fragmentation", "working directory", "design rule for camera file system"], "abstract": "Applications frequently request file system operations that traverse the file system directory tree, such as opening a file or reading a file's metadata. As a result, caching file system directory structure and metadata in memory is an important performance optimization for an OS kernel.   This paper identifies several design principles that can substantially improve hit rate and reduce hit cost transparently to applications and file systems. Specifically, our directory cache design can look up a directory in a constant number of hash table operations, separates finding paths from permission checking, memoizes the results of access control checks, uses signatures to accelerate lookup, and reduces miss rates through caching directory completeness. This design can meet a range of idiosyncratic requirements imposed by POSIX, Linux Security Modules, namespaces, and mount aliases. These optimizations are a significant net improvement for real-world applications, such as improving the throughput of the Dovecot IMAP server by up to 12% and the updatedb utility by up to 29%.", "citation": "Citations (14)", "departments": ["Stony Brook University", "Stony Brook University", "Stony Brook University", "Stony Brook University", "Stony Brook University"], "authors": ["Chia-che Tsai.....http://dblp.org/pers/hd/t/Tsai:Chia=che", "Yang Zhan.....http://dblp.org/pers/hd/z/Zhan:Yang", "Jayashree Reddy.....http://dblp.org/pers/hd/r/Reddy:Jayashree", "Yizheng Jiao.....http://dblp.org/pers/hd/j/Jiao:Yizheng", "Tao Zhang.....http://dblp.org/pers/hd/z/Zhang:Tao", "Donald E. Porter.....http://dblp.org/pers/hd/p/Porter:Donald_E="], "conf": "sosp", "year": "2015", "pages": 16}