{"title": "Be my guest: MCS lock now welcomes guests.", "fields": ["lock", "ticket", "small number", "latency"], "abstract": "The MCS lock is one of the most prevalent queuing locks. It provides fair scheduling and high performance on massively parallel systems. However, the MCS lock mandates a  bring-your-own-context  policy: each lock user must provide an additional context (i.e., a queue node) to interact with the lock. This paper proposes MCSg, a variant of the MCS lock that relaxes this restriction.   Our key observation is that  not all lock users are created equal . We analyzed how locks are used in massively-parallel modern systems, such as NUMA-aware operating systems and databases. We found that such systems often have a small number of \"regular\" code paths that enter the lock very frequently. Such code paths are the primary beneficiary of the high scalability of MCS locks.   However, there are also many \"guest\" code paths that infrequently enter the lock and do not need the same degree of fairness to access the lock (e.g., background tasks that only run periodically with lower priority). These guest users, which are typically spread out in various modules of the software, prefer context-free locks, such as ticket locks.   MCSg provides these guests a context-free interface while regular users still enjoy the benefits provided by MCS. It can also be used as a drop-in replacement of MCS for more advanced locks, such as cohort locking. We also propose MCSg++, an extended version of MCSg, which avoids guest starvation and non-FIFO behaviors that might happen with MCSg.   Our evaluation using microbenchmarks and the TPC-C database benchmark on a 16-socket, 240-core server shows that both MCSg and MCSg++ preserve the benefits of MCS for regular users while providing a context-free interface for guests.", "citation": "Citations (3)", "year": "2016", "departments": ["University of Toronto", "Hewlett-Packard", "Hewlett-Packard"], "conf": "ppopp", "authors": ["Tianzheng Wang.....http://dblp.org/pers/hd/w/Wang_0001:Tianzheng", "Milind Chabbi.....http://dblp.org/pers/hd/c/Chabbi:Milind", "Hideaki Kimura.....http://dblp.org/pers/hd/k/Kimura:Hideaki"], "pages": 12}