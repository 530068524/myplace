{"title": "Faster approximate lossy generalized flow via interior point algorithms.", "fields": ["interior point method", "flow network", "minimum cost flow problem", "system of linear equations", "maximum flow problem"], "abstract": "We present asymptotically faster approximation algorithms for the generalized flow problems in which multipliers on edges are at most 1. For this lossy version of the maximum generalized flow problem, we obtain an additive e approximation of the maximum flow in time O{m 3/2  log (U/e) 2 }, where m is the number of edges in the graph, all capacities are integers in the range {1, ... , U}, and all loss multipliers are ratios of integers in this range. For minimum cost lossy generalized flow with costs in the range {1,... ,U}, we obtain a flow that has value within an additive e of the maximum value and cost at most the optimal cost. In many parameter ranges, these algorithms improve over the previously fastest algorithms for the generalized maximum flow problem by a factor of m 1/2  and for the minimum cost generalized flow problem by a factor of approximately m 1/2 / e 2 . The algorithms work by accelerating traditional interior point algorithms by quickly solving the system of linear equations that arises in each step. The contributions of this paper are twofold. First, we analyze the performance of interior point algorithms with approximate linear system solvers. This analysis alone provides an algorithm for the standard minimum cost flow problem that runs in time Om 3/2  log U}--an improvement of roughly O{n / m 1/2 } over previous algorithms. Second, we examine the linear equations that arise when using an interior point algorithm to solve generalized flow problems. We observe that these belong to the family of symmetric M-matrices, and we then develop Om-time algorithms for solving linear systems in these matrices. These algorithms reduce the problem of solving a linear system in a symmetric M-matrix to that of solving O{log n} linear systems in symmetric diagonally-dominant matrices, which we can do in time Om using the algorithm of Spielman and Teng. All of our algorithms operate on numbers of bit length at most O{log n U / e}.", "citation": "Citations (84)", "year": "2008", "departments": ["Yale University", "Yale University"], "conf": "stoc", "authors": ["Samuel I. Daitch.....http://dblp.org/pers/hd/d/Daitch:Samuel_I=", "Daniel A. Spielman.....http://dblp.org/pers/hd/s/Spielman:Daniel_A="], "pages": 10}