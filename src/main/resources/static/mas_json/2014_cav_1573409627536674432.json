{"title": "From Invariant Checking to Invariant Inference Using Randomized Search.", "fields": ["functional specification", "linked list", "loop invariant", "string", "heap"], "abstract": "We describe a general framework c2i for generating an invariant inference procedure from an invariant checking procedure. Given a checker and a language of possible invariants, c2i generates an inference procedure that iteratively invokes two phases. The search phase uses randomized search to discover candidate invariants and the validate phase uses the checker to either prove or refute that the candidate is an actual invariant. To demonstrate the applicability of c2i, we use it to generate inference procedures that prove safety properties of numerical programs, prove non-termination of numerical programs, prove functional specifications of array manipulating programs, prove safety properties of string manipulating programs, and prove functional specifications of heap manipulating programs that use linked list data structures.", "citation": "Citations (70)", "year": "2014", "departments": ["Stanford University", "Stanford University", "Stanford University", "Stanford University"], "conf": "cav", "authors": ["Rahul Sharma.....http://dblp.org/pers/hd/s/Sharma_0001:Rahul", "Alex Aiken.....http://dblp.org/pers/hd/a/Aiken:Alex"], "pages": 18}