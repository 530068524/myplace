{"title": "OpenMP to GPGPU: a compiler framework for automatic translation and optimization.", "fields": ["code generation", "general purpose computing on graphics processing units", "optimizing compiler", "cuda", "automatic programming"], "abstract": "GPGPUs have recently emerged as powerful vehicles for general-purpose high-performance computing. Although a new Compute Unified Device Architecture (CUDA) programming model from NVIDIA offers improved programmability for general computing, programming GPGPUs is still complex and error-prone. This paper presents a compiler framework for automatic source-to-source translation of standard OpenMP applications into CUDA-based GPGPU applications. The goal of this translation is to further improve programmability and make existing OpenMP applications amenable to execution on GPGPUs. In this paper, we have identified several key transformation techniques, which enable efficient GPU global memory access, to achieve high performance. Experimental results from two important kernels (JACOBI and SPMUL) and two NAS OpenMP Parallel Benchmarks (EP and CG) show that the described translator and compile-time optimizations work well on both regular and irregular applications, leading to performance improvements of up to 50X over the unoptimized translation (up to 328X over serial).", "citation": "Citations (540)", "year": "2009", "departments": ["Purdue University", "Purdue University", "Purdue University"], "conf": "ppopp", "authors": ["Seyong Lee.....http://dblp.org/pers/hd/l/Lee:Seyong", "Seung-Jai Min.....http://dblp.org/pers/hd/m/Min:Seung=Jai", "Rudolf Eigenmann.....http://dblp.org/pers/hd/e/Eigenmann:Rudolf"], "pages": 10}