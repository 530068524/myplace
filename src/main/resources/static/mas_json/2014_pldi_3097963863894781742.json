{"title": "On abstraction refinement for program analyses in Datalog.", "fields": ["typestate analysis", "solver", "boolean satisfiability problem", "abstraction inversion", "pointer analysis"], "abstract": "A central task for a program analysis concerns how to efficiently find a program abstraction that keeps only information relevant for proving properties of interest. We present a new approach for finding such abstractions for program analyses written in Datalog. Our approach is based on counterexample-guided abstraction refinement: when a Datalog analysis run fails using an abstraction, it seeks to generalize the cause of the failure to other abstractions, and pick a new abstraction that avoids a similar failure. Our solution uses a boolean satisfiability formulation that is general, complete, and optimal: it is independent of the Datalog solver, it generalizes the failure of an abstraction to as many other abstractions as possible, and it identifies the cheapest refined abstraction to try next. We show the performance of our approach on a pointer analysis and a typestate analysis, on eight real-world Java benchmark programs.", "citation": "Citations (28)", "departments": ["Georgia Institute of Technology", "Georgia Institute of Technology", "University of Oxford", "Georgia Institute of Technology", "University of Oxford"], "authors": ["Xin Zhang.....http://dblp.org/pers/hd/z/Zhang:Xin", "Ravi Mangal.....http://dblp.org/pers/hd/m/Mangal:Ravi", "Radu Grigore.....http://dblp.org/pers/hd/g/Grigore:Radu", "Mayur Naik.....http://dblp.org/pers/hd/n/Naik:Mayur", "Hongseok Yang.....http://dblp.org/pers/hd/y/Yang:Hongseok"], "conf": "pldi", "year": "2014", "pages": 10}