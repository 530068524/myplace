{"title": "Gradual typing for first-class classes.", "fields": ["type system", "sister language", "gradual typing", "mixin", "design by contract"], "abstract": "Dynamic type-checking and object-oriented programming often go hand-in-hand; scripting languages such as Python, Ruby, and JavaScript all embrace object-oriented (OO) programming. When scripts written in such languages grow and evolve into large programs, the lack of a static type discipline reduces maintainability. A programmer may thus wish to migrate parts of such scripts to a sister language with a static type system. Unfortunately, existing type systems neither support the flexible OO composition mechanisms found in scripting languages nor accommodate sound interoperation with untyped code. In this paper, we present the design of a gradual typing system that supports sound interaction between statically- and dynamically-typed units of class-based code. The type system uses row polymorphism for classes and thus supports mixin-based OO composition. To protect migration of mixins from typed to untyped components, the system employs a novel form of contracts that partially seal classes. The design comes with a theorem that guarantees the soundness of the type system even in the presence of untyped components.", "citation": "Citations (23)", "departments": ["Northeastern University", "Northeastern University", "Northeastern University", "Northeastern University", "Northeastern University"], "authors": ["Asumu Takikawa.....http://dblp.org/pers/hd/t/Takikawa:Asumu", "T. Stephen Strickland.....http://dblp.org/pers/hd/s/Strickland:T=_Stephen", "Christos Dimoulas.....http://dblp.org/pers/hd/d/Dimoulas:Christos", "Sam Tobin-Hochstadt.....http://dblp.org/pers/hd/t/Tobin=Hochstadt:Sam", "Matthias Felleisen.....http://dblp.org/pers/hd/f/Felleisen:Matthias"], "conf": "oopsla", "year": "2012", "pages": 18}