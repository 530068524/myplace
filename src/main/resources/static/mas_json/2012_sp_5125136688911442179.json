{"title": "Unleashing Mayhem on Binary Code.", "fields": ["exploit", "executable", "symbolic execution", "software bug", "concolic testing"], "abstract": "In this paper we present Mayhem, a new system for automatically finding exploitable bugs in binary (i.e., executable) programs. Every bug reported by Mayhem is accompanied by a working shell-spawning exploit. The working exploits ensure soundness and that each bug report is security-critical and actionable. Mayhem works on raw binary code without debugging information. To make exploit generation possible at the binary-level, Mayhem addresses two major technical challenges: actively managing execution paths without exhausting memory, and reasoning about symbolic memory indices, where a load or a store address depends on user input. To this end, we propose two novel techniques: 1) hybrid symbolic execution for combining online and offline (concolic) execution to maximize the benefits of both techniques, and 2) index-based memory modeling, a technique that allows Mayhem to efficiently reason about symbolic memory at the binary level. We used Mayhem to find and demonstrate 29 exploitable vulnerabilities in both Linux and Windows programs, 2 of which were previously undocumented.", "citation": "Citations (263)", "departments": ["Carnegie Mellon University", "Carnegie Mellon University", "Carnegie Mellon University", "Carnegie Mellon University"], "authors": ["Sang Kil Cha.....http://dblp.org/pers/hd/c/Cha:Sang_Kil", "Thanassis Avgerinos.....http://dblp.org/pers/hd/a/Avgerinos:Thanassis", "Alexandre Rebert.....http://dblp.org/pers/hd/r/Rebert:Alexandre", "David Brumley.....http://dblp.org/pers/hd/b/Brumley:David"], "conf": "sp", "year": "2012", "pages": 15}