{"title": "Enabling efficient preemption for SIMT architectures with lightweight context switching.", "fields": ["context switch", "preemption", "stack", "thread", "instruction set"], "abstract": "Context switching is a key technique enabling preemption and time-multiplexing for CPUs. However, for single-instruction multiple-thread (SIMT) processors such as high-end graphics processing units (GPUs), it is challenging to support context switching due to the massive number of threads, which leads to a huge amount of architectural states to be swapped during context switching. The architectural state of SIMT processors includes registers, shared memory, SIMT stacks and barrier states. Recent works present thread-block-level preemption on SIMT processors to avoid context switching overhead. However, because the execution time of a thread block (TB) is highly dependent on the kernel program. The response time of preemption cannot be guaranteed and some TB-level preemption techniques cannot be applied to all kernel functions. In this paper, we propose three complementary ways to reduce and compress the architectural states to achieve lightweight context switching on SIMT processors. Experiments show that our approaches can reduce the register context size by 91.5% on average. Based on lightweight context switching, we enable instruction-level preemption on SIMT processors with compiler and hardware co-design. With our proposed schemes, the preemption latency is reduced by 59.7% on average compared to the naive approach.", "citation": "Citations (8)", "departments": ["North Carolina State University", "Nvidia", "North Carolina State University"], "authors": ["Zhen Lin.....http://dblp.org/pers/hd/l/Lin:Zhen", "Lars Nyland.....http://dblp.org/pers/hd/n/Nyland:Lars", "Huiyang Zhou.....http://dblp.org/pers/hd/z/Zhou:Huiyang"], "conf": "sc", "year": "2016", "pages": 11}