{"title": "Array length inference for C library bindings.", "fields": ["polyglot", "type inference", "sentinel value", "high level programming language", "legacy code"], "abstract": "Simultaneous use of multiple programming languages (polyglot programming) assists in creating efficient, coherent, modern programs in the face of legacy code. However, manually creating bindings to low-level languages like C is tedious and error-prone. We offer relief in the form of an automated suite of analyses, designed to enhance the quality of automatically produced bindings. These analyses recover high-level array length information that is missing from C\u2019s type system. We emit annotations in the style of GObject-Introspection, which produces bindings from annotations on function signatures. We annotate each array argument as terminated by a special sentinel value, fixed-length, or of length determined by another argument. These properties help produce more idiomatic, efficient bindings. We correctly annotate at least 70% of all arrays with these length types, and our results are comparable to those produced by human annotators, but take far less time to produce.", "citation": "Citations (2)", "departments": ["University of Wisconsin-Madison", "Universidade Federal de Minas Gerais", "University of Wisconsin-Madison"], "authors": ["Alisa J. Maas.....http://dblp.org/pers/hd/m/Maas:Alisa_J=", "Henrique Nazar\u00e9.....http://dblp.org/pers/hd/n/Nazar=eacute=:Henrique", "Ben Liblit.....http://dblp.org/pers/hd/l/Liblit:Ben"], "conf": "kbse", "year": "2016", "pages": 11}