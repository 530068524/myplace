{"title": "Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs.", "fields": ["program transformation", "correctness", "atomicity", "serializability", "if and only if"], "abstract": "Atomicity is a fundamental correctness property in multithreaded programs, both because atomic code blocks are amenable to sequential reasoning (which significantly simplifies correctness arguments), and because atomicity violations often reveal defects in a program's synchronization structure. Unfortunately, all atomicity analyses developed to date are incomplete in that they may yield false alarms on correctly synchronized programs, which limits their usefulness.   We present the first dynamic analysis for atomicity that is both sound and complete. The analysis reasons about the exact dependencies between operations in the observed trace of the target program, and it reports error messages if and only if the observed trace is not conflict-serializable. Despite this significant increase in precision, the performance and coverage of our analysis is competitive with earlier incomplete dynamic analyses for atomicity.", "citation": "Citations (174)", "departments": ["University of California, Santa Cruz", "Williams College", "University of California, Santa Cruz"], "authors": ["Cormac Flanagan.....http://dblp.org/pers/hd/f/Flanagan:Cormac", "Stephen N. Freund.....http://dblp.org/pers/hd/f/Freund:Stephen_N=", "Jaeheon Yi.....http://dblp.org/pers/hd/y/Yi:Jaeheon"], "conf": "pldi", "year": "2008", "pages": 11}