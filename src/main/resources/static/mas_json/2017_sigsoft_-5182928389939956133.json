{"title": "Craig vs. Newton in software model checking.", "fields": ["counterexample", "abstraction", "symbolic execution", "craig interpolation", "lockstep"], "abstract": "Ever since the seminal work on SLAM and BLAST, software model checking with counterexample-guided abstraction refinement (CEGAR) has been an active topic of research. The crucial procedure here is to analyze a sequence of program statements (the counterexample) to find building blocks for the overall proof of the program. We can distinguish two approaches (which we name Craig and Newton) to implement the procedure. The historically first approach, Newton (named after the tool from the SLAM toolkit), is based on symbolic execution. The second approach, Craig, is based on Craig interpolation. It was widely believed that Craig is substantially more effective than Newton. In fact, 12 out of the 15 CEGAR-based tools in SV-COMP are based on Craig. Advances in software model checkers based on Craig, however, can go only lockstep with advances in SMT solvers with Craig interpolation. It may be time to revisit Newton and ask whether Newton can be as effective as Craig. We have implemented a total of 11 variants of Craig and Newton in two different state-of-the-art software model checking tools and present the outcome of our experimental comparison.", "citation": "Citations (3)", "departments": ["University of Freiburg", "University of Freiburg", "University of Freiburg", "University of Freiburg", "University of Freiburg"], "authors": ["Daniel Dietsch.....http://dblp.org/pers/hd/d/Dietsch:Daniel", "Matthias Heizmann.....http://dblp.org/pers/hd/h/Heizmann:Matthias", "Betim Musa.....http://dblp.org/pers/hd/m/Musa:Betim", "Alexander Nutz.....http://dblp.org/pers/hd/n/Nutz:Alexander", "Andreas Podelski.....http://dblp.org/pers/hd/p/Podelski:Andreas"], "conf": "sigsoft", "year": "2017", "pages": 11}