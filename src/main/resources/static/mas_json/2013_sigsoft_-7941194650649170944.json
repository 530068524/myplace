{"title": "Practical static analysis of JavaScript applications in the presence of frameworks and libraries.", "fields": ["source lines of code", "unobtrusive javascript", "software development", "machine code", "pointer analysis"], "abstract": "JavaScript is a language that is widely-used for both web- based and standalone applications such as those in the upcoming Windows 8 operating system. Analysis of JavaScript has long been known to be challenging due to its dynamic nature. On top of that, most JavaScript applications rely on large and complex libraries and frameworks, often written in a combination of JavaScript and native code such as C and C++. Stubs have been commonly employed as a partial specification mechanism to address the library problem; however, they are tedious to write, incomplete, and occasionally incorrect.     However, the manner in which library code is used within applications often sheds light on what library APIs return or consume as parameters. In this paper, we propose a technique which combines pointer analysis with use analysis to handle many challenges posed by large JavaScript libraries. Our approach enables a variety of applications, ranging from call graph discovery to auto-complete to supporting runtime optimizations. Our techniques have been implemented and empirically validated on a set of 25 Windows 8 JavaScript applications, averaging 1,587 lines of code, demonstrating a combination of scalability and precision.", "citation": "Citations (90)", "departments": ["Aarhus University", "Microsoft", "Microsoft"], "authors": ["Magnus Madsen.....http://dblp.org/pers/hd/m/Madsen:Magnus", "Benjamin Livshits.....http://dblp.org/pers/hd/l/Livshits:Benjamin", "Michael Fanning.....http://dblp.org/pers/hd/f/Fanning:Michael"], "conf": "sigsoft", "year": "2013", "pages": 11}