{"title": "Parallelizing extensible query optimizers.", "fields": ["query optimization", "rework", "erlang", "multi core processor", "extensibility"], "abstract": "Query optimization is the most computationally complex task in a database management systems. In many query optimizers, faster CPUs and increased RAM can translate directly to better query plans and thus better overall system performance. Although memory size continues to scale with Moore's Law, processor speeds are leveling off. Chip manufacturers are now focusing on multicore designs that integrate increasing numbers of cores in a single CPU. Query optimizers need to be parallelized in order to continue enjoying the growth trend of Moore's Law.   In this paper, we address this problem in the context of the extensible optimizer architectures found in many commercial database systems. We identify the key data dependencies inherent in the dynamic programming at the heart of these optimizers. We use this insight both to design a flexible parallel query optimization implementation, and to assess the opportunities for parallelism in this context.   The proposed solutions can serve as a blueprint for retrofitting existing industry-grade optimizers to leverage multicore architectures, without requiring significant rework of the underlying infrastructure.", "citation": "Citations (13)", "year": "2009", "departments": ["University of California, Berkeley", "Greenplum Inc., ...  Mateo, CA, USA"], "conf": "sigmod", "authors": ["Florian M. Waas.....http://dblp.org/pers/hd/w/Waas:Florian_M=", "Joseph M. Hellerstein.....http://dblp.org/pers/hd/h/Hellerstein:Joseph_M="], "pages": 8}