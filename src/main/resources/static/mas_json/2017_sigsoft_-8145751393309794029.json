{"title": "Toward full elasticity in distributed static analysis: the case of callgraph analysis.", "fields": ["source lines of code", "latency", "out of memory", "call graph", "static analysis"], "abstract": "In this paper we present the design and implementation of a distributed, whole-program static analysis framework that is designed to scale with the size of the input. Our approach is based on the actor programming model and is deployed in the cloud. Our reliance on a cloud cluster provides a degree of elasticity for CPU, memory, and storage resources. To demonstrate the potential of our technique, we show how a typical call graph analysis can be implemented in a distributed setting. The vision that motivates this work is that every large-scale software repository such as GitHub, BitBucket, or Visual Studio Online will be able to perform static analysis on a large scale. We experimentally validate our implementation of the distributed call graph analysis using a combination of both synthetic and real benchmarks. To show scalability, we demonstrate how the analysis presented in this paper is able to handle inputs that are almost 10 million lines of code (LOC) in size, without running out of memory. Our results show that the analysis scales well in terms of memory pressure independently of the input size, as we add more virtual machines (VMs). As the number of worker VMs increases, we observe that the analysis time generally improves as well. Lastly, we demonstrate that querying the results can be performed with a median latency of 15 ms.", "citation": "Not cited", "departments": ["University of Buenos Aires", "University of Buenos Aires", "Imperial College London"], "authors": ["Diego Garbervetsky.....http://dblp.org/pers/hd/g/Garbervetsky:Diego", "Edgardo Zoppi.....http://dblp.org/pers/hd/z/Zoppi:Edgardo", "Benjamin Livshits.....http://dblp.org/pers/hd/l/Livshits:Benjamin"], "conf": "sigsoft", "year": "2017", "pages": 12}