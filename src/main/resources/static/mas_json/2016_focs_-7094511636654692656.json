{"title": "Heavy Hitters via Cluster-Preserving Clustering.", "fields": ["turnstile", "binary logarithm", "correctness", "graph partition", "of the form"], "abstract": "In the turnstile lp heavy hitters problem with parameter e, one must maintain a high-dimensional vector xeRn subject to updates of the form update (i,\u0394) causing the change xi\u2264 \u2190 xi + \u0394, where ie[n], \u0394eR. Upon receiving a query, the goal is to report every \"heavy hitter\" ie[n] with |xi| \u2265e|x|p as part of a list L\u2286[n] of size O(1/ep), i.e. proportional to the maximum possible number of heavy hitters. For any pe(0,2] the COUNTSKETCH of [CCFC04] solves lp heavy hitters using O(e-plog n) words of space with O(log n) update time, O(nlog n) query time to output L, and whose output after any query is correct with high probability (whp) 1 - 1/poly(n) [JST11, Section 4.4]. This space bound is optimal even in the strict turnstile model [JST11] in which it is promised that xi \u2265 0 for all ie[n] at all points in the stream, but unfortunately the query time is very slow. To remedy this, the work [CM05] proposed the \"dyadic trick\" for the COUNTMIN sketch for p = 1 in the strict turnstile model, which to maintain whp correctness achieves suboptimal space O(e-1log2 n), worse update time O(log2 n), but much better query time O(e-1poly(log n)). An extension to all pe(0,2] appears in [KNPW11, Theorem 1], and can be obtained from [Pag13]. We show that this tradeoff between space and update time versus query time is unnecessary. We provide a new algorithm, EXPANDERSKETCH, which in the most general turnstile model achieves optimal O(e-plog n) space, O(log n) update time, and fast O(e-ppoly(log n)) query time, providing correctness whp. In fact, a simpler version of our algorithm for p = 1 in the strict turnstile model answers queries even faster than the \"dyadic trick\" by roughly a log n factor, dominating it in all regards. Our main innovation is an efficient reduction from the heavy hitters to a clustering problem in which each heavy hitter is encoded as some form of noisy spectral cluster in a much bigger graph, and the goal is to identify every cluster. Since every heavy hitter must be found, correctness requires that every cluster be found. We thus need a \"cluster-preserving clustering\" algorithm, that partitions the graph into clusters with the promise of not destroying any original cluster. To do this we first apply standard spectral graph partitioning, and then we use some novel combinatorial techniques to modify the cuts obtained so as to make sure that the original clusters are sufficiently preserved. Our cluster-preserving clustering may be of broader interest much beyond heavy hitters.", "citation": "Citations (10)", "departments": ["Aarhus University", "Harvard University", "Massachusetts Institute of Technology", "AT&T"], "authors": ["Kasper Green Larsen.....http://dblp.org/pers/hd/l/Larsen:Kasper_Green", "Jelani Nelson.....http://dblp.org/pers/hd/n/Nelson:Jelani", "Huy L. Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Huy_L=", "Mikkel Thorup.....http://dblp.org/pers/hd/t/Thorup:Mikkel"], "conf": "focs", "year": "2016", "pages": 10}