{"title": "A Comparative Study of Programming Languages in Rosetta Code.", "fields": ["comparison of multi paradigm programming languages", "fourth generation programming language", "programming language generations", "third generation programming language", "second generation programming language"], "abstract": "Sometimes debates on programming languages are more religious than scientific. Questions about which language is more succinct or efficient, or makes developers more productive are discussed with fervor, and their answers are too often based on anecdotes and unsubstantiated beliefs. In this study, we use the largely untapped research potential of Rosetta Code, a code repository of solutions to common programming tasks in various languages, which offers a large data set for analysis. Our study is based on 7'087 solution programs corresponding to 745 tasks in 8 widely used languages representing the major programming paradigms (procedural: C and Go, object-oriented: C# and Java, functional: F# and Haskell, scripting: Python and Ruby). Our statistical analysis reveals, most notably, that: functional and scripting languages are more concise than procedural and object-oriented languages, C is hard to beat when it comes to raw speed on large inputs, but performance differences over inputs of moderate size are less pronounced and allow even interpreted languages to be competitive, compiled strongly-typed languages, where more defects can be caught at compile time, are less prone to runtime failures than interpreted or weakly-typed languages. We discuss implications of these results for developers, language designers, and educators.", "citation": "Citations (63)", "departments": ["ETH Zurich", "ETH Zurich"], "authors": ["Sebastian Nanz.....http://dblp.org/pers/hd/n/Nanz:Sebastian", "Carlo A. Furia.....http://dblp.org/pers/hd/f/Furia:Carlo_A="], "conf": "icse", "year": "2015", "pages": 11}