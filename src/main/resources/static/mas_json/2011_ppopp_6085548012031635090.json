{"title": "OoOJava: software out-of-order execution.", "fields": ["out of order execution", "deadlock", "speedup", "race condition", "parallel programming model"], "abstract": "Developing parallel software using current tools can be challenging. Even experts find it difficult to reason about the use of locks and often accidentally introduce race conditions and deadlocks into parallel software. OoOJava is a compiler-assisted approach that leverages developer annotations along with static analysis to provide an easy-to-use deterministic parallel programming model. OoOJava extends Java with a task annotation that instructs the compiler to consider a code block for out-of-order execution. OoOJava executes tasks as soon as their data dependences are resolved and guarantees that the execution of an annotated program preserves the exact semantics of the original sequential program. We have implemented OoOJava and achieved an average speedup of 16.6x on our ten benchmarks.", "citation": "Citations (63)", "year": "2011", "departments": ["University of California, Irvine", "University of California, Irvine", "University of California, Irvine"], "conf": "ppopp", "authors": ["James Christopher Jenista.....http://dblp.org/pers/hd/j/Jenista:James_Christopher", "Yong Hun Eom.....http://dblp.org/pers/hd/e/Eom:Yong_Hun", "Brian Demsky.....http://dblp.org/pers/hd/d/Demsky:Brian"], "pages": 12}