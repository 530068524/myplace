{"title": "mClock: Handling Throughput Variability for Hypervisor IO Scheduling.", "fields": ["storage hypervisor", "hypervisor", "virtual machine", "ranging", "server"], "abstract": "Virtualized servers run a diverse set of virtual machines (VMs), ranging from interactive desktops to test and development environments and even batch workloads. Hypervisors are responsible for multiplexing the underlying hardware resources among VMs while providing them the desired degree of isolation using resource management controls. Existing methods provide many knobs for allocating CPU and memory to VMs, but support for control of IO resource allocation has been quite limited. IO resource management in a hypervisor introduces significant new challenges and needs more extensive controls than in commodity operating systems.\n\nThis paper introduces a novel algorithm for IO resource allocation in a hypervisor. Our algorithm, mClock, supports proportional-share fairness subject to minimum reservations and maximum limits on the IO allocations for VMs. We present the design of mClock and a prototype implementation inside the VMware ESX server hypervisor. Our results indicate that these rich QoS controls are quite effective in isolating VM performance and providing better application latency. We also show an adaptation of mClock (called dmClock) for a distributed storage environment, where storage is jointly provided by multiple nodes.", "citation": "Citations (204)", "departments": ["VMware", "Hewlett-Packard", "Rice University"], "authors": ["Ajay Gulati.....http://dblp.org/pers/hd/g/Gulati:Ajay", "Arif Merchant.....http://dblp.org/pers/hd/m/Merchant:Arif", "Peter J. Varman.....http://dblp.org/pers/hd/v/Varman:Peter_J="], "conf": "osdi", "year": "2010", "pages": 14}