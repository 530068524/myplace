{"title": "Conservative Concurrency in Haskell.", "fields": ["fixed point combinator", "concurrent haskell", "church encoding", "deductive lambda calculus", "hindley milner type system"], "abstract": "The calculus CHF models Concurrent Haskell extended by concurrent, implicit futures. It is a lambda and process calculus with concurrent threads, monadic concurrent evaluation, and includes a pure functional lambda-calculus PF which comprises data constructors, case-expressions, letrec expressions, and Haskell's seq. Our main result is conservativity of CHF as extension of PF. This allows us to argue that compiler optimizations and transformations from pure Haskell remain valid in Concurrent Haskell even if it is extended by futures. We also show that conservativity does no longer hold if the extension includes Concurrent Haskell and unsafeInterleaveIO.", "citation": "Citations (11)", "departments": ["Goethe University Frankfurt", "Goethe University Frankfurt"], "authors": ["David Sabel.....http://dblp.org/pers/hd/s/Sabel:David", "Manfred Schmidt-Schau\u00df.....http://dblp.org/pers/hd/s/Schmidt=Schau=szlig=:Manfred"], "conf": "lics", "year": "2012", "pages": 10}