{"title": "Low-overhead software transactional memory with progress guarantees and strong semantics.", "fields": ["software transactional memory", "concurrency control", "atomicity", "scalability", "virtual machine"], "abstract": "Software transactional memory offers an appealing alternative to locks by improving programmability, reliability, and scalability. However, existing STMs are impractical because they add high instrumentation costs and often provide weak progress guarantees and/or semantics. This paper introduces a novel STM called LarkTM that provides three significant features. (1) Its instrumentation adds low overhead except when accesses actually conflict, enabling low single-thread overhead and scaling well on low-contention workloads. (2) It uses eager concurrency control mechanisms, yet naturally supports flexible conflict resolution, enabling strong progress guarantees. (3) It naturally provides strong atomicity semantics at low cost. LarkTM's design works well for low-contention workloads, but adds significant overhead under higher contention, so we design an adaptive version of LarkTM that uses alternative concurrency control for high-contention objects. An implementation and evaluation in a Java virtual machine show that the basic and adaptive versions of LarkTM not only provide low single-thread overhead, but their multithreaded performance compares favorably with existing high-performance STMs.", "citation": "Citations (11)", "year": "2015", "departments": ["Ohio State University", "Ohio State University", "Ohio State University", "Ohio State University"], "conf": "ppopp", "authors": ["Minjia Zhang.....http://dblp.org/pers/hd/z/Zhang:Minjia", "Jipeng Huang.....http://dblp.org/pers/hd/h/Huang:Jipeng", "Man Cao.....http://dblp.org/pers/hd/c/Cao:Man", "Michael D. Bond.....http://dblp.org/pers/hd/b/Bond:Michael_D="], "pages": 12}