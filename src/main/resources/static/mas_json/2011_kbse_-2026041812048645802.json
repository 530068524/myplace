{"title": "Specifying and detecting meaningful changes in programs.", "fields": ["software development", "wish", "data mining", "grammar", "software"], "abstract": "Software developers are often interested in particular changes in programs that are relevant to their current tasks: not all changes to evolving software are equally important. However, most existing differencing tools, such as diff, notify developers of more changes than they wish to see. In this paper, we propose a technique to specify and automatically detect only those changes in programs deemed meaningful, or relevant, to a particular development task. Using four elementary annotations on the grammar of any programming language, namely Ignore, Order, Prefer and Scope, developers can specify, with limited effort, the type of change they wish to detect. Our algorithms use these annotations to transform the input programs into a normalised form, and to remove clones across different normalised programs in order to detect non-trivial and relevant differences. We evaluate our tool on a benchmark of programs to demonstrate its improved precision compared to other differencing approaches.", "citation": "Citations (11)", "departments": ["Open University", "Open University", "Open University"], "authors": ["Yijun Yu.....http://dblp.org/pers/hd/y/Yu:Yijun", "Thein Than Tun.....http://dblp.org/pers/hd/t/Tun:Thein_Than", "Bashar Nuseibeh.....http://dblp.org/pers/hd/n/Nuseibeh:Bashar"], "conf": "kbse", "year": "2011", "pages": 10}