{"title": "Reference architectures and Scrum: friends or foes?", "fields": ["software design", "empirical process", "scrum", "software requirements", "software construction"], "abstract": "Software reference architectures provide templates and guidelines for designing systems in a particular domain. Companies use them to achieve interoperability of (parts of) their software, standardization, and faster development. In contrast to system-specific software architectures that \"emerge\" during development, reference architectures dictate significant parts of the software design early on. Agile software development frameworks (such as Scrum) acknowledge changing software requirements and the need to adapt the software design accordingly. In this paper, we present lessons learned about how reference architectures interact with Scrum (the most frequently used agile process framework). These lessons are based on observing software development projects in five companies. We found that reference architectures can support good practice in Scrum: They provide enough design upfront without too much effort, reduce documentation activities, facilitate knowledge sharing, and contribute to \"architectural thinking\" of developers. However, reference architectures can impose risks or even threats to the success of Scrum (e.g., to self-organizing and motivated teams).", "citation": "Not cited", "departments": ["University of Canterbury", "Fontys University of Applied Sciences", "Fraunhofer Society", "n.n., n.n."], "authors": ["Matthias Galster.....http://dblp.org/pers/hd/g/Galster:Matthias", "Samuil Angelov.....http://dblp.org/pers/hd/a/Angelov:Samuil", "Silverio Mart\u00ednez-Fern\u00e1ndez.....http://dblp.org/pers/hd/m/Mart=iacute=nez=Fern=aacute=ndez:Silverio", "Dan Tofan.....http://dblp.org/pers/hd/t/Tofan:Dan"], "conf": "sigsoft", "year": "2017", "pages": 6}