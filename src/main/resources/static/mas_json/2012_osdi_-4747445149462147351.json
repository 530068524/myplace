{"title": "SymDrive: Testing Drivers without Devices.", "fields": ["implementation", "kernel", "compiler", "symbolic execution", "static analysis"], "abstract": "Device-driver development and testing is a complex and error-prone undertaking. For example, testing error-handling code requires simulating faulty inputs from the device. A single driver may support dozens of devices, and a developer may not have access to any of them. Consequently, many Linux driver patches include the comment \"compile tested only.\"\n\nSymDrive is a system for testing Linux and FreeBSD drivers without their devices present. The system uses symbolic execution to remove the need for hardware, and extends past tools with three new features. First, SymDrive uses static-analysis and source-to-source transformation to greatly reduce the effort of testing a new driver. Second, SymDrive checkers are ordinary C code and execute in the kernel, where they have full access to kernel and driver state. Finally, SymDrive provides an execution-tracing tool to identify how a patch changes I/O to the device and to compare device-driver implementations. In applying SymDrive to 21 Linux drivers and 5 FreeBSD drivers, we found 39 bugs.", "citation": "Citations (70)", "departments": ["University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison"], "authors": ["Matthew J. Renzelmann.....http://dblp.org/pers/hd/r/Renzelmann:Matthew_J=", "Asim Kadav.....http://dblp.org/pers/hd/k/Kadav:Asim", "Michael M. Swift.....http://dblp.org/pers/hd/s/Swift:Michael_M="], "conf": "osdi", "year": "2012", "pages": 14}