{"title": "Performance challenges in modular parallel programs.", "fields": ["haskell", "join java", "cilk", "oracle", "granularity"], "abstract": "Over the past decade, many programming languages and systems for parallel-computing have been developed, including Cilk, Fork/Join Java, Habanero Java, Parallel Haskell, Parallel ML, and X10. Although these systems raise the level of abstraction at which parallel code are written, performance continues to require the programmer to perform extensive optimizations and tuning, often by taking various architectural details into account. One such key optimization is granularity control, which requires the programmer to determine when and how parallel tasks should be sequentialized.   In this paper, we briefly describe some of the challenges associated with automatic granularity control when trying to achieve portable performance for parallel programs with arbitrary nesting of parallel constructs. We consider a result from the functional-programming community, whose starting point is to consider an \"oracle\" that can predict the work of parallel codes, and thereby control granularity. We discuss the challenges in implementing such an oracle and proving that it has the desired theoretical properties under the nested-parallel programming model.", "citation": "Not cited", "year": "2018", "departments": ["Carnegie Mellon University", "French Institute for Research in Computer Science and Automation", "University of Strasbourg", "French Institute for Research in Computer Science and Automation"], "conf": "ppopp", "authors": ["Umut A. Acar.....http://dblp.org/pers/hd/a/Acar:Umut_A=", "Vitaly Aksenov.....http://dblp.org/pers/hd/a/Aksenov:Vitaly", "Arthur Chargu\u00e9raud.....http://dblp.org/pers/hd/c/Chargu=eacute=raud:Arthur", "Mike Rainey.....http://dblp.org/pers/hd/r/Rainey:Mike"], "pages": 2}