{"title": "A Specification Language for Static Analysis of Student Exercises.", "fields": ["graph rewriting", "specification language", "software design pattern", "design pattern", "static analysis"], "abstract": "In this paper we use formal software engineering techniques to support one of the most difficult steps in software engineering: learning to use a programming language. In order to support numerous exercises of a large number of students some automatic support for checking the solutions and providing hints for the occurrence of erroneous code fragments is highly desirable to help students doing their work. For such support a specification language to describe search patterns for typical solution patterns in student exercises has been created. This language especially supports the structured description of complex search patterns. The specified patterns are transformed into graph rules, which are applied to student solutions in our testing support environment. The approach extends the work we presented in [5]. In addition to the application areas described here the search for a class of structures can be used in other areas like the check for design patterns or looking for code fragments where refactorings can be applied.", "citation": "Citations (5)", "departments": ["T-Systems"], "authors": ["Carsten K\u00f6llmann.....http://dblp.org/pers/hd/k/K=ouml=llmann:Carsten", "Michael Goedicke.....http://dblp.org/pers/hd/g/Goedicke:Michael"], "conf": "kbse", "year": "2008", "pages": 4}