{"title": "A scalable lock manager for multicores.", "fields": ["lock", "lock convoy", "giant lock", "distributed lock manager", "readers writer lock"], "abstract": "Modern implementations of DBMS software are intended to take advantage of high core counts that are becoming common in high-end servers. However, we have observed that several database platforms, including MySQL, Shore-MT, and a commercial system, exhibit throughput collapse as load increases into oversaturation (where there are more request threads than cores), even for a workload with little or no logical contention for locks, such as a read-only workload. Our analysis of MySQL identifies latch contention within the lock manager as the bottleneck responsible for this collapse.   We design a lock manager with reduced latching, implement it in MySQL, and show that it avoids the collapse and generally improves performance. Our efficient implementation of a lock manager is enabled by a staged allocation and deallocation of locks. Locks are preallocated in bulk, so that the lock manager only has to perform simple list manipulation operations during the acquire and release phases of a transaction. Deallocation of the lock data structures is also performed in bulk, which enables the use of fast implementations of lock acquisition and release as well as concurrent deadlock checking.", "citation": "Citations (31)", "year": "2013", "departments": ["NICTA", "Samsung", "University of Sydney", "NICTA", "Seoul National University"], "conf": "sigmod", "authors": ["Hyungsoo Jung.....http://dblp.org/pers/hd/j/Jung:Hyungsoo", "Hyuck Han.....http://dblp.org/pers/hd/h/Han:Hyuck", "Alan David Fekete.....http://dblp.org/pers/hd/f/Fekete:Alan_David", "Gernot Heiser.....http://dblp.org/pers/hd/h/Heiser:Gernot", "Heon Young Yeom.....http://dblp.org/pers/hd/y/Yeom:Heon_Young"], "pages": 12}