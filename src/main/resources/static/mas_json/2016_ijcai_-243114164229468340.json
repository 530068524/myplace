{"title": "Learning Higher-Order Logic Programs through Abstraction and Invention.", "fields": ["operator", "sample complexity", "predicate", "inductive logic programming", "higher order logic"], "abstract": "Many tasks in AI require the design of complex programs and representations, whether for programming robots, designing game-playing programs, or conducting textual or visual transformations. This paper explores a novel inductive logic programming approach to learn such programs from examples. To reduce the complexity of the learned programs, and thus the search for such a program, we introduce higher-order operations involving an alternation of Abstraction and Invention. Abstractions are described using logic program definitions containing higher-order predicate variables. Inventions involve the construction of definitions for the predicate variables used in the Abstractions. The use of Abstractions extends the Meta-Interpretive Learning framework and is supported by the use of a user-extendable set of higher-order operators, such as map, until, and ifthenelse. Using these operators reduces the textual complexity required to express target classes of programs. We provide sample complexity results which indicate that the approach leads to reductions in the numbers of examples required to reach high predictive accuracy, as well as significant reductions in overall learning time. Our experiments demonstrate increased accuracy and reduced learning times in all cases. We believe that this paper is the first in the literature to demonstrate the efficiency and accuracy advantages involved in the use of higher-order abstractions.", "citation": "Citations (10)", "year": "2016", "departments": ["Imperial College London", "Imperial College London"], "conf": "ijcai", "authors": ["Andrew Cropper.....http://dblp.org/pers/hd/c/Cropper:Andrew", "Stephen H. Muggleton.....http://dblp.org/pers/hd/m/Muggleton:Stephen_H="], "pages": 7}