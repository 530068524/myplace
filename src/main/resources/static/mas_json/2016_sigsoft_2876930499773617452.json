{"title": "Code relatives: detecting similarly behaving software.", "fields": ["self modifying code", "redundant code", "dead code elimination", "dead code", "unreachable code"], "abstract": "Detecting \u201csimilar code\u201d is useful for many software engineering tasks. Current tools can help detect code with statically similar syntactic and\u2013or semantic features (code clones) and with dynamically similar functional input/output (simions). Unfortunately, some code fragments that behave similarly at the finer granularity of their execution traces may be ignored. In this paper, we propose the term \u201ccode relatives\u201d to refer to code with similar execution behavior. We define code relatives and then present DyCLINK, our approach to detecting code relatives within and across codebases. DyCLINK records instruction-level traces from sample executions, organizes the traces into instruction-level dynamic dependence graphs, and employs our specialized subgraph matching algorithm to efficiently compare the executions of candidate code relatives. In our experiments, DyCLINK analyzed 422+ million prospective subgraph matches in only 43 minutes. We compared DyCLINK to one static code clone detector from the community and to our implementation of a dynamic simion detector. The results show that DyCLINK effectively detects code relatives with a reasonable analysis time.", "citation": "Citations (9)", "departments": ["Columbia University", "Columbia University", "Columbia University", "Columbia University", "Columbia University"], "authors": ["Fang-Hsiang Su.....http://dblp.org/pers/hd/s/Su:Fang=Hsiang", "Jonathan Bell.....http://dblp.org/pers/hd/b/Bell_0001:Jonathan", "Kenneth Harvey.....http://dblp.org/pers/hd/h/Harvey:Kenneth", "Simha Sethumadhavan.....http://dblp.org/pers/hd/s/Sethumadhavan:Simha", "Gail E. Kaiser.....http://dblp.org/pers/hd/k/Kaiser:Gail_E=", "Tony Jebara.....http://dblp.org/pers/hd/j/Jebara:Tony"], "conf": "sigsoft", "year": "2016", "pages": 13}