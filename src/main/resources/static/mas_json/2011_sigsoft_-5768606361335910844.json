{"title": "Understanding failures through facts.", "fields": ["debugging", "abstraction", "crash", "generalization", "software"], "abstract": "Why does my program crash?\"--This ever recurring question of software debugging drives the developer during the analysis of the failure. Complex defects are impossible to automatically identify; this can only be left to human judgment. But what we can do is empower the developer to make an informed decision, by helping her understand the failure. To fully comprehend a failure, one may need to consider many different aspects such as the range of the input parameters and the program's structure and runtime behavior. I propose an approach that gathers a variety of such facts from a given failing execution. To examine the correlation of those facts to the failure, it produces additional executions that differ in as few facts as possible. Then the approach creates generalizations and abstractions over the correlating facts. These explain different aspects of the failure and thus help the developer understand and eventually fix the underlying defect.", "citation": "Citations (1)", "departments": ["Saarland University"], "authors": ["Jeremias R\u00f6\u00dfler.....http://dblp.org/pers/hd/r/R=ouml==szlig=ler:Jeremias"], "conf": "sigsoft", "year": "2011", "pages": 4}