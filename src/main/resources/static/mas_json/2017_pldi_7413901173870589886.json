{"title": "Alive-Infer: data-driven precondition inference for peephole optimizations in LLVM.", "fields": ["data driven", "peephole optimization", "precondition", "predicate transformer semantics", "superoptimization"], "abstract": "Peephole optimizations are a common source of compiler bugs. Compiler developers typically transform an incorrect peephole optimization into a valid one by strengthening the precondition. This process is challenging and tedious. This paper proposes Alive-Infer, a data-driven approach that infers preconditions for peephole optimizations expressed in Alive. Alive-Infer generates positive and negative examples for an optimization, enumerates predicates on-demand, and learns a set of predicates that separate the positive and negative examples. Alive-Infer repeats this process until it finds a precondition that ensures the validity of the optimization. Alive-Infer reports both a weakest precondition and a set of succinct partial preconditions to the developer. Our prototype generates preconditions that are weaker than LLVM\u2019s preconditions for 73 optimizations in the Alive suite. We also demonstrate the applicability of this technique to generalize 54 optimization patterns generated by Souper, an LLVM IR\u2013based superoptimizer.", "citation": "Citations (1)", "departments": ["Rutgers University", "Rutgers University"], "authors": ["David Menendez.....http://dblp.org/pers/hd/m/Menendez:David", "Santosh Nagarakatte.....http://dblp.org/pers/hd/n/Nagarakatte:Santosh"], "conf": "pldi", "year": "2017", "pages": 15}