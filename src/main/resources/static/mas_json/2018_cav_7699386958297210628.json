{"title": "Layered Concurrent Programs.", "fields": ["recursion", "theoretical computer science", "mathematical proof", "notation", "syntax"], "abstract": "We present layered concurrent programs, a compact and expressive notation for specifying refinement proofs of concurrent programs. A layered concurrent program specifies a sequence of connected concurrent programs, from most concrete to most abstract, such that common parts of different programs are written exactly once. These programs are expressed in the ordinary syntax of imperative concurrent programs using gated atomic actions, sequencing, choice, and (recursive) procedure calls. Each concurrent program is automatically extracted from the layered program. We reduce refinement to the safety of a sequence of concurrent checker programs, one each to justify the connection between every two consecutive concurrent programs. These checker programs are also automatically extracted from the layered program. Layered concurrent programs have been implemented in the Civl verifier which has been successfully used for the verification of several complex concurrent programs.", "citation": "Not cited", "year": "2018", "departments": ["Institute of Science and Technology Austria", "Microsoft"], "conf": "cav", "authors": ["Bernhard Kragl.....http://dblp.org/pers/hd/k/Kragl:Bernhard", "Shaz Qadeer.....http://dblp.org/pers/hd/q/Qadeer:Shaz"], "pages": 24}