{"title": "Transaction communicators: enabling cooperation among concurrent transactions.", "fields": ["online transaction processing", "compensating transaction", "transaction processing system", "serializability", "extreme transaction processing"], "abstract": "In this paper, we propose to extend transactional memory with  transaction communicators , special objects through which concurrent transactions can communicate: changes by one transaction to a communicator can be seen by concurrent transactions before the first transaction commits. Although isolation of transactions is compromised by such communication, we constrain the effects of this compromise by tracking dependencies among transactions, and preventing any transaction from committing unless every transaction whose changes it saw also commits. In particular, mutually dependent transactions must commit or abort together, and transactions that do not communicate remain isolated. To help programmers synchronize accesses to communicators, we also provide special  communicator-isolating transactions , which ensure isolation even for accesses to communicators. We propose language features to help programmers express the communicator constructs. We implemented a novel communicators-enabled STM runtime in the Maxine VM. Our preliminary evaluation demonstrates that communicators can be used in diverse settings to improve the performance of transactional programs, and to empower programmers with the ability to safely express within transactions important programming idioms that fundamentally require compromise of transaction isolation (e.g., CSP-style synchronous communication).", "citation": "Citations (12)", "year": "2011", "departments": ["Oracle Corporation", "Oracle Corporation"], "conf": "ppopp", "authors": ["Victor Luchangco.....http://dblp.org/pers/hd/l/Luchangco:Victor", "Virendra J. Marathe.....http://dblp.org/pers/hd/m/Marathe:Virendra_J="], "pages": 10}