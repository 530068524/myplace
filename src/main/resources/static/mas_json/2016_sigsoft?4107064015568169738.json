{"title": "Python probabilistic type inference with natural language support.", "fields": ["python", "inference", "type inference", "probabilistic logic", "abstract interpretation"], "abstract": "We propose a novel type inference technique for Python programs. Type inference is difficult for Python programs due to their heavy dependence on external APIs and the dynamic language features. We observe that Python source code often contains a lot of type hints such as attribute accesses and variable names. However, such type hints are not reliable. We hence propose to use probabilistic inference to allow the beliefs of individual type hints to be propagated, aggregated, and eventually converge on probabilities of variable types. Our results show that our technique substantially outperforms a state-of-the-art Python type inference engine based on abstract interpretation.", "citation": "Citations (5)", "departments": ["Nanjing University", "Purdue University", "Nanjing University", "Purdue University", "Nanjing University"], "authors": ["Zhaogui Xu.....http://dblp.org/pers/hd/x/Xu:Zhaogui", "Xiangyu Zhang.....http://dblp.org/pers/hd/z/Zhang_0001:Xiangyu", "Lin Chen.....http://dblp.org/pers/hd/c/Chen_0015:Lin", "Kexin Pei.....http://dblp.org/pers/hd/p/Pei:Kexin", "Baowen Xu.....http://dblp.org/pers/hd/x/Xu:Baowen"], "conf": "sigsoft", "year": "2016", "pages": 12}