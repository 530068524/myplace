{"title": "UFO: predictive concurrency use-after-free detection.", "fields": ["dangling pointer", "compromise", "software system", "thread", "instruction set"], "abstract": "Use-After-Free (UAF) vulnerabilities are caused by the program operating on a dangling pointer and can be exploited to compromise critical software systems. While there have been many tools to mitigate UAF vulnerabilities, UAF remains one of the most common attack vectors. UAF is particularly difficult to detect in concurrent programs, in which a UAF may only occur with rare thread schedules. In this paper, we present a novel technique, UFO, that can precisely  predict  UAFs based on a single observed execution trace with a provably higher detection capability than existing techniques with no false positives. The key technical advancement of UFO is an extended maximal thread causality model that captures the largest possible set of feasible traces that can be inferred from a given multithreaded execution trace. By formulating UAF detection as a constraint solving problem atop this model, we can explore a much larger thread scheduling space than classical happens-before based techniques. We have evaluated UFO on several real-world large complex C/C++ programs including Chromium and FireFox. UFO scales to real-world systems with hundreds of millions of events in their execution and has detected a large number of real concurrency UAFs.", "citation": "Not cited", "departments": ["Texas A&M University"], "authors": ["Jeff Huang.....http://dblp.org/pers/hd/h/Huang_0001:Jeff"], "conf": "icse", "year": "2018", "pages": 11}