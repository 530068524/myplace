{"title": "Sustainable software design.", "fields": ["moore s law", "software design description", "software sizing", "software peer review", "incentive", "software design", "rendering", "package development process", "resource oriented architecture", "planned obsolescence"], "abstract": "Although design plays a central role in software development, the information produced in this activity is often left to progressively evaporate as the result of software evolution, loss of artifacts, or the fading of related knowledge held by the development team. This paper introduces the concept of sustainability for software design, and calls for its integration into the existing catalog of design quality attributes. Applied to software design, sustainability conveys the idea that a particular set of design decisions and their rationale can be succinctly reflected in the host technology and/or described in documentation in a way that is checkable for conformance with the code and generally resistant to evaporation. The paper discusses the relation between sustainability and existing research areas in software engineering, and highlights future research challenges related to sustainable software design.", "citation": "Not cited", "departments": ["McGill University", "Leeds Beckett University"], "authors": ["Martin P. Robillard.....http://dblp.org/pers/hd/r/Robillard:Martin_P="], "conf": "sigsoft", "year": "2016", "pages": 4}