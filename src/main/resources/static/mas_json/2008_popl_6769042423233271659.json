{"title": "High-level small-step operational semantics for transactions.", "fields": ["distributed transaction", "compensating transaction", "operational semantics", "transactional memory", "transaction processing"], "abstract": "Software transactions have received significant attention as a way to simplify shared-memory concurrent programming, but insufficient focus has been given to the precise meaning of software transactions or their interaction with other language features. This work begins to rectify that situation by presenting a family of formal languages that model a wide variety of behaviors for software transactions. These languages abstract away implementation details of transactional memory, providing high-level definitions suitable for programming languages. We use small-step semantics in order to represent explicitly the interleaved execution of threads that is necessary to investigate pertinent issues.   We demonstrate the value of our core approach to modeling transactions by investigating two issues in depth. First, we consider parallel nesting, in which parallelism and transactions can nest arbitrarily. Second, we present multiple models for weak isolation, in which nontransactional code can violate the isolation of a transaction. For both, type-and-effect systems let us soundly and statically restrict what computation can occur inside or outside a transaction. We prove some key language-equivalence theorems to confirm that under sufficient static restrictions, in particular that each mutable memory location is used outside transactions or inside transactions (but not both), no program can determine whether the language implementation uses weak isolation or strong isolation.", "citation": "Citations (133)", "departments": ["University of Washington", "University of Washington"], "authors": ["Katherine F. Moore.....http://dblp.org/pers/hd/m/Moore:Katherine_F=", "Dan Grossman.....http://dblp.org/pers/hd/g/Grossman:Dan"], "conf": "popl", "year": "2008", "pages": 12}