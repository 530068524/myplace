{"title": "Predicting recurring crash stacks.", "fields": ["theoretical computer science", "crash", "stack", "computer security", "software"], "abstract": "Software crash is one of the most severe bug manifestations and developers want to fix crash bugs quickly and efficiently. The Crash Reporting System (CRS) is widely deployed for this purpose. Even with the help of CRS, fixes are largely by manual effort, which is error-prone and results in recurring crashes even after the fixes. Our empirical study reveals that 48% of fixed crashes in Firefox CRS are recurring mostly due to incomplete or missing fixes. It is desirable to automatically check if a crash fix misses some reported crash traces at the time of the first fix. This paper proposes an automatic technique to predict recurring crash traces. We first extract stack traces and then compare them with bug fix locations to predict recurring crash traces. Evaluation using the real Firefox crash data shows that the approach yields reasonable accuracy in prediction of recurring crashes. Had our technique been deployed earlier, more than 2,225 crashes in Firefox 3.6 could have been avoided.", "citation": "Citations (19)", "year": "2012", "departments": ["Hong Kong University of Science and Technology", "Hong Kong University of Science and Technology"], "conf": "kbse", "authors": ["Hyunmin Seo.....http://dblp.org/pers/hd/s/Seo:Hyunmin", "Sunghun Kim.....http://dblp.org/pers/hd/k/Kim_0001:Sunghun"], "pages": 10}