{"title": "Multi-Pass High-Level Presolving.", "fields": ["computer science", "exploit", "theoretical computer science", "preprocessor", "compiler"], "abstract": "Presolving is a preprocessing step performed by optimisation solvers to improve performance. However, these solvers cannot easily exploit high-level model structure as available in modelling languages such as MiniZinc or Essence.\n\nWe present an integrated approach that performs presolving as a separate pass during the compilation from high-level optimisation models to solver-level programs. The compiler produces a representation of the model that is suitable for presolving by retaining some of the high-level structure. It then uses information learned during presolving to generate the final solver-level representation.\n\nOur approach introduces the novel concept of variable paths that identify variables which are common across multiple compilation passes, increasing the amount of shared information. We show that this approach can lead to both faster compilation and more efficient solver-level programs.", "citation": "Citations (7)", "departments": ["Monash University", "Monash University"], "authors": ["Kevin Leo.....http://dblp.org/pers/hd/l/Leo:Kevin", "Guido Tack.....http://dblp.org/pers/hd/t/Tack:Guido"], "conf": "ijcai", "year": "2015", "pages": 7}