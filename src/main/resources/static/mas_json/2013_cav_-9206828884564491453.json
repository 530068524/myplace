{"title": "Validating Library Usage Interactively.", "fields": ["abductive reasoning", "equivalence", "software suite", "programmer", "solver"], "abstract": "Programmers who develop large, mature applications often want to optimize the performance of their program without changing its semantics. They often do so by changing how their program invokes a library function or a function implemented in another module of the program. Unfortunately, once a programmer makes such an optimization, it is difficult for him to validate that the optimization does not change the semantics of the original program, because the original and optimized programs are equivalent only due to subtle, implicit assumptions about library functions called by the programs.\n\nIn this work, we present an interactive program analysis that a programmer can apply to validate that his optimization does not change his program's semantics. Our analysis casts the problem of validating an optimization as an abductive inference problem in the context of checking program equivalence. Our analysis solves the abductive equivalence problem by interacting with the programmer so that the programmer implements a solver for a logical theory that models library functions invoked by the program. We have used our analysis to validate optimizations of real-world, mature applications: the Apache software suite, the Mozilla Suite, and the MySQL database.", "citation": "Citations (1)", "year": "2013", "departments": ["University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison", "University of Wisconsin-Madison"], "conf": "cav", "authors": ["William R. Harris.....http://dblp.org/pers/hd/h/Harris:William_R=", "Guoliang Jin.....http://dblp.org/pers/hd/j/Jin:Guoliang", "Shan Lu.....http://dblp.org/pers/hd/l/Lu:Shan", "Somesh Jha.....http://dblp.org/pers/hd/j/Jha:Somesh"], "pages": 17}