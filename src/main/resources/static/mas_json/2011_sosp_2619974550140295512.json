{"title": "Efficient deterministic multithreading through schedule relaxation.", "fields": ["determinism", "symbolic execution", "multithreading", "program slicing", "thread"], "abstract": "Deterministic multithreading (DMT)  eliminates many pernicious software problems caused by nondeterminism. It works by constraining a program to repeat the same thread interleavings, or  schedules , when given same input. Despite much recent research, it remains an open challenge to build  both deterministic and efficient  DMT systems for general programs on commodity hardware. To deterministically resolve a data race, a DMT system must enforce a deterministic schedule of shared memory accesses, or  mem-schedule , which can incur prohibitive overhead. By using schedules consisting only of synchronization operations, or  sync-schedule , this overhead can be avoided. However, a sync-schedule is deterministic only for race-free programs, but most programs have races.   Our key insight is that races tend to occur only within minor portions of an execution, and a dominant majority of the execution is still race-free. Thus, we can resort to a mem-schedule only for the \"racy\" portions and enforce a sync-schedule otherwise, combining the efficiency of sync-schedules and the determinism of mem-schedules. We call these combined schedules  hybrid schedules .   Based on this insight, we have built Peregrine, an efficient deterministic multithreading system. When a program first runs on an input, Peregrine records an execution trace. It then  relaxes  this trace into a hybrid schedule and reuses the schedule on future compatible inputs efficiently and deterministically. Peregrine further improves efficiency with two new techniques:  determinism-preserving slicing  to generalize a schedule to more inputs while preserving determinism, and  schedule-guided simplification  to precisely analyze a program according to a specific schedule. Our evaluation on a diverse set of programs shows that Peregrine is deterministic and efficient, and can frequently reuse schedules for half of the evaluated programs.", "citation": "Citations (87)", "departments": ["Columbia University", "Columbia University", "Columbia University", "Columbia University", "Columbia University"], "authors": ["Heming Cui.....http://dblp.org/pers/hd/c/Cui:Heming", "Jingyue Wu.....http://dblp.org/pers/hd/w/Wu:Jingyue", "John Gallagher.....http://dblp.org/pers/hd/g/Gallagher:John", "Huayang Guo.....http://dblp.org/pers/hd/g/Guo:Huayang", "Junfeng Yang.....http://dblp.org/pers/hd/y/Yang:Junfeng"], "conf": "sosp", "year": "2011", "pages": 15}