{"title": "Parallel bug-finding in concurrent programs via reduced interleaving instances.", "fields": ["interleaving", "exploit", "small number", "software bug", "instruction set"], "abstract": "Concurrency poses a major challenge for program verification, but it can also offer an opportunity to scale when subproblems can be analysed in parallel. We exploit this opportunity here and use a parametrizable code-to-code translation to generate a set of simpler program instances, each capturing a reduced set of the original program's interleavings. These instances can then be checked independently in parallel. Our approach does not depend on the tool that is chosen for the final analysis, is compatible with weak memory models, and amplifies the effectiveness of existing tools, making them find bugs faster and with fewer resources. We use Lazy-CSeq as an off-the-shelf final verifier to demonstrate that our approach is able, already with a small number of cores, to find bugs in the hardest known concurrency benchmarks in a matter of minutes, whereas other dynamic and static tools fail to do so in hours.", "citation": "Citations (1)", "departments": ["University of Southampton", "University of Sussex", "Stellenbosch University", "University of Southampton", "Universita degl ...  Salerno, Italy"], "authors": ["Truc L. Nguyen.....http://dblp.org/pers/hd/n/Nguyen:Truc_L=", "Peter Schrammel.....http://dblp.org/pers/hd/s/Schrammel:Peter", "Bernd Fischer.....http://dblp.org/pers/hd/f/Fischer_0002:Bernd", "Salvatore La Torre.....http://dblp.org/pers/hd/t/Torre:Salvatore_La", "Gennaro Parlato.....http://dblp.org/pers/hd/p/Parlato:Gennaro"], "conf": "kbse", "year": "2017", "pages": 12}