{"title": "FEATUREHOUSE: Language-independent, automated software composition.", "fields": ["software development", "function composition", "software system", "software maintenance", "superimposition"], "abstract": "Superimposition is a composition technique that has been applied successfully in many areas of software development. Although superimposition is a general-purpose concept, it has been (re)invented and implemented individually for various kinds of software artifacts. We unify languages and tools that rely on superimposition by using the language-independent model of feature structure trees (FSTs). On the basis of the FST model, we propose a general approach to the composition of software artifacts written in different languages, Furthermore, we offer a supporting framework and tool chain, called FEATUREHOUSE. We use attribute grammars to automate the integration of additional languages, in particular, we have integrated Java, C#, C, Haskell, JavaCC, and XML. Several case studies demonstrate the practicality and scalability of our approach and reveal insights into the properties a language must have in order to be ready for superimposition.", "citation": "Citations (253)", "departments": ["University of Passau", "University of Passau", "School of Compu ... deburg, Germany"], "authors": ["Sven Apel.....http://dblp.org/pers/hd/a/Apel:Sven", "Christian K\u00e4stner.....http://dblp.org/pers/hd/k/K=auml=stner:Christian", "Christian Lengauer.....http://dblp.org/pers/hd/l/Lengauer:Christian"], "conf": "icse", "year": "2009", "pages": 11}