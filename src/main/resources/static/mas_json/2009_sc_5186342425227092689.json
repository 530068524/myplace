{"title": "Auto-tuning 3-D FFT library for CUDA GPUs.", "fields": ["padding", "thread", "basic linear algebra subprograms", "cuda", "mathematical software"], "abstract": "Existing implementations of FFTs on GPUs are optimized for specific transform sizes like powers of two, and exhibit unstable and peaky performance i.e., do not perform as well in other sizes that appear in practice. Our new auto-tuning 3-D FFT on CUDA generates high performance CUDA kernels for FFTs of varying transform sizes, alleviating this problem. Although auto-tuning has been implemented on GPUs for dense kernels such as DGEMM and stencils, this is the first instance that has been applied comprehensively to bandwidth intensive and complex kernels such as 3-D FFTs. Bandwidth intensive optimizations such as selecting the number of threads and inserting padding to avoid bank conflicts on shared memory are systematically applied. Our resulting autotuner is fast and results in performance that essentially beats all 3-D FFT implementations on a single processor to date, and moreover exhibits stable performance irrespective of problem sizes or the underlying GPU hardware.", "citation": "Citations (140)", "year": "2009", "departments": ["Tokyo Institute of Technology", "National Institute of Informatics"], "conf": "sc", "authors": ["Akira Nukada.....http://dblp.org/pers/hd/n/Nukada:Akira", "Satoshi Matsuoka.....http://dblp.org/pers/hd/m/Matsuoka:Satoshi"], "pages": -1}