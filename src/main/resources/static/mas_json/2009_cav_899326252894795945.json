{"title": "Reducing Test Inputs Using Information Partitions.", "fields": ["packet processing", "merge", "symbolic execution", "assertion", "concolic testing"], "abstract": "Automatic symbolic techniques to generate test inputs, for example, through concolic execution, suffer from  path explosion  : the number of paths to be symbolically solved for grows exponentially with the number of inputs. In many applications though, the inputs can be partitioned into \"non-interfering\" blocks such that symbolically solving for each input block while keeping all other blocks fixed to concrete values can find the same set of assertion violations as symbolically solving for the entire input. This can greatly reduce the number of paths to be solved (in the best case, from exponentially many to linearly many in the number of inputs). We present an algorithm that combines test input generation by concolic execution with dynamic computation and maintenance of information flow between inputs. Our algorithm iteratively constructs a partition of the inputs, starting with the finest (all inputs separate) and merging blocks if a dependency is detected between variables in distinct input blocks during test generation. Instead of exploring all paths of the program, our algorithm separately explores paths for each block (while fixing variables in other blocks to random values). In the end, the algorithm outputs an input partition and a set of test inputs such that (a) inputs in different blocks do not have any dependencies between them, and (b) the set of tests provides equivalent coverage with respect to finding assertion violations as full concolic execution. We have implemented our algorithm in the Splat test generation tool. We demonstrate that our reduction is effective by generating tests for four examples in packet processing and operating system code.", "citation": "Citations (53)", "year": "2009", "departments": ["University of California, Los Angeles", "University of California, Los Angeles"], "conf": "cav", "authors": ["Rupak Majumdar.....http://dblp.org/pers/hd/m/Majumdar:Rupak", "Ru-Gang Xu.....http://dblp.org/pers/hd/x/Xu:Ru=Gang"], "pages": 15}