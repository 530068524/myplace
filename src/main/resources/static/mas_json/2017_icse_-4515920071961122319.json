{"title": "Making malory behave maliciously: targeted fuzzing of android execution environments.", "fields": ["extensibility", "malware", "fuzz testing", "event driven programming", "javascript"], "abstract": "Android applications, or apps, provide useful features to end-users, but many apps also contain malicious behavior. Modern malware makes understanding such behavior challenging by behaving maliciously only under particular conditions. For example, a malware app may check whether it runs on a real device and not an emulator, in a particular country, and alongside a specific target app, such as a vulnerable banking app. To observe the malicious behavior, a security analyst must find out and emulate all these app-specific constraints. This paper presents FuzzDroid, a framework for automatically generating an Android execution environment where an app exposes its malicious behavior. The key idea is to combine an extensible set of static and dynamic analyses through a search-based algorithm that steers the app toward a configurable target location. On recent malware, the approach reaches the target location in 75% of the apps. In total, we reach 240 code locations within an average time of only one minute. To reach these code locations, FuzzDroid generates 106 different environments, too many for a human analyst to create manually.", "citation": "Citations (6)", "departments": ["Technische Universit\u00e4t Darmstadt", "Technische Universit\u00e4t Darmstadt", "Fraunhofer Society", "Technische Universit\u00e4t Darmstadt"], "authors": ["Siegfried Rasthofer.....http://dblp.org/pers/hd/r/Rasthofer:Siegfried", "Steven Arzt.....http://dblp.org/pers/hd/a/Arzt:Steven", "Stefan Triller.....http://dblp.org/pers/hd/t/Triller:Stefan", "Michael Pradel.....http://dblp.org/pers/hd/p/Pradel:Michael"], "conf": "icse", "year": "2017", "pages": 12}