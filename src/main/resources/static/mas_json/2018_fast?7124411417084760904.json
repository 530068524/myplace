{"title": "Barrier-Enabled IO Stack for Flash Storage.", "fields": ["ext4", "interleaving", "device file", "journaling file system", "cache"], "abstract": "This work is dedicated to eliminating the overhead required for guaranteeing the storage order in the modern IO stack. The existing block device adopts a prohibitively expensive approach in ensuring the storage order among write requests: interleaving the write requests with Transfer-and-Flush. Exploiting the cache barrier command for Flash storage, we overhaul the IO scheduler, the dispatch module, and the filesystem so that these layers are orchestrated to preserve the ordering condition imposed by the application with which the associated data blocks are made durable. The key ingredients of Barrier-Enabled IO stack are Epoch-based IO scheduling, Order-Preserving Dispatch, and Dual-Mode Journaling. Barrier-enabled IO stack can control the storage order without Transfer-and-Flush overhead. We implement the barrier-enabled IO stack in server as well as in mobile platforms. SQLite performance increases by 270% and 75%, in server and in smartphone, respectively. In a server storage, BarrierFS brings as much as by 43x and by 73x performance gain in MySQL and SQLite, respectively, against EXT4 via relaxing the durability of a transaction.", "citation": "Not cited", "departments": ["Hanyang University", "Texas A&M University", "Hanyang University", "Hanyang University", "Hanyang University"], "authors": ["Youjip Won.....http://dblp.org/pers/hd/w/Won:Youjip", "Jaemin Jung.....http://dblp.org/pers/hd/j/Jung:Jaemin", "Gyeongyeol Choi.....http://dblp.org/pers/hd/c/Choi:Gyeongyeol", "Joontaek Oh.....http://dblp.org/pers/hd/o/Oh:Joontaek", "Seongbae Son.....http://dblp.org/pers/hd/s/Son:Seongbae", "Joo Young Hwang.....http://dblp.org/pers/hd/h/Hwang:Joo_Young", "Sangyeun Cho.....http://dblp.org/pers/hd/c/Cho:Sangyeun"], "conf": "fast", "year": "2018", "pages": 16}