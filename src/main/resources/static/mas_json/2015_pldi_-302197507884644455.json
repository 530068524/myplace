{"title": "Verifying read-copy-update in a logic for weak memory.", "fields": ["formal proof", "correctness", "linux kernel", "read copy update", "sequential consistency"], "abstract": "Read-Copy-Update (RCU) is a technique for letting multiple readers safely access a data structure while a writer concurrently modifies it. It is used heavily in the Linux kernel in situations where fast reads are important and writes are infrequent. Optimized implementations rely only on the weaker memory orderings provided by modern hardware, avoiding the need for expensive synchronization instructions (such as memory barriers) as much as possible. Using GPS, a recently developed program logic for the C/C++11 memory model, we verify an implementation of RCU for a singly-linked list assuming \"release-acquire\" semantics. Although release-acquire synchronization is stronger than what is required by real RCU implementations, it is nonetheless significantly weaker than the assumption of sequential consistency made in prior work on RCU verification. Ours is the first formal proof of correctness for an implementation of RCU under a weak memory model.", "citation": "Citations (17)", "departments": ["Carnegie Mellon University", "MPI-SWS, Germany", "MPI-SWS, Germany"], "authors": ["Joseph Tassarotti.....http://dblp.org/pers/hd/t/Tassarotti:Joseph", "Derek Dreyer.....http://dblp.org/pers/hd/d/Dreyer:Derek", "Viktor Vafeiadis.....http://dblp.org/pers/hd/v/Vafeiadis:Viktor"], "conf": "pldi", "year": "2015", "pages": 11}