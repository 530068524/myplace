{"title": "Similarity search and locality sensitive hashing using ternary content addressable memories.", "fields": ["cisco catalyst", "locality sensitive hashing", "nearest neighbor search", "queries per second", "cell probe model"], "abstract": "Similarity search methods are widely used as kernels in various data mining and machine learning applications including those in computational biology, web search/clustering. Nearest neighbor search (NNS) algorithms are often used to retrieve similar entries, given a query. While there exist efficient techniques for exact query lookup using hashing, similarity search using exact nearest neighbors suffers from a \"curse of dimensionality\", i.e. for high dimensional spaces, best known solutions offer little improvement over brute force search and thus are unsuitable for large scale streaming applications. Fast solutions to the approximate NNS problem include Locality Sensitive Hashing (LSH) based techniques, which need storage polynomial in  n  with exponent greater than 1, and query time sublinear, but still polynomial in  n , where  n  is the size of the database. In this work we present a new technique of solving the approximate NNS problem in Euclidean space using a Ternary Content Addressable Memory (TCAM), which needs near linear space and has O(1) query time. In fact, this method also works around the best known lower bounds in the cell probe model for the query time using a data structure near linear in the size of the data base.   TCAMs are high performance associative memories widely used in networking applications such as address lookups and access control lists. A TCAM can query for a bit vector within a database of ternary vectors, where every bit position represents 0, 1 or *. The * is a wild card representing either a 0 or a 1. We leverage TCAMs to design a variant of LSH, called Ternary Locality Sensitive Hashing (TLSH) wherein we hash database entries represented by vectors in the Euclidean space into {0,1,*}. By using the added functionality of a TLSH scheme with respect to the * character, we solve an instance of the approximate nearest neighbor problem with 1 TCAM access and storage nearly linear in the size of the database. We validate our claims with extensive simulations using both real world (Wikipedia) as well as synthetic (but illustrative) datasets. We observe that using a TCAM of width 288 bits, it is possible to solve the approximate NNS problem on a database of size 1 million points with high accuracy. Finally, we design an experiment with TCAMs within an enterprise ethernet switch (Cisco Catalyst 4500) to validate that TLSH can be used to perform 1.5 million queries per second per 1Gb/s port. We believe that this work can open new avenues in very high speed data mining.", "citation": "Citations (27)", "year": "2010", "departments": ["Stanford University", "Stanford University", "Twitter", "Cisco Systems, Inc."], "conf": "sigmod", "authors": ["Rajendra Shinde.....http://dblp.org/pers/hd/s/Shinde:Rajendra", "Ashish Goel.....http://dblp.org/pers/hd/g/Goel:Ashish", "Pankaj Gupta.....http://dblp.org/pers/hd/g/Gupta:Pankaj", "Debojyoti Dutta.....http://dblp.org/pers/hd/d/Dutta:Debojyoti"], "pages": 12}