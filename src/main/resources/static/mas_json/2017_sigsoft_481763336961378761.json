{"title": "Adaptively generating high quality fixes for atomicity violations.", "fields": ["serialization", "deadlock", "atomicity", "struct", "lock"], "abstract": "It is difficult to fix atomicity violations correctly. Existing gate lock algorithm (GLA) simply inserts gate locks to serialize exe-cutions, which may introduce performance bugs and deadlocks. Synthesized context-aware gate locks (by Grail) require complex source code synthesis. We propose \uf061Fixer to adaptively fix ato-micity violations. It firstly analyses the lock acquisitions of an atomicity violation. Then it either adjusts the existing lock scope or inserts a gate lock. The former addresses cases where some locks are used but fail to provide atomic accesses. For the latter, it infers the visibility (being global or a field of a class/struct) of the gate lock such that the lock only protects related accesses. For both cases, \uf061Fixer further eliminates new lock orders to avoid introducing deadlocks. Of course, \uf061Fixer can produce both kinds of fixes on atomicity violations with locks. The experi-mental results on 15 previously used atomicity violations show that: \uf061Fixer correctly fixed all 15 atomicity violations without introducing deadlocks. However, GLA and Grail both intro-duced 5 deadlocks. HFix (that only targets on fixing certain types of atomicity violations) only fixed 2 atomicity violations and introduced 4 deadlocks. \uf061Fixer also provides an alternative way to insert gate locks (by inserting gate locks with proper visibility) considering fix acceptance.", "citation": "Citations (2)", "departments": ["Chinese Academy of Sciences", "Chinese Academy of Sciences", "Harbin Engineering University"], "authors": ["Yan Cai.....http://dblp.org/pers/hd/c/Cai_0001:Yan", "Lingwei Cao.....http://dblp.org/pers/hd/c/Cao:Lingwei", "Jing Zhao.....http://dblp.org/pers/hd/z/Zhao:Jing"], "conf": "sigsoft", "year": "2017", "pages": 12}