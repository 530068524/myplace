{"title": "Towards automatic restrictification of CUDA kernel arguments.", "fields": ["restrict", "pointer aliasing", "optimizing compiler", "alias analysis", "alias"], "abstract": "Many   procedural   languages ,  such   as   C   and   C ++,  have   pointers .  Pointers   are   powerful   and   convenient ,  but   pointer   aliasing   still   hinders   compiler   optimizations ,  despite   several   years   of   research   on   pointer   aliasing   analysis .  Because   alias   analysis   is   a   difficult   task   and   results   are   not   always   accurate ,  the   ISO   C   standard  99  has   added   a   keyword ,  named   restrict   to   allow   the   programmer   to   specify   non \u2212 aliasing   as   an   aid   to   the   compiler \u2032 s   optimizer   and   to   thereby   possibly   improve   performance .  The   task   of   annotating   pointers   with   the   restrict   keyword   is   still   left   to   the   programmer .  This   task   is ,  in   general ,  tedious   and   prone   to   errors   especially   since   the   C   does   not   perform   any   verification   to   ensure   that   restrict   keyword   is   not   misplaced .  In   this   paper   we   present   a   static   analysis   tool   that  ( i )  finds   CUDA   kernels   call   sites   in   which   actual   parameters   do   not   alias ; ( ii )  clones   the   kernels   called   at   such   sites ; ( iii )  after   performing   an   alias   analysis   in   these   kernels ,  adds   the   restrict   keyword   to   their   arguments ;  and  ( iv )  replaces   the   original   kernel   call   by   a   call   to   the   optimized   clone   whenever   possible .", "citation": "Not cited", "departments": ["University of Paris-Sud"], "authors": ["Rokiatou Diarra.....http://dblp.org/pers/hd/d/Diarra:Rokiatou"], "conf": "kbse", "year": "2018", "pages": 4}