{"title": "Ironclad C++: a library-augmented type-safe subset of c++.", "fields": ["compatibility of c and c", "compromise", "typedef", "memory safety", "type safety"], "abstract": "The C++ programming language remains widely used, despite inheriting many unsafe features from C---features that often lead to failures of type or memory safety that manifest as buffer overflows, use-after-free vulnerabilities, or abstraction violations. Malicious attackers can exploit such violations to compromise application and system security.   This paper introduces Ironclad C++, an approach to bringing the benefits of type and memory safety to C++. Ironclad C++ is, in essence, a library-augmented, type-safe subset of C++. All Ironclad C++ programs are valid C++ programs that can be compiled using standard, off-the-shelf C++ compilers. However, not all valid C++ programs are valid Ironclad C++ programs: a syntactic source-code validator statically prevents the use of unsafe C++ features. To enforce safety properties that are difficult to check statically, Ironclad C++ applies dynamic checks via templated ``smart pointer'' classes.   Using a semi-automatic refactoring tool, we have ported nearly 50K lines of code to Ironclad C++. These benchmarks incur a performance overhead of 12% on average, compared to the original unsafe C++ code.", "citation": "Citations (2)", "departments": ["University of Pennsylvania", "University of Pennsylvania", "Rutgers University", "University of Pennsylvania", "University of Pennsylvania"], "authors": ["Christian DeLozier.....http://dblp.org/pers/hd/d/DeLozier:Christian", "Richard A. Eisenberg.....http://dblp.org/pers/hd/e/Eisenberg:Richard_A=", "Santosh Nagarakatte.....http://dblp.org/pers/hd/n/Nagarakatte:Santosh", "Peter-Michael Osera.....http://dblp.org/pers/hd/o/Osera:Peter=Michael", "Milo M. K. Martin.....http://dblp.org/pers/hd/m/Martin:Milo_M=_K=", "Steve Zdancewic.....http://dblp.org/pers/hd/z/Zdancewic:Steve"], "conf": "oopsla", "year": "2013", "pages": 18}