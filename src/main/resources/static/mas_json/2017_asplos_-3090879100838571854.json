{"title": "Towards Practical Default-On Multi-Core Record/Replay.", "fields": ["multi core processor", "replay system", "source code", "overhead", "compiler"], "abstract": "We present Castor, a record/replay system for multi-core applications that provides consistently low and predictable overheads. With Castor, developers can leave record and replay on by default, making it practical to record and reproduce production bugs, or employ fault tolerance to recover from hardware failures.   Castor is inspired by several observations: First, an efficient mechanism for logging non-deterministic events is critical for recording demanding workloads with low overhead. Through careful use of hardware we were able to increase log throughput by 10x or more, e.g., we could record a server handling 10x more requests per second for the same record overhead. Second, most applications can be recorded without modifying source code by using the compiler to instrument language level sources of non-determinism, in conjunction with more familiar techniques like shared library interposition. Third, while Castor cannot deterministically replay all data races, this limitation is generally unimportant in practice, contrary to what prior work has assumed.   Castor currently supports applications written in C, C++, and Go on FreeBSD. We have evaluated Castor on parallel and server workloads, including a commercial implementation of memcached in Go, which runs Castor in production.", "citation": "Citations (6)", "year": "2017", "departments": ["Stanford University", "Stanford University", "Stanford University", "Stanford University", "Stanford University"], "conf": "asplos", "authors": ["Ali Jos\u00e9 Mashtizadeh.....http://dblp.org/pers/hd/m/Mashtizadeh:Ali_Jos=eacute=", "Tal Garfinkel.....http://dblp.org/pers/hd/g/Garfinkel:Tal", "David Terei.....http://dblp.org/pers/hd/t/Terei:David", "David Mazi\u00e8res.....http://dblp.org/pers/hd/m/Mazi=egrave=res:David", "Mendel Rosenblum.....http://dblp.org/pers/hd/r/Rosenblum:Mendel"], "pages": 16}