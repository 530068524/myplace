{"title": "Living on the edge: rapid-toggling probes with cross-modification on x86.", "fields": ["thread", "cache", "x86", "machine code", "future proof"], "abstract": "Dynamic probe injection is now a widely used method to debug performance in production. Current techniques for dynamic probing of native code, however, rely on an expensive stop-the-world approach: binary changes are made within a safe state of the program---typically in which all the program threads are halted---to ensure that another thread executing the modified code region doesn't step into a partially-modified code. Stop-the-world patching is not scalable. In contrast, low overhead, scalable probes that can be rapidly toggled on and off in-place would open up new use cases for statistical profilers and language implementations, even traditional ahead-of-time, native-code compilers. In this paper we introduce safe cross-modification protocols that mutate x86 code between threads but do not require quiescing threads, resulting in radically lower overheads than existing solutions. A key problem is handling instructions that straddle cache lines. We empirically evaluate existing x86 architectures to derive a safe policy given current processor behavior, and we argue that future architectures should clarify the semantics of instruction fetching to make cheap cross-modification easier and future proof.", "citation": "Citations (2)", "departments": ["Indiana University", "Indiana University", "Indiana University", "Indiana University"], "authors": ["Buddhika Chamith.....http://dblp.org/pers/hd/c/Chamith:Buddhika", "Bo Joel Svensson.....http://dblp.org/pers/hd/s/Svensson:Bo_Joel", "Luke Dalessandro.....http://dblp.org/pers/hd/d/Dalessandro:Luke", "Ryan R. Newton.....http://dblp.org/pers/hd/n/Newton:Ryan_R="], "conf": "pldi", "year": "2016", "pages": 11}