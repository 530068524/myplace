{"title": "Augmenting Counterexample-Guided Abstraction Refinement with Proof Templates.", "fields": ["tree traversal", "buffer overflow", "mathematical proof", "software verification", "predicate abstraction"], "abstract": "Existing software model checkers based on predicate abstraction and refinement typically perform poorly at verifying the absence of buffer overflows, with analyses depending on the sizes of the arrays checked. We observe that many of these analyses can be made efficient by providing proof templates for common array traversal idioms idioms, which guide the model checker towards proofs that are independent of array size. We have integrated this technique into our software model checker, PtYasm, and have evaluated our approach on a set of testcases derived from the Verisec suite, demonstrating that our technique enables verification of the safety of array accesses independently of array size.", "citation": "Citations (1)", "departments": ["University of Toronto", "University of Toronto", "University of Toronto", "Carnegie Mellon University", "University of Toronto"], "authors": ["Thomas E. Hart.....http://dblp.org/pers/hd/h/Hart:Thomas_E=", "Kelvin Ku.....http://dblp.org/pers/hd/k/Ku:Kelvin", "Arie Gurfinkel.....http://dblp.org/pers/hd/g/Gurfinkel:Arie", "Marsha Chechik.....http://dblp.org/pers/hd/c/Chechik:Marsha", "David Lie.....http://dblp.org/pers/hd/l/Lie:David"], "conf": "kbse", "year": "2008", "pages": 4}