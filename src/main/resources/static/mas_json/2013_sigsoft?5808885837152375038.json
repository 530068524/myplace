{"title": "Termination proofs from tests.", "fields": ["counterexample", "for loop", "test suite", "mathematical proof", "simple extension"], "abstract": "We show how a test suite for a sequential program can be profitably used to construct a termination proof. In particular, we describe an algorithm TpT for proving termination of a program based on information derived from testing it. TpT iteratively calls two phases: (a) an infer phase, and (b) a validate phase. In the infer phase, machine learning, in particular, linear regression is used to efficiently compute a candidate loop bound for every loop in the program. These loop bounds are verified for correctness by an off-the-shelf checker. If a loop bound is invalid, then the safety checker provides a test or a counterexample that is used to generate more data which is subsequently used by the next infer phase to compute better estimates for loop bounds. On the other hand, if all loop bounds are valid, then we have a proof of termination. We also describe a simple extension to our approach that allows us to infer polynomial loop bounds automatically. We have evaluated TpT on two benchmark sets, micro-benchmarks obtained from recent literature on program termination, and Windows device drivers. Our results are promising -- on the micro-benchmarks, we show that TpT is able to prove termination on 15% more benchmarks than any previously known technique, and our evaluation on Windows device drivers demonstrates TpT's ability to analyze and scale to real world applications.", "citation": "Citations (18)", "departments": ["Microsoft", "Stanford University"], "authors": ["Aditya V. Nori.....http://dblp.org/pers/hd/n/Nori:Aditya_V=", "Rahul Sharma.....http://dblp.org/pers/hd/s/Sharma_0001:Rahul"], "conf": "sigsoft", "year": "2013", "pages": 11}