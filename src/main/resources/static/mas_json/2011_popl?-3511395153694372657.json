{"title": "Space overhead bounds for dynamic memory management with partial compaction.", "fields": ["foil method", "dynamic random access memory", "runtime system", "c dynamic memory allocation", "worst case scenario", "binary logarithm", "memory management"], "abstract": "Dynamic memory allocation is ubiquitous in today's runtime environments. Allocation and deallocation of objects during program execution may cause fragmentation and foil the program's ability to allocate objects. Robson [1971] has shown that a worst-case scenario can create a space overhead within a factor of log  n  of the space that is actually required by the program, where  n  is the size of the largest possible object. Compaction can eliminate fragmentation, but is too costly to be run frequently. Many runtime systems employ partial compaction, in which only a small fraction of the allocated objects are moved. Partial compaction reduces some of the existing fragmentation at an acceptable cost. In this article we study the effectiveness of partial compaction and provide the first rigorous lower and upper bounds on its effectiveness in reducing fragmentation at a low cost.", "citation": "Citations (10)", "departments": ["Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology"], "authors": ["Anna Bendersky.....http://dblp.org/pers/hd/b/Bendersky:Anna", "Erez Petrank.....http://dblp.org/pers/hd/p/Petrank:Erez"], "conf": "popl", "year": "2011", "pages": 12}