{"title": "Scalable variable and data type detection in a binary rewriter.", "fields": ["debugging", "executable", "correctness", "x86", "compiler"], "abstract": "We present scalable static analyses to recover variables, data types, and function prototypes from stripped x86 executables (without symbol or debug information) and obtain a functional intermediate representation (IR) for analysis and rewriting purposes. Our techniques on average run 352X faster than current techniques and still have the same precision. This enables analyzing executables as large as millions of instructions in minutes which is not possible using existing techniques. Our techniques can recover variables allocated to the floating point stack unlike current techniques. We have integrated our techniques to obtain a compiler level IR that works correctly if recompiled and produces the same output as the input executable. We demonstrate scalability, precision and correctness of our proposed techniques by evaluating them on the complete SPEC2006 benchmarks suite.", "citation": "Citations (37)", "departments": ["University of Maryland, College Park", "University of Maryland, College Park", "University of Maryland, College Park", "University of Maryland, College Park", "University of Maryland, College Park"], "authors": ["Khaled Elwazeer.....http://dblp.org/pers/hd/e/Elwazeer:Khaled", "Kapil Anand.....http://dblp.org/pers/hd/a/Anand:Kapil", "Aparna Kotha.....http://dblp.org/pers/hd/k/Kotha:Aparna", "Matthew Smithson.....http://dblp.org/pers/hd/s/Smithson:Matthew", "Rajeev Barua.....http://dblp.org/pers/hd/b/Barua:Rajeev"], "conf": "pldi", "year": "2013", "pages": 10}