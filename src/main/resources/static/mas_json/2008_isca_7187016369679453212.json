{"title": "Fetch-Criticality Reduction through Control Independence.", "fields": ["exploit", "critical path method", "criticality", "fetch", "failure mode effects and criticality analysis"], "abstract": "Architectures that exploit control independence (CI) promise to remove in-order fetch bottlenecks, like branch mispredicts, instruction-cache misses and fetch unit stalls, from the critical path of single-threaded execution. By exposing more fetch options, however, CI architectures also expose more performance tradeoffs. These tradeoffs make it hard to design policies that deliver good performance.This paper presents a criticality-based model for reasoning about CI architectures, and uses that model to describe the tradeoffs between gains from control independence versus increased costs of honoring data dependences. The model is then used to derive the design of a criticality-aware task selection policy that strikes the right balance between fetch-criticality and execute-criticality. Finally, the papervalidates the model by attacking branch-misprediction induced fetch-criticality through the above derived spawnpolicy. This leads to as high as 100% improvements in performance, and in the region of 40% or more improvements for four of the benchmarks where this is the main problem. Criticality analysis shows that this improvement arises due to reduced fetch-criticality.", "citation": "Citations (4)", "departments": ["University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign", "University of Illinois at Urbana\u2013Champaign"], "authors": ["Mayank Agarwal.....http://dblp.org/pers/hd/a/Agarwal:Mayank", "Nitin Navale.....http://dblp.org/pers/hd/n/Navale:Nitin", "Kshitiz Malik.....http://dblp.org/pers/hd/m/Malik:Kshitiz", "Matthew I. Frank.....http://dblp.org/pers/hd/f/Frank:Matthew_I="], "conf": "isca", "year": "2008", "pages": 12}