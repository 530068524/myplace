{"title": "Using Types for Software Verification.", "fields": ["verification and validation", "software construction", "software verification", "verification", "software reliability testing"], "abstract": "Traditional software verification algorithms work by using a combination of Floyd-Hoare Logics, Model Checking and Abstract Interpretation, to infer (and check) suitable program invariants. However, these techniques are problematic in the presence of complex (but ubiquitous) constructs like generic data structures, first-class functions.", "citation": "Not cited", "year": "2011", "departments": ["University of California, San Diego"], "conf": "cav", "authors": ["Ranjit Jhala.....http://dblp.org/pers/hd/j/Jhala:Ranjit"], "pages": 1}