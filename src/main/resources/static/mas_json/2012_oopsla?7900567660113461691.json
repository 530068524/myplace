{"title": "Eval begone!: semi-automated removal of eval from javascript programs.", "fields": ["open world assumption", "safer", "small number", "executable", "eval"], "abstract": "Eval endows JavaScript developers with great power. It allows developers and end-users, by turning text into executable code, to seamlessly extend and customize the behavior of deployed applications as they are running. With great power comes great responsibility, though not in our experience. In previous work we demonstrated through a large corpus study that programmers wield that power in rather irresponsible and arbitrary ways. We showed that most calls to eval fall into a small number of very predictable patterns. We argued that those patterns could easily be recognized by an automated algorithm and that they could almost always be replaced with safer JavaScript idioms. In this paper we set out to validate our claim by designing and implementing a tool, which we call Evalorizer, that can assist programmers in getting rid of their unneeded evals. We use the tool to remove eval from a real-world website and validated our approach over logs taken from the top 100 websites with a success rate over 97% under an open world assumption.", "citation": "Citations (31)", "departments": ["Purdue University", "Purdue University", "Purdue University", "Purdue University"], "authors": ["Fadi Meawad.....http://dblp.org/pers/hd/m/Meawad:Fadi", "Gregor Richards.....http://dblp.org/pers/hd/r/Richards:Gregor", "Flor\u00e9al Morandat.....http://dblp.org/pers/hd/m/Morandat:Flor=eacute=al", "Jan Vitek.....http://dblp.org/pers/hd/v/Vitek:Jan"], "conf": "oopsla", "year": "2012", "pages": 14}