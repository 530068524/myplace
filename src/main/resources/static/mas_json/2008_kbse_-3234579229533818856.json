{"title": "Heuristics for Scalable Dynamic Test Generation.", "fields": ["source lines of code", "control flow graph", "software system", "concolic testing", "code coverage"], "abstract": "Recently there has been great success in using symbolic execution to automatically generate test inputs for small software systems. A primary challenge in scaling such approaches to larger programs is the combinatorial explosion of the path space. It is likely that sophisticated strategies for searching this path space are needed to generate inputs that effectively test large programs (by, e.g., achieving significant branch coverage). We present several such heuristic search strategies, including a novel strategy guided by the control flow graph of the program under test. We have implemented these strategies in CREST, our open source concolic testing tool for C, and evaluated them on two widely-used software tools, grep 2.2 (15 K lines of code) and Vim 5.7 (150 K lines). On these benchmarks, the presented heuristics achieve significantly greater branch coverage on the same testing budget than concolic testing with a traditional depth-first search strategy.", "citation": "Citations (402)", "departments": ["University of California, Berkeley", "University of California, Berkeley"], "authors": ["Jacob Burnim.....http://dblp.org/pers/hd/b/Burnim:Jacob", "Koushik Sen.....http://dblp.org/pers/hd/s/Sen:Koushik"], "conf": "kbse", "year": "2008", "pages": 4}