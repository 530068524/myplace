{"title": "Layout Lock: A Scalable Locking Paradigm for Concurrent Data Layout Modifications.", "fields": ["lock", "dynamic data", "binary search tree", "scalability", "concurrent data structure"], "abstract": "Data-structures can benefit from dynamic data layout modifications when the size or the shape of the data structure changes during the execution, or when different phases in the program execute different workloads. However, in a modern multi-core environment, layout modifications involve costly synchronization overhead. In this paper we propose a novel layout lock that incurs a negligible overhead for reads and a small overhead for updates of the data structure. We then demonstrate the benefits of layout changes and also the advantages of the layout lock as its supporting synchronization mechanism for two data structures. In particular, we propose a concurrent binary search tree, and a concurrent array set, that benefit from concurrent layout modifications using the proposed layout lock. Experience demonstrates performance advantages and integration simplicity.", "citation": "Not cited", "year": "2017", "departments": ["Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology", "Technion \u2013 Israel Institute of Technology"], "conf": "ppopp", "authors": ["Nachshon Cohen.....http://dblp.org/pers/hd/c/Cohen:Nachshon", "Arie Tal.....http://dblp.org/pers/hd/t/Tal:Arie", "Erez Petrank.....http://dblp.org/pers/hd/p/Petrank:Erez"], "pages": 13}