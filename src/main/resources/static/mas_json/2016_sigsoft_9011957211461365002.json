{"title": "Python predictive analysis for bug detection.", "fields": ["software development", "python", "program analysis", "theoretical computer science", "debugging"], "abstract": "Python is a popular dynamic language that allows quick software development. However, Python program analysis engines are largely lacking. In this paper, we present a Python predictive analysis. It first collects the trace of an execution, and then encodes the trace and unexecuted branches to symbolic constraints. Symbolic variables are introduced to denote input values, their dynamic types, and attribute sets, to reason about their variations. Solving the constraints identifies bugs and their triggering inputs. Our evaluation shows that the technique is highly effective in analyzing real-world complex programs with a lot of dynamic features and external library calls, due to its sophisticated encoding design based on traces. It identifies 46 bugs from 11 real-world projects, with 16 new bugs. All reported bugs are true positives.", "citation": "Citations (2)", "departments": ["Nanjing University", "Purdue University", "Purdue University", "Nanjing University"], "authors": ["Zhaogui Xu.....http://dblp.org/pers/hd/x/Xu:Zhaogui", "Peng Liu.....http://dblp.org/pers/hd/l/Liu_0010:Peng", "Xiangyu Zhang.....http://dblp.org/pers/hd/z/Zhang_0001:Xiangyu", "Baowen Xu.....http://dblp.org/pers/hd/x/Xu:Baowen"], "conf": "sigsoft", "year": "2016", "pages": 12}